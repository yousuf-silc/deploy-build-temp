{"version":3,"file":"static/js/826.acbf563e.chunk.js","mappings":"yOAuCA,EAlC+B,SAAHA,GAAsE,IAADC,EAAAC,EAA/DC,EAAUH,EAAVG,WAAYC,EAASJ,EAATI,UAAWC,EAAeL,EAAfK,gBAAiBC,EAAgBN,EAAhBM,iBAElEC,GAA6BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IAEpFG,GAA0C,OAA1BH,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,YAAaC,EAAAA,GAAyBR,EAAY,EAAG,GACjGS,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAE1DC,EAAQC,EAAAA,GAAAA,IAAiD,OAA1BR,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,UAE3DK,EAAU,CACdC,cAAoC,QAApBhB,EAAAY,EAAcK,cAAM,IAAAjB,GAApBA,EAAsBgB,cAAmC,QAAtBf,EAAEW,EAAcK,cAAM,IAAAhB,OAAA,EAApBA,EAAsBe,cAAcb,GAAY,IAOvG,OACEe,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAW,WAAAC,OAAaT,GACxBU,GAAE,2BAAAD,OAA6Bb,GAC/BI,MAAK,WAAAS,OAAaT,EAAK,KAAAS,OAAIb,GAC3Be,SAAS,IACTC,KAAK,GACLC,KAAK,gBACLC,MAAsB,OAAfvB,QAAe,IAAfA,OAAe,EAAfA,EAAiBY,cACxBY,WAdS,SAAHC,GAAuB,IAAlBH,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MACzBtB,EAAiB,CAACqB,KAAAA,EAAMC,MAAAA,EAAOzB,WAAAA,GACjC,EAaU4B,WAAYf,KACd,cAAAO,OAXkBb,GAc5B,E,oBCqBA,EArD2B,SAAHV,GAA6B,IAADC,EAAAC,EAAtB8B,EAAehC,EAAfgC,gBAEpBzB,GAA6BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACpFM,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAUlE,OAREoB,EAAAA,EAAAA,YAAU,WAER,OAAO,WACLD,EAAgB,CAAEL,KAAM,oBAAqBC,MAAO,GACtD,CACF,GAAG,KAIHM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4Cf,SAAA,EACvDc,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oCAAmCf,SAAA,CAAC,0BAAsBD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UAC9Ec,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBf,SAAA,EAC9BD,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,oBACLH,GAAG,2BACHa,QAAQ,IACRC,IAAK,EACLC,QAA2D,KAAxB,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiC,mBACrCX,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,oBACLH,GAAG,2BACHa,QAAQ,IACRC,IAAK,EACLC,QAA2D,KAAxB,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiC,mBACrCX,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,oBACLH,GAAG,6BACHa,QAAQ,IACRC,IAAK,EACLC,QAA2D,KAAxB,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiC,mBACrCX,WAAYG,OAGN,OAAbnB,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,GAArBA,EAAuBuC,mBAAmBrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UAClEqB,EAAAA,EAAAA,GAA4B,OAAb5B,QAAa,IAAbA,GAAqB,QAARX,EAAbW,EAAeK,cAAM,IAAAhB,OAAR,EAAbA,EAAuBsC,qBACnC,MAERrB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,0BAAyBf,UACpCD,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,eAAcf,SAAC,kFAIxC,ECtBA,EA9B0C,SAAHpB,GAA6B,IAAvB0C,EAAe1C,EAAf0C,gBAEnCnC,GAA6BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACpFM,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAUlE,OAREoB,EAAAA,EAAAA,YAAU,WAER,OAAO,WACLS,EAAgB,CAAEf,KAAM,wCAAyCC,MAAO,IAC1E,CACF,GAAG,KAIHT,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAvB,UACID,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,wCACZE,GAAG,wCACHV,MAAM,wCACNW,SAAS,IACTC,KAAK,GACLC,KAAK,wCACLC,OAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BqC,wCAAyC,GAC5Ef,WAAYa,EACZX,WAAYlB,EAAcK,UAItC,ECkHA,EAvIiB,SAAHlB,GAA8C,IAADC,EAAAC,EAAvC2C,EAAY7C,EAAZ6C,aAAcC,EAAkB9C,EAAlB8C,mBAExBvC,GAA6BC,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACrFM,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAE1DC,EAAQC,EAAAA,GAAAA,IAAiD,OAA1BR,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,UAE3DoC,EAAqB,SAACC,GAAoB,IAADC,EAKZC,EAH3BC,EAAM,GACJC,GAAuC,OAA1B7C,QAA0B,IAA1BA,GAA4C,QAAlB0C,EAA1B1C,EAA4B8C,wBAAgB,IAAAJ,OAAlB,EAA1BA,EAA8CK,SAAU,EAE3E,GAAGF,EAAaJ,EAOZ,OANAG,EAAgC,OAA1B5C,QAA0B,IAA1BA,GAA4C,QAAlB2C,EAA1B3C,EAA4B8C,wBAAgB,IAAAH,OAAlB,EAA1BA,EAA8CK,QAAO,SAACC,EAAMC,GAAK,OAAMA,EAAQ,GAAMT,CAAc,SAEzGH,EAAa,CACTlB,KAAK,mBACLC,OAAK8B,EAAAA,EAAAA,GAAKP,KAGX,GAAGC,IAAeJ,EAAlB,CAGP,IAAMW,EAASX,EAAiBI,EAChCD,GAAGO,EAAAA,EAAAA,GAAiC,OAA1BnD,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B8C,kBAEtC,IAAMO,EAASC,MAAMC,KAAK,CAAER,OAAQK,IAAU,kBAAAI,EAAAA,EAAAA,GAAC,CAAD,EACvCC,EAAAA,EAA+C,IAGtDnB,EAAa,CACTlB,KAAK,mBACLC,MAAM,GAADL,QAAAmC,EAAAA,EAAAA,GAAKP,GAAQS,IAVtB,CAaJ,EAEM5B,EAAkB,SAAHF,GAAsB,IAAjBH,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MACtBqC,EAAcrC,GAASsC,SAAStC,GACtCiB,EAAa,CAAElB,KAAAA,EAAMC,MAAOqC,IAChB,sBAATtC,EACCsC,GAAelB,EAAmBkB,GAErB,aAATtC,IACJmB,EAAmB,CACfnB,KAAK,gBACLC,MAAO,GACPzB,WAAY,IAEhB4C,EAAmB,GAE3B,EAEML,EAAkB,SAAHyB,GAAsB,IAAjBxC,EAAIwC,EAAJxC,KAAMC,EAAKuC,EAALvC,MAC5BiB,EAAa,CAAClB,KAAAA,EAAMC,MAAAA,GACxB,EAqBF,OACEM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBf,SAAA,EAC/Bc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4Cf,SAAA,EACvDc,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oCAAmCf,SAAA,CAAC,aAASD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UACjED,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,WACLH,GAAG,sBACHa,QAAQ,yBACRC,IAAK1B,EAAAA,GACL2B,SAAmC,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,YAAaC,EAAAA,GAClDiB,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,WACLH,GAAG,0BACHa,QAAQ,0BACRC,IAAK8B,EAAAA,GACL7B,SAAmC,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,YAAayD,EAAAA,GAClDvC,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,WACLH,GAAG,wCACHa,QAAQ,wCACRC,IAAK+B,EAAAA,GACL9B,SAAmC,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,YAAa0D,EAAAA,GAClDxC,WAAYG,IAEF,OAAbnB,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,GAArBA,EAAuBU,UAAUQ,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UAC3DqB,EAAAA,EAAAA,GAA4B,OAAb5B,QAAa,IAAbA,GAAqB,QAARX,EAAbW,EAAeK,cAAM,IAAAhB,OAAR,EAAbA,EAAuBS,YACjC,SAGe,OAA1BJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,YAAaC,EAAAA,IAAyBO,EAAAA,EAAAA,KAACmD,EAAkB,CAACtC,gBAAiBA,IAAqB,MAE7HE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBf,SAAA,CAtDZ,WAAO,IAADmD,EAElC,OAAiC,OAA1BhE,QAA0B,IAA1BA,GAA4C,QAAlBgE,EAA1BhE,EAA4B8C,wBAAgB,IAAAkB,OAAlB,EAA1BA,EAA8CC,KAAI,SAACC,EAAMhB,GAC5D,IACMiB,EADYjB,EAAQ,EAGxB,OAAOtC,EAAAA,EAAAA,KAACwD,EAAsB,CAEpBxE,WAAYuE,EACZrE,gBAAiBoE,EACjBnE,iBAAkBwC,EAClB1C,UAAWqD,GAJNiB,EAQrB,GAEJ,CAyCSE,IAC0B,OAA1BrE,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,YAAa0D,EAAAA,IAC1ClD,EAAAA,EAAAA,KAAC0D,EAAiC,CAACnC,gBAAiBA,IAAqB,MAEzEvB,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAW,cAAAC,OAAgBT,GAC3BU,GAAG,mBACHV,MAAK,cAAAS,OAAgBT,GACrBW,SAAS,IACTC,KAAK,GACLC,KAAK,mBACLC,OAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BuE,mBAAoB,GACvDjD,WAAYa,EACZX,WAAYlB,EAAcK,cAK1C,ECpFA,EAtD4B,SAAHlB,GAAwE,IAADC,EAAAC,EAAjEC,EAAUH,EAAVG,WAAYC,EAASJ,EAATI,UAAWC,EAAeL,EAAfK,gBAAiByC,EAAkB9C,EAAlB8C,mBAC7DpC,EAAgBN,EAAY,EAC5BS,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAE1DN,GAA6BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACpFO,EAAQC,EAAAA,GAAAA,IAAiD,OAA1BR,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,UAE3DK,EAAU,CACZ+D,kBAAwC,QAApB9E,EAAAY,EAAcK,cAAM,IAAAjB,GAApBA,EAAsB8E,kBAAuC,QAAtB7E,EAAEW,EAAcK,cAAM,IAAAhB,OAAA,EAApBA,EAAsB6E,kBAAkB3E,GAAY,IAG/G4B,EAAkB,SAAHF,GAASA,EAAJH,KAAiB,IAAXC,EAAKE,EAALF,MACtBqC,EAAcrC,GAASsC,SAAStC,GACtCkB,EAAmB,CAACnB,KAAM,oBAAqBC,MAAOqC,EAAa9D,WAAAA,GACvE,EAEF,OACE+B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4Cf,SAAA,EACvDD,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,oCAAmCf,SAAA,GAAAG,OAAKT,EAAK,KAAAS,OAAIb,MAE/DwB,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACID,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAI,qBAAAJ,OAAuBb,GAC3Bc,GAAE,gBAAAD,OAAkBb,GACpB2B,QAAO,QAAAd,OAAUT,EAAK,8CACtBwB,IAAK0C,EAAAA,GACLzC,SAAwB,OAAflC,QAAe,IAAfA,OAAe,EAAfA,EAAiB0E,qBAAsBC,EAAAA,GAChDnD,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAI,qBAAAJ,OAAuBb,GAC3Bc,GAAE,gBAAAD,OAAkBb,GACpBgB,KAAK,GACLW,QAAO,QAAAd,OAAUT,EAAK,uGACtBwB,IAAK2C,EAAAA,GACL1C,SAAwB,OAAflC,QAAe,IAAfA,OAAe,EAAfA,EAAiB0E,qBAAsBE,EAAAA,GAChDpD,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAI,qBAAAJ,OAAuBb,GAC3Bc,GAAE,kBAAAD,OAAoBb,GACtB2B,QAAO,QAAAd,OAAUT,EAAK,4DACtBwB,IAAK4C,EAAAA,GACL3C,SAAwB,OAAflC,QAAe,IAAfA,OAAe,EAAfA,EAAiB0E,qBAAsBG,EAAAA,GAChDrD,WAAYG,IAER,OAAPhB,QAAO,IAAPA,GAAAA,EAAS+D,mBAAmB5D,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UACtDqB,EAAAA,EAAAA,GAAsB,OAAPzB,QAAO,IAAPA,OAAO,EAAPA,EAAS+D,qBACnB,UACN,cAAAxD,OAhCqEb,GAmCnF,ECpBA,EAjCyB,SAAHV,GAAgC,IAA1B8C,EAAkB9C,EAAlB8C,mBAEpBvC,GAA6BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IAEpFO,EAAQC,EAAAA,GAAAA,IAAiD,OAA1BR,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,UAqBjE,OACEuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBf,SAAA,EAC/Bc,EAAAA,EAAAA,MAAA,MAAIC,UAAU,+BAA8Bf,SAAA,CAAEN,EAAM,eArB3B,WAAO,IAADmC,EAEnC,OAAiC,OAA1B1C,QAA0B,IAA1BA,GAA4C,QAAlB0C,EAA1B1C,EAA4B8C,wBAAgB,IAAAJ,OAAlB,EAA1BA,EAA8CuB,KAAI,SAACC,EAAMhB,GAC5D,IACMiB,EADYjB,EAAQ,EAGxB,OAAOtC,EAAAA,EAAAA,KAACgE,EAAmB,CAEjBhF,WAAYuE,EACZrE,gBAAiBoE,EACjB3B,mBAAoBA,EACpB1C,UAAWqD,GAJNiB,EAQrB,GAEF,CAKOU,KAGT,E,8ECyCA,MApEA,SAA4BpF,GAAqB,IAADC,EAAAC,EAAlBwC,EAAe1C,EAAf0C,gBAEpB2C,EAAUC,MAASC,SACnBhF,GAA6BC,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACrFM,GAAgBL,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMI,aAAa,IACjE2E,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAoCL,EAAAA,EAAAA,UAAS,CAACM,KAAK,GAAIC,OAAO,KAAIC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAA3DI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAgB,SAAHtE,GAAuB,IAAlBH,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MAC1Bc,EAAgB,CAACf,KAAAA,EAAMC,MAAAA,GAC3B,EAEMyE,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAvC,GAAA,IAAAwC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAoC,GAA7BV,EAAIxC,EAAJwC,KAAgBxC,EAAVhE,WAAUyG,EAAAzC,EAAE0C,SAAAA,OAAQ,IAAAD,EAAC,GAAEA,GACrDD,EAAK,CAADQ,EAAAE,KAAA,SAG2B,OADxBP,EAAW,IAAIQ,UACZC,OAAO,OAAQZ,GAAMQ,EAAAE,KAAA,GACDG,EAAAA,EAAAA,IAAuBV,GAAU,KAAD,EAAAC,EAAAI,EAAAM,KAAtDT,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAChBD,GAAWZ,EAAc,CAACzE,KAAK,2BAA4BC,MAAMqF,IAGjEJ,GAAYhB,GAAgB,SAAC6B,GACzB,OAAOA,EAASlD,KAAI,SAAChB,GACjB,OAAGA,EAAKuC,KAAKpE,OAASkF,GAClB9C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWP,GAAI,IAAEwC,OAAOgB,EAASW,EAAAA,GAAUC,EAAAA,KAExCpE,CACX,GACJ,IAGAqD,GAAYV,GAAc,SAAC0B,GAAS,MAAI,CAAC9B,KAAc,OAAT8B,QAAS,IAATA,OAAS,EAATA,EAAW9B,KAAMC,OAAOgB,EAASW,EAAAA,GAAUC,EAAAA,GAAO,IAAG,yBAAAT,EAAAW,OAAA,GAAApB,EAAA,KAE1G,gBArBoBqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAuBvB,OACE/F,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACIc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCf,SAAA,EAC3Cc,EAAAA,EAAAA,MAAA,MAAAd,SAAA,CAAI,2BAAuBD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UACjCD,EAAAA,EAAAA,KAAC+G,EAAAA,EAAuB,CACpBC,aAAwC,OAA1B5H,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B6H,yBAC1C/B,gBAAiBA,EACjBT,aAAcA,EACdC,gBAAiBA,EACjBK,WAAYA,EACZC,cAAeA,EACfhG,WAAY,IAEF,OAAbU,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,GAArBA,EAAuBmI,0BAA0BjH,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UACzEqB,EAAAA,EAAAA,GAA4B,OAAb5B,QAAa,IAAbA,GAAqB,QAARX,EAAbW,EAAeK,cAAM,IAAAhB,OAAR,EAAbA,EAAuBkI,4BACnC,SAGZjH,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,aACZ+G,UAAU,OACVvH,MAAM,OACNwH,QAAQ,IACR3G,KAAK,oBACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BgI,kBACnC1G,WAAYa,EACZ8F,QAAgB,OAAPnD,QAAO,IAAPA,OAAO,EAAPA,EAASoD,MAAM,KAAK,GAC7B1G,WAAYlB,EAAcK,WAItC,ECxCA,MA/BA,SAA0BlB,GAAqB,IAAnB0C,EAAe1C,EAAf0C,gBAClBnC,GAA6BC,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACrFM,GAAgBL,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAEjE,OACIqB,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACID,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,iBACZE,GAAG,iBACHV,MAAM,iBACNW,SAAS,IACTE,KAAK,oBACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BmI,kBACnC7G,WAAYa,EACZX,WAAYlB,EAAcK,UAG9BC,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,oBACZE,GAAG,yBACHV,MAAM,yBACNW,SAAS,IACTE,KAAK,yBACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BoI,uBACnC9G,WAAYa,EACZX,WAAYlB,EAAcK,WAI1C,E,UCOA,MAlCA,SAAyBlB,GAAgC,IAADC,EAAAC,EAAA0I,EAA7BC,EAA0B7I,EAA1B6I,2BACjBtI,GAA6BC,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACrFM,GAAgBL,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAEnE,OACEqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCf,SAAA,EACpDc,EAAAA,EAAAA,MAAA,SAAO4G,QAAQ,4BAA2B1H,SAAA,CAAC,sBAAkBD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UACnEc,EAAAA,EAAAA,MAAC6G,EAAAA,EAAAA,QAAY,CACT5G,UAAwB,OAAbtB,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,GAArBA,EAAuB+I,kBAAmB,mBAAqB,KAC1EC,GAAG,SACHzH,GAAG,4BACHG,KAAK,oBACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByI,kBACnCE,SAAUL,EAA2BzH,SAAA,EAErCD,EAAAA,EAAAA,KAAA,cACAA,EAAAA,EAAAA,KAAA,UAAQS,MAAOuH,EAAAA,GAAc/H,SAAC,qDAC9BD,EAAAA,EAAAA,KAAA,UAAQS,MAAOwH,EAAAA,GAAYhI,SAAC,mBAC5BD,EAAAA,EAAAA,KAAA,UAAQS,MAAOyH,EAAAA,GAA4BjI,SAAC,qCAC5CD,EAAAA,EAAAA,KAAA,UAAQS,MAAO0H,EAAAA,GAAqClI,SAAC,4DACrDD,EAAAA,EAAAA,KAAA,UAAQS,MAAO2H,EAAAA,GAAUnI,SAAC,qEAC1BD,EAAAA,EAAAA,KAAA,UAAQS,MAAO4H,EAAAA,GAAcpI,SAAC,iDAC9BD,EAAAA,EAAAA,KAAA,UAAQS,MAAO6H,EAAAA,GAAUrI,SAAC,uDAC1BD,EAAAA,EAAAA,KAAA,UAAQS,MAAO8H,EAAAA,GAAsBtI,SAAC,iEACtCD,EAAAA,EAAAA,KAAA,UAAQS,MAAO+H,EAAAA,GAAoBvI,SAAC,uDACpCD,EAAAA,EAAAA,KAAA,UAAQS,MAAOgI,EAAAA,GAAyBxI,SAAC,0DAE/B,OAAbP,QAAa,IAAbA,GAAqB,QAARX,EAAbW,EAAeK,cAAM,IAAAhB,GAArBA,EAAuB8I,mBAAmB7H,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UACpEqB,EAAAA,EAAAA,GAA4B,OAAb5B,QAAa,IAAbA,GAAqB,QAAR+H,EAAb/H,EAAeK,cAAM,IAAA0H,OAAR,EAAbA,EAAuBI,qBACjC,OAGhB,E,yFCxBMa,EAAe,CACjBC,eAAe,EAIfC,iBAAkB,GAClB/D,QAAQ,EACR9E,OAAQ,CAAC8I,MAAO,GAAIC,KAAM,IAC1BC,cAAc,EACdC,QAAS,IAGPC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAO5I,MACX,IAAK,YACD,OAAAqC,EAAAA,EAAAA,GAAA,GACO8F,GAEX,IAAK,uBACD,OAAA9F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOsG,GAAK,IACRrE,QAAO,EACP9E,OAAQ,CAAC8I,MAAO,GAAIC,KAAM,MAElC,IAAK,SACD,OAAAlG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOsG,GAAK,IACRrE,QAAQ,GACLsE,EAAOC,SAGlB,QACI,OAAOF,EAEnB,EAmSA,EAjSwB,SAAHrK,GAAyD,IAADwK,EAAAvK,EAAAwK,EAAlD/H,EAAe1C,EAAf0C,gBAAiBmG,EAA0B7I,EAA1B6I,2BAClC6B,GAAUC,EAAAA,EAAAA,QAAO,MAEjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAERxK,GAA6BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACpFM,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAEhEmK,GAAyCC,EAAAA,EAAAA,YAAWb,EAASP,GAAaqB,GAAAvF,EAAAA,EAAAA,GAAAqF,EAAA,GAAnEG,EAAcD,EAAA,GAAEE,EAAcF,EAAA,GACrC1F,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5C6F,EAAU3F,EAAA,GAAE4F,EAAa5F,EAAA,GAChCI,GAAwBL,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAA5ByF,EAAItF,EAAA,GAAEuF,EAAOvF,EAAA,GAEdwF,GAAiBC,EAAAA,EAAAA,cAAY,WAE/B,IADA,IAAMC,EAAM,CAAC,mBAAoB,uBAAwB,YAAa,QAAS,oBAAqB,0BAC5FC,EAAI,EAAGA,EAAID,EAAIrI,OAAQsI,IAC3BlJ,EAAgB,CAAEf,KAAMgK,EAAIC,GAAIhK,MAAO,KAE3Cc,EAAgB,CAAEf,KAAM,oBAAqBC,MAAO,GACxD,GAAE,KAGFK,EAAAA,EAAAA,YAAU,WAER,OAAO,WACLwJ,GACF,CACF,GAAG,CAACA,KAEJxJ,EAAAA,EAAAA,YAAU,WACHoJ,IAAeE,GACdD,GAAc,EAEtB,GAAE,CAACC,EAAMF,KAETpJ,EAAAA,EAAAA,YAAU,WACN,IAAGoJ,EAMH,OAFAQ,IAEO,WACHA,GACJ,EAPIC,GAQR,GAAE,CAACT,IAGH,IAAMU,EAAmB,WACrBX,EAAe,CAAC1J,KAAM,cACtBgB,EAAgB,CAACf,KAAK,kBAAmBC,OAAO,IAChD,IAAMV,GAAsB,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,SAAU,CAAC,EACnC8K,GAAYC,EAAAA,EAAAA,GAAW/K,EAAQ,CAAC,mBAAoB,oBAC1D0J,GAASsB,EAAAA,EAAAA,KAAmBnI,EAAAA,EAAAA,GAAC,CAAC,EAAGiI,IACrC,EAOMG,EAAe,WACjBX,EA5DsB,IA6DtBF,GAAc,EAClB,EAEMc,EAAe,eAAAjI,GAAAoC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA2F,EAAAC,EAAAC,EAAAC,EAAAtL,EAAAuL,EAAAC,EAAAC,EAAA3F,EAAA4F,EAAAC,EAAAtC,EAAAuC,EAAA7E,UAAA,OAAAzB,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoD,OAF9CgF,EAAMS,EAAAxJ,OAAA,QAAAyJ,IAAAD,EAAA,IAAAA,EAAA,GAE1BR,EAAa,CAACtC,MAAiC,OAA1BzJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByM,kBAAiB7F,EAAAE,KAAA,GACtC4F,EAAAA,EAAAA,GAAc,CAACJ,KAAKP,IAAa,KAAD,EAA3C,GAA2CC,EAAApF,EAAAM,KAA1D+E,EAAOD,EAAPC,QAAStL,EAAMqL,EAANrL,OACbsL,EAAQ,CAADrF,EAAAE,KAAA,SAEoC,OADrCkD,EAAU,CAAErJ,OAAQ,CAAC8I,MAAO9I,EAAO8I,MAAOC,KAAM,KACtDmB,EAAgB,CAAC1J,KAAM,SAAU6I,QAAAA,IAAUpD,EAAA+F,OAAA,SACpC,CAAClG,SAAS,IAAM,QAIqD,OADhFqF,GAAUjB,EAAe,CAAE1J,KAAM,yBAC3BgL,EAAS,CAAEM,iBAA4C,OAA1BzM,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByM,kBAAiB7F,EAAAE,KAAA,IACvC8F,EAAAA,EAAAA,GAAeT,GAAQ,KAAD,GAY/B,OAZ+BC,EAAAxF,EAAAM,KAAvDT,EAAO2F,EAAP3F,QAAS4F,EAAOD,EAAPC,QAASC,EAAIF,EAAJE,KAE1B7F,GAAWoE,EAAe,CACtB1J,KAAM,SACN6I,QAAS,CAAET,eAAe,EAAMK,QAAa,OAAJ0C,QAAI,IAAJA,OAAI,EAAJA,EAAM1C,WAEnDnD,GAAWmF,IACXnF,GAAW8D,EAAM9D,QAAQ,2BAGnBuD,GAAOxG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ8F,GAAY,IAAE3I,OAAQ,CAAC8I,MAAO4C,EAAS3C,KAAM,MAClEjD,GAAWoE,EAAgB,CAAC1J,KAAM,SAAU6I,QAAAA,IAC5CvD,GAAW8D,EAAMsC,MAAMR,GAASzF,EAAA+F,OAAA,SAEzB,CAAElG,QAAAA,IAAS,yBAAAG,EAAAW,OAAA,GAAApB,EAAA,KACrB,kBA3BoB,OAAAvC,EAAA6D,MAAA,KAAAC,UAAA,KAkCfoF,EAAiB,eAAAC,GAAA/G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8G,IAAA,IAAAb,EAAAc,EAAAxG,EAAA4F,EAAA,OAAApG,EAAAA,EAAAA,KAAAU,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,UAEJ,OAAd8D,QAAc,IAAdA,GAAAA,EAAgBpB,iBAAiB,CAAD0D,EAAApG,KAAA,QAES,OAAzC+D,EAAe,CAAC1J,KAAM,SAAU6I,QADhB,CAACrJ,OAAQ,CAAC8I,MAAM,GAAIC,KAAM,4CACDwD,EAAAP,OAAA,iBAK4C,OADzF9B,EAAe,CAAE1J,KAAM,yBACjBgL,EAAS,CAACzC,KAAoB,OAAdkB,QAAc,IAAdA,OAAc,EAAdA,EAAgBpB,iBAAkBI,QAAuB,OAAdgB,QAAc,IAAdA,OAAc,EAAdA,EAAgBhB,SAAQsD,EAAApG,KAAA,GACtDqG,EAAAA,EAAAA,GAAmBhB,GAAQ,KAAD,EAAAc,EAAAC,EAAAhG,KAArDT,EAAOwG,EAAPxG,QAAS4F,EAAOY,EAAPZ,QAGjB5F,GAAW+E,IACX/E,GAAWtE,EAAgB,CAACf,KAAK,kBAAmBC,OAAO,IAC3DoF,GAAW8D,EAAM9D,QAAQ,kBAGzBA,GAAWoE,EAAe,CACtB1J,KAAM,SACN6I,QAAS,CAAErJ,OAAQ,CAAC8I,MAAO,GAAIC,KAAM2C,MAEzC5F,GAAW8D,EAAMsC,MAAMR,GAAS,yBAAAa,EAAA3F,OAAA,GAAAyF,EAAA,KAEnC,kBAxBsB,OAAAD,EAAAtF,MAAA,KAAAC,UAAA,KA4DjB4D,EAAa,WACfnB,EAAQiD,SAAWC,cAAclD,EAAQiD,QAC7C,EAEM7B,EAAc,WAChBpB,EAAQiD,SAAWC,cAAclD,EAAQiD,SACzCjD,EAAQiD,QAAUE,aAAY,WAC1BrC,GAAS,SAAApE,GAAI,OAAIA,EAAK,CAAC,GAC3B,GAAG,IACP,EAEM0G,EAAiB,eAAAC,GAAAxH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuH,IAAA,IAAAC,EAAAjH,EAAA,OAAAR,EAAAA,EAAAA,KAAAU,MAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,YACnBkE,GAAsB,OAAdJ,QAAc,IAAdA,GAAAA,EAAgBnF,QAAwB,OAAdmF,QAAc,IAAdA,GAAAA,EAAgBjB,cAAY,CAAAgE,EAAA7G,KAAA,eAAA6G,EAAAhB,OAAA,SAEtD,MAAI,OAEgD,OAA/D9B,EAAe,CAAC1J,KAAM,SAAU6I,QAAS,CAACL,cAAc,KAAOgE,EAAA7G,KAAA,EAEvC+E,GAAgB,GAAK,OAAA6B,EAAAC,EAAAzG,KAAtCT,EAAOiH,EAAPjH,QACPoE,EAAe,CAAC1J,KAAM,SAAU6I,QAAS,CAACL,cAAc,KAIxDlD,GAAWmF,IAAe,wBAAA+B,EAAApG,OAAA,GAAAkG,EAAA,KAC7B,kBAbsB,OAAAD,EAAA/F,MAAA,KAAAC,UAAA,KAezB,OACI/F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBf,SAAA,EACtCc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaf,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAoBf,UAC/BD,EAAAA,EAAAA,KAACgN,EAAAA,EAAqB,CAClB3M,GAAG,mBACHF,YAAY,qBACZI,KAAK,QACLW,QAnES,OAAd8I,QAAc,IAAdA,IAAAA,EAAgBnF,QAAyB,OAAdmF,QAAc,IAAdA,GAAAA,EAAgBrB,cAGxB,OAAdqB,QAAc,IAAdA,GAAAA,EAAgBrB,eAA2C,OAA1BvJ,QAA0B,IAA1BA,GAAAA,EAA4B6N,gBAC1D,aAEJ,aALIjN,EAAAA,EAAAA,KAACkN,EAAAA,GAAe,IAmEnBvN,MAAM,qBACNW,SAAS,IACT6M,UAAU,GACV3M,KAAK,mBACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByM,iBACnCuB,cAhEO,WACf,OAAkB,OAAdpD,QAAc,IAAdA,GAAAA,EAAgBnF,SAAyB,OAAdmF,QAAc,IAAdA,IAAAA,EAAgBrB,gBAAgC,OAAdqB,QAAc,IAAdA,GAAAA,EAAgBjB,aACtE,KAEW,OAAdiB,QAAc,IAAdA,GAAAA,EAAgBrB,eAA2C,OAA1BvJ,QAA0B,IAA1BA,GAAAA,EAA4B6N,gBAC1DrC,IAEJK,GACX,EAyDYlD,SAjJc,SAAHpH,GAAyB,IAAnBH,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MAC/Bc,EAAgB,CAACf,KAAAA,EAAMC,MAAAA,IACvBmK,GACJ,EA+IYyC,UAAwB,OAAdrD,QAAc,IAAdA,GAAsB,QAARX,EAAdW,EAAgBjK,cAAM,IAAAsJ,OAAR,EAAdA,EAAwBR,SAAsB,OAAbnJ,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,OAAR,EAAbA,EAAuBmO,iBAClEK,cAA4B,OAAdtD,QAAc,IAAdA,OAAc,EAAdA,EAAgBnF,UAAwB,OAAdmF,QAAc,IAAdA,OAAc,EAAdA,EAAgBrB,iBAA2C,OAA1BvJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B6N,qBAI9F,OAAdjD,QAAc,IAAdA,GAAAA,EAAgBrB,eAAe3I,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,qBAAoBf,UAC/DD,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,GAAEf,UACbD,EAAAA,EAAAA,KAACgN,EAAAA,EAAqB,CAClB3M,GAAG,oBACHF,YAAY,8BACZI,KAAK,OACLW,QAlEK,OAAd8I,QAAc,IAAdA,GAAAA,EAAgBnF,QACR7E,EAAAA,EAAAA,KAACkN,EAAAA,GAAe,IAEpB,SAgEK5M,SAAS,GACT6M,UAAU,QACV3M,KAAK,mBACLC,MAAqB,OAAduJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBpB,iBACvBwE,cAjEE,WACd,OAAiB,OAAdpD,QAAc,IAAdA,GAAAA,EAAgBnF,OACR,KAEJqH,GACX,EA6DgBnE,SA5HS,SAAH5C,GAAyB,IAADoI,EAAlB/M,EAAI2E,EAAJ3E,KAAMC,EAAK0E,EAAL1E,MACxB2I,GAAOmE,EAAA,IAAAC,EAAAA,EAAAA,GAAAD,EAAK/M,EAAOC,IAAK+M,EAAAA,EAAAA,GAAAD,EAAC,SAAQ,CAAC1E,MAAM,GAAIC,KAAK,KAAGyE,GAC1DtD,EAAgB,CAAC1J,KAAM,SAAU6I,QAAAA,GACrC,EA0HgBiE,SAAwB,OAAdrD,QAAc,IAAdA,GAAsB,QAARV,EAAdU,EAAgBjK,cAAM,IAAAuJ,OAAR,EAAdA,EAAwBR,KAClCwE,aAA4B,OAAdtD,QAAc,IAAdA,OAAc,EAAdA,EAAgBnF,OAE9B8H,kBAAmBA,EACnBvC,KAAMA,EACNvF,OAAsB,OAAdmF,QAAc,IAAdA,OAAc,EAAdA,EAAgBjB,mBAG5B,MAeJ/I,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,oCACZE,GAAG,mCACHV,MAAM,oCACNW,SAAS,IACTE,KAAK,uBACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BqO,qBACnClN,KAAK,GACLG,WAAYa,EACZX,WAAYlB,EAAcK,UAG9BC,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,UACZE,GAAG,UACHV,MAAM,UACNW,SAAS,GACTC,KAAK,GACLC,KAAK,YACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BsO,UACnChN,WAAYa,EACZX,WAAYlB,EAAcK,UAG9BC,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CACZC,YAAY,QACZE,GAAG,QACHV,MAAM,QACNuH,UAAU,MACV5G,SAAS,GACTC,KAAK,GACLC,KAAK,QACLC,MAAiC,OAA1BrB,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BuO,MACnCjN,WAAYa,EACZX,WAAYlB,EAAcK,aAIlCC,EAAAA,EAAAA,KAAC4N,EAAgB,CAAClG,2BAA4BA,KAC9C1H,EAAAA,EAAAA,KAAC6N,EAAiB,CAACtM,gBAAiBA,KAEpCvB,EAAAA,EAAAA,KAAA,WAGR,ECvTA,EArB0B,SAAHnB,GAAiE,IAADC,EAAAC,EAAA0I,EAA1DqG,EAAUjP,EAAViP,WAAYrJ,EAAY5F,EAAZ4F,aAAcsJ,EAAalP,EAAbkP,cAAeC,EAAUnP,EAAVmP,WAC9DtO,GAAgBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAEhE,OACEqB,EAAAA,EAAAA,MAACkN,EAAAA,SAAc,CAAAhO,SAAA,EACXD,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,cAAaf,SAAC,mCACxBD,EAAAA,EAAAA,KAACkO,EAAAA,EAAc,CACXJ,WAAYA,EACZrJ,aAAcA,EACdsJ,cAAeA,EACfC,WAAYA,EACZzK,OAAO,oCAEG,OAAb7D,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,GAAc,QAAdC,EAArBD,EAAuBqP,oBAAY,IAAApP,GAAnCA,EAAqCoD,QAAQnC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UACvEqB,EAAAA,EAAAA,GAA4B,OAAb5B,QAAa,IAAbA,GAAqB,QAAR+H,EAAb/H,EAAeK,cAAM,IAAA0H,OAAR,EAAbA,EAAuB0G,gBACjC,MACZnO,EAAAA,EAAAA,KAAA,WAGR,EC+IA,EAtJgC,SAAHnB,GAAwB,IAADC,EAAAC,EAAlB2C,EAAY7C,EAAZ6C,aAExBiI,GAAQC,EAAAA,EAAAA,KACRxK,GAA6BC,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IACrFM,GAAgBL,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMI,aAAa,IAGjE2E,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAqB/B1D,EAAkB,SAAHF,GAAyB,IAAnBH,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MACvBqC,EAAcrC,GAASsC,SAAStC,GACtCiB,EAAa,CAAElB,KAAAA,EAAMC,MAAOqC,GAChC,EAQMvB,EAAkB,SAAHyB,GAAsB,IAAjBxC,EAAIwC,EAAJxC,KAAMC,EAAKuC,EAALvC,MAC5BiB,EAAa,CAAClB,KAAAA,EAAMC,MAAAA,GACxB,EAEM2N,EAAe,SAAHjJ,GAAuB,IAAlB3E,EAAI2E,EAAJ3E,KAAMC,EAAK0E,EAAL1E,MACzBiB,EAAa,CAAClB,KAAAA,EAAMC,MAAAA,EAAO4N,MAAM,gBACrC,EAEMC,EAAqB,SAAHnC,GAAaA,EAARzG,SAAwB,IAAd6I,EAAOpC,EAAPoC,QACnC7M,EAAa,CAAEjB,MAAc,OAAP8N,QAAO,IAAPA,OAAO,EAAPA,EAASC,OAAQH,MAAM,mBACjD,EAEMI,EAAY,eAAA7B,GAAAxH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMX,GAAI,IAAAc,EAAAC,EAAAC,EAAAC,EAAAC,EAAA4F,EAAAgD,EAAA,OAAArJ,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACxBtB,EAAK,CAADoB,EAAAE,KAAA,SAG2B,OAFxBR,EAAWd,EAAKpE,MAChBmF,EAAW,IAAIQ,UACZC,OAAO,OAAQxB,GAAMoB,EAAAE,KAAA,GACKG,EAAAA,EAAAA,IAAuBV,GAAS,OAAAC,EAAAI,EAAAM,KAA5DT,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAAK4F,EAAI9F,EAAJ8F,KACrB7F,GAAWuI,EAAa,CAAC5N,KAAK,eAAgBC,MAAMqF,IAC9C4I,EAAY,CACd7J,OAAQgB,EAASW,EAAAA,GAAUC,EAAAA,GAC3B+H,OAAQ1I,EACR6I,QAASjD,IAEbkD,EAAAA,EAAAA,IAAe,CAAClK,gBAAAA,EAAiBgB,SAAAA,EAAUgJ,UAAAA,IAAW,yBAAA1I,EAAAW,OAAA,GAAApB,EAAA,KAE7D,gBAdiBqB,GAAA,OAAAgG,EAAA/F,MAAA,KAAAC,UAAA,KA2BZiH,EAAgB,SAACrI,IAEnBmJ,EAAAA,EAAAA,IAAmB,CAACnJ,SAAAA,EAAUjB,aAAAA,EAAcC,gBAAAA,GAChD,EAEMsJ,EAAU,eAAAc,GAAA1J,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8G,EAAA2C,GAAA,IAAArJ,EAAA6I,EAAAS,EAAAnJ,EAAA,OAAAR,EAAAA,EAAAA,KAAAU,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OAE0D,OAFnDR,EAAQqJ,EAARrJ,SAAU6I,EAAOQ,EAAPR,SAEhCK,EAAAA,EAAAA,IAAe,CAAClK,gBAAAA,EAAiBgB,SAAAA,EAAUgJ,UAAW,CAACO,WAAW,KAAO3C,EAAApG,KAAA,GAC/CgJ,EAAAA,EAAAA,IAA4B,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASI,SAAS,KAAD,EAAAK,EAAA1C,EAAAhG,MAAxDT,EAAOmJ,EAAPnJ,UACGkI,EAAcrI,GACzBG,GAAWyI,EAAmB,CAAEC,QAAAA,IAChC1I,GAAW8D,EAAM9D,QAAQ,yBACzBA,IAAW+I,EAAAA,EAAAA,IAAe,CAAClK,gBAAAA,EAAiBgB,SAAAA,EAAUgJ,UAAW,CAACO,WAAW,KAC7EpJ,GAAW8D,EAAMsC,MAAM,qBAAoB,yBAAAK,EAAA3F,OAAA,GAAAyF,EAAA,KAC9C,gBATe+C,GAAA,OAAAL,EAAAjI,MAAA,KAAAC,UAAA,KAWlB,OACE/F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBf,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,+BAA8Bf,SAAC,wCAE7Cc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBf,SAAA,EACpCc,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oCAAmCf,SAAA,CAAC,kDAA8CD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UACtGc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBf,SAAA,EAC9BD,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,2BACLH,GAAG,+BACHa,QAAQ,MACRC,IAAKiO,EAAAA,GACL7O,KAAK,GACLa,SAAmC,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiQ,4BAA6BD,EAAAA,GAClE1O,WAAYG,KAEhBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,CACbT,KAAK,2BACLH,GAAG,8BACHa,QAAQ,KACRC,IAAKmO,EAAAA,GACL/O,KAAK,GACLa,SAAmC,OAA1BhC,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiQ,4BAA6BC,EAAAA,GAClE5O,WAAYG,OAGN,OAAbnB,QAAa,IAAbA,GAAqB,QAARZ,EAAbY,EAAeK,cAAM,IAAAjB,GAArBA,EAAuBuQ,0BAA0BrP,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,UACzEqB,EAAAA,EAAAA,GAA4B,OAAb5B,QAAa,IAAbA,GAAqB,QAARX,EAAbW,EAAeK,cAAM,IAAAhB,OAAR,EAAbA,EAAuBsQ,4BACnC,SAGc,OAA1BjQ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiQ,4BAA6BC,EAAAA,IAC1DtP,EAAAA,EAAAA,KAACuP,EAAe,CAAChO,gBAAiBA,EAAiBmG,2BA7FnB,SAAC8H,GAChC,IAAAC,EAAwBD,EAAEE,OAAlBlP,EAAIiP,EAAJjP,KAAMC,EAAKgP,EAALhP,MACRqC,EAAcrC,GAASsC,SAAStC,GACtCiB,EAAa,CAAElB,KAAAA,EAAMC,MAAOqC,GAChC,IAyFiH,MAE7G/B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBf,SAAA,EAET,OAA1Bb,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiQ,4BAA6BD,EAAAA,IAC1DpP,EAAAA,EAAAA,KAAC2P,EAAiB,CAAC7B,WAhER,SAAC8B,IAEhBC,EAAAA,EAAAA,IAAiB,CACbD,MAAAA,EACAnL,aAAAA,EACAC,gBAAAA,EACA+J,aAAAA,EACAqB,gBAAgB,CAAC,GAEzB,EAuDmDrL,aAAcA,EAAcsJ,cAAeA,EAAeC,WAAYA,IAAgB,MAEtG,OAA1B5O,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BiQ,4BAA6BC,EAAAA,IAC1DtP,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,4BAA2Bf,UACtCD,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,2BAA0Bf,SAAC,6MACnC,MAEVD,EAAAA,EAAAA,KAAC+P,EAAmB,CAACxO,gBAAiBA,KAEtCvB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWf,UACrBc,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcf,SAAA,EAACD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UAAY,iGAA6FD,EAAAA,EAAAA,KAAA,KAAGgQ,KAAK,0IAAyI/P,SAAC,sJAO7S,EChIA,EA9B+B,SAAHpB,GAAkC,IAA7B6C,EAAY7C,EAAZ6C,aAAcuO,EAAQpR,EAARoR,SACrC7Q,GAA6BC,EAAAA,EAAAA,KAAa,SAACC,GAAK,OAAKA,EAAMF,0BAA0B,IAErFuC,EAAqB,SAAHhB,GAAmC,IAA9BH,EAAIG,EAAJH,KAAMC,EAAKE,EAALF,MACzByP,EAD0CvP,EAAV3B,WACR,EACxBgD,GAAGO,EAAAA,EAAAA,GAAiC,OAA1BnD,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4B8C,kBAC5CF,EAAIkO,GAAU1P,GAAQC,EAEtBiB,EAAa,CACTlB,KAAM,mBACNC,OAAK8B,EAAAA,EAAAA,GAAMP,IAGnB,EAEF,OAEEjB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASf,SAAA,EAEpBD,EAAAA,EAAAA,KAACmQ,EAAQ,CAACzO,aAAcA,EAAcC,mBAAoBA,KAE1D3B,EAAAA,EAAAA,KAACoQ,EAAgB,CAACzO,mBAAoBA,KAEtC3B,EAAAA,EAAAA,KAACqQ,EAAuB,CAAC3O,aAAcA,KAEvC1B,EAAAA,EAAAA,KAACsQ,EAAAA,EAAa,CAACL,SAAUA,EAAUvO,aAAcA,MAGzD,C","sources":["components/Forms/QualifiedAccountant/NameOfInvestorOrEntity.js","components/Forms/QualifiedAccountant/SubSections/HowManyIndividuals.js","components/Forms/QualifiedAccountant/SubSections/ControllingPersonOfInvestorEntity.js","components/Forms/QualifiedAccountant/SubSections/Category.js","components/Forms/QualifiedAccountant/InvestorCategorySub.js","components/Forms/QualifiedAccountant/SubSections/InvestorCategory.js","components/Forms/QualifiedAccountant/SubSections/AccountantSignature.js","components/Forms/QualifiedAccountant/SubSections/MembershipDetails.js","components/Forms/QualifiedAccountant/SubSections/ProfessionalBody.js","components/Forms/QualifiedAccountant/SubSections/CertificateForm.js","components/Forms/QualifiedAccountant/SubSections/UploadCertificate.js","components/Forms/QualifiedAccountant/SubSections/QualifiedAccountantCert.js","components/Forms/QualifiedAccountant/QACertificationContent.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../Layout/CustomTextField';\r\nimport { QA_INVESTOR_LABELS, CATEGORY_INDIVIDUAL_WCC } from '../../../constants';\r\n\r\nconst NameOfInvestorOrEntity = ({ investorId, itemIndex, investorDetails, onChangeinvestor }) => {\r\n\r\n  const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n\r\n  const tempInvNumber = wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC? itemIndex + 1: '';\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n\r\n  const errMsgs = {\r\n    investor_name : invFormStatus.errors?.investor_name? invFormStatus.errors?.investor_name[itemIndex]: \"\",\r\n  }\r\n\r\n  const onChangeIn = ({name, value}) => {\r\n    onChangeinvestor({name, value, investorId})\r\n  }\r\n\r\n  return (\r\n    <div key={`investorId-${tempInvNumber}`}>\r\n        <CustomTextField\r\n            placeholder={`Name of ${label}`}\r\n            id={`name-of-investor-entity-${tempInvNumber}`}\r\n            label={`Name of ${label} ${tempInvNumber}`}\r\n            asterisk=\"*\"\r\n            type=\"\"\r\n            name=\"investor_name\"\r\n            value={investorDetails?.investor_name}\r\n            onChangeFn={onChangeIn}\r\n            formErrors={errMsgs}\r\n        />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NameOfInvestorOrEntity","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst HowManyIndividuals = ({ onChangeRadioFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    useEffect(() => {\r\n    \r\n      return () => {\r\n        onChangeRadioFn({ name: 'no_of_individuals', value: 0})\r\n      }\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <div className=\"section__container--box u-margin-bottom-xl\">\r\n        <h5 className=\"section__container--box--subtitle\">How many individuals? <span>*</span></h5>\r\n        <div className=\"row-space-between\">\r\n            <CustomRadioInput\r\n                name=\"no_of_individuals\"\r\n                id=\"one-number-of-individual\"\r\n                content=\"1\"\r\n                val={1}\r\n                checked={wholesaleClientCertificate?.no_of_individuals === 1}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"no_of_individuals\"\r\n                id=\"two-number-of-individual\"\r\n                content=\"2\"\r\n                val={2}\r\n                checked={wholesaleClientCertificate?.no_of_individuals === 2}\r\n                onChangeFn={onChangeRadioFn}\r\n            /> \r\n            <CustomRadioInput\r\n                name=\"no_of_individuals\"\r\n                id=\"three-number-of-individual\"\r\n                content=\"3\"\r\n                val={3}\r\n                checked={wholesaleClientCertificate?.no_of_individuals === 3}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n        </div>\r\n        {invFormStatus?.errors?.no_of_individuals? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus?.errors?.no_of_individuals)}\r\n        </div>: null}\r\n\r\n        <div className=\"text__box u-padding-10y\">\r\n            <p className=\"text__box--p\">Please note that each individual must be certified as a wholesale client.</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HowManyIndividuals","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst ControllingPersonOfInvestorEntity = ({ onChangeInputFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    useEffect(() => {\r\n    \r\n      return () => {\r\n        onChangeInputFn({ name: 'controlling_person_of_investor_entity', value: '' });\r\n      }\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <>\r\n        <CustomTextField\r\n            placeholder=\"Controlling Person of Investor Entity\"\r\n            id=\"controlling-person-of-investor-entity\"\r\n            label=\"Controlling Person of Investor Entity\"\r\n            asterisk=\"*\"\r\n            type=\"\"\r\n            name=\"controlling_person_of_investor_entity\"\r\n            value={wholesaleClientCertificate?.controlling_person_of_investor_entity || \"\"}\r\n            onChangeFn={onChangeInputFn}\r\n            formErrors={invFormStatus.errors}\r\n        /> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ControllingPersonOfInvestorEntity;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport NameOfInvestorOrEntity from '../NameOfInvestorOrEntity';\r\nimport { CATEGORY_INDIVIDUAL_WCC, CATEGORY_NON_INDIVIDUAL_WCC, CATEGORY_CONTROLLING_PERSON_WCC, QA_INVESTOR_LABELS } from '../../../../constants';\r\nimport { singleWholesaleClientCertificateInvestorDetails } from \"../../../../reducers/wholesale-client-certificate/wholesaleClientCertificateReducer\"\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport HowManyIndividuals from './HowManyIndividuals';\r\nimport ControllingPersonOfInvestorEntity from './ControllingPersonOfInvestorEntity';\r\n\r\nconst Category = ({ onFormChange, onChangeInvestorFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n\r\n    const addInvestorDetails = (numOfInvestors) => {\r\n\r\n        let upd = [];\r\n        const prevDirLen = wholesaleClientCertificate?.investor_details?.length || 0;\r\n    \r\n        if(prevDirLen > numOfInvestors){\r\n            upd = wholesaleClientCertificate?.investor_details?.filter((each, index) => (index + 1) <= numOfInvestors);\r\n\r\n            onFormChange({\r\n                name:\"investor_details\",\r\n                value:[...upd]\r\n            });\r\n            return\r\n        } else if(prevDirLen === numOfInvestors){\r\n            return\r\n        }\r\n        const newLen = numOfInvestors - prevDirLen;\r\n        upd = [...wholesaleClientCertificate?.investor_details];\r\n\r\n        const newArr = Array.from({ length: newLen }, () => ({\r\n            ...singleWholesaleClientCertificateInvestorDetails\r\n        }))\r\n\r\n        onFormChange({\r\n            name:\"investor_details\",\r\n            value:[...upd, ...newArr]\r\n        })\r\n        return\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n        if(name === 'no_of_individuals'){\r\n            convrtToNum && addInvestorDetails(convrtToNum)\r\n        }\r\n        else if(name === 'category'){\r\n            onChangeInvestorFn({\r\n                name:\"investor_name\",\r\n                value: '',\r\n                investorId: 1\r\n            })\r\n            addInvestorDetails(1);\r\n        }\r\n    }\r\n\r\n    const onChangeInputFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const renderInvestorNameInput = () => {\r\n\r\n        return wholesaleClientCertificate?.investor_details?.map((item, index)=> {\r\n            const tempIndex = index + 1;\r\n            const uniqId = tempIndex //item?.id || tempIndex\r\n            // if(index < wholesaleClientCertificate?.no_of_individuals){\r\n              return <NameOfInvestorOrEntity \r\n                        key={uniqId}\r\n                        investorId={uniqId}\r\n                        investorDetails={item}\r\n                        onChangeinvestor={onChangeInvestorFn}\r\n                        itemIndex={index}\r\n                    /> \r\n            // }\r\n            // return null\r\n        })\r\n\r\n    }\r\n    \r\n  return (\r\n    <div className=\"section__container\">\r\n        <div className=\"section__container--box u-margin-bottom-xl\">\r\n            <h5 className=\"section__container--box--subtitle\">Category <span>*</span></h5>\r\n            <CustomRadioInput\r\n                name=\"category\"\r\n                id=\"individual-investor\"\r\n                content=\"Individual Investor(s)\"\r\n                val={CATEGORY_INDIVIDUAL_WCC}\r\n                checked={wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"category\"\r\n                id=\"non-individual-investor\"\r\n                content=\"Non-individual Investor\"\r\n                val={CATEGORY_NON_INDIVIDUAL_WCC}\r\n                checked={wholesaleClientCertificate?.category === CATEGORY_NON_INDIVIDUAL_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            /> \r\n            <CustomRadioInput\r\n                name=\"category\"\r\n                id=\"controlling-person-of-investor-entity\"\r\n                content=\"Controlling Person of Investor Entity\"\r\n                val={CATEGORY_CONTROLLING_PERSON_WCC}\r\n                checked={wholesaleClientCertificate?.category === CATEGORY_CONTROLLING_PERSON_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            {invFormStatus?.errors?.category? <div className=\"input__desc\">\r\n              {renderErrorTxt(invFormStatus?.errors?.category)}\r\n            </div>: null}\r\n        </div>\r\n\r\n        {wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC? <HowManyIndividuals onChangeRadioFn={onChangeRadioFn}/> : null}\r\n\r\n        <div className=\"section__container--box\">\r\n\r\n            {/* {wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC || wholesaleClientCertificate?.category === CATEGORY_NON_INDIVIDUAL_WCC? \r\n            renderInvestorNameInput(): null}  */}\r\n            {renderInvestorNameInput()}\r\n            {wholesaleClientCertificate?.category === CATEGORY_CONTROLLING_PERSON_WCC? \r\n            <ControllingPersonOfInvestorEntity onChangeInputFn={onChangeInputFn} />: null}\r\n\r\n            <CustomTextField\r\n                placeholder={`Address of ${label}`}\r\n                id=\"investor-address\"\r\n                label={`Address of ${label}`}\r\n                asterisk=\"*\"\r\n                type=\"\"\r\n                name=\"investor_address\"\r\n                value={wholesaleClientCertificate?.investor_address || \"\"}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            /> \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category","import React from 'react';\r\nimport CustomRadioInput from '../Layout/CustomRadioInput';\r\nimport { useSelector } from 'react-redux';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { INVESTOR_CATEGORY_NET_ASSETS_WCC, INVESTOR_CATEGORY_EARNED_WCC, INVESTOR_CATEGORY_CONTROLS_WCC, QA_INVESTOR_LABELS } from '../../../constants';\r\n\r\nconst InvestorCategorySub = ({ investorId, itemIndex, investorDetails, onChangeInvestorFn }) => {\r\n    const tempInvNumber = itemIndex + 1\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n\r\n    const errMsgs = {\r\n        investor_category : invFormStatus.errors?.investor_category? invFormStatus.errors?.investor_category[itemIndex]: \"\",\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = value && parseInt(value);\r\n        onChangeInvestorFn({name: \"investor_category\", value: convrtToNum, investorId})\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container--box u-margin-bottom-lg\" key={`investorId-${tempInvNumber}`}>\r\n        <h5 className=\"section__container--box--subtitle\">{`${label} ${tempInvNumber}`}</h5>\r\n\r\n        <div>\r\n            <CustomRadioInput\r\n                name={`investor-category-${tempInvNumber}`}\r\n                id={`investor-one-${tempInvNumber}`}\r\n                content={`This ${label} has net assets of at least AU$2.5 million`}\r\n                val={INVESTOR_CATEGORY_NET_ASSETS_WCC}\r\n                checked={investorDetails?.investor_category === INVESTOR_CATEGORY_NET_ASSETS_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name={`investor-category-${tempInvNumber}`}\r\n                id={`investor-two-${tempInvNumber}`}\r\n                type=\"\"\r\n                content={`This ${label} has earned at least AU$250,000 per annum gross income for each of the last two (2) financial years`}\r\n                val={INVESTOR_CATEGORY_EARNED_WCC}\r\n                checked={investorDetails?.investor_category === INVESTOR_CATEGORY_EARNED_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name={`investor-category-${tempInvNumber}`}\r\n                id={`investor-three-${tempInvNumber}`}\r\n                content={`This ${label} has  or controls gross assets of at least AU$10 million`}\r\n                val={INVESTOR_CATEGORY_CONTROLS_WCC}\r\n                checked={investorDetails?.investor_category === INVESTOR_CATEGORY_CONTROLS_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            {errMsgs?.investor_category? <div className=\"input__desc\">\r\n              {renderErrorTxt(errMsgs?.investor_category)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvestorCategorySub","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport InvestorCategorySub from '../InvestorCategorySub';\r\nimport { QA_INVESTOR_LABELS } from '../../../../constants';\r\n\r\nconst InvestorCategory = ({ onChangeInvestorFn }) => {\r\n\r\n  const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n\r\n  const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n \r\n  const renderInvestorCategory = () => {\r\n\r\n    return wholesaleClientCertificate?.investor_details?.map((item, index)=> {\r\n        const tempIndex = index + 1;\r\n        const uniqId = tempIndex //item?.id || tempIndex\r\n        // if(index < wholesaleClientCertificate?.no_of_individuals){\r\n          return <InvestorCategorySub \r\n                    key={uniqId}\r\n                    investorId={uniqId}\r\n                    investorDetails={item}\r\n                    onChangeInvestorFn={onChangeInvestorFn}\r\n                    itemIndex={index}\r\n                /> \r\n        // }\r\n        // return null\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">{label} Category</h4>\r\n        {renderInvestorCategory()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvestorCategory","import React, {useState} from 'react';\r\nimport moment from 'moment/moment';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport { LOADING, SUCCESS, FAILED } from '../../../../constants';\r\nimport {uploadSignatureApiCall} from '../../../../actions/Investor-Application-Form/uploadDocActions' \r\nimport SignatureUploadOrCreate from '../../Layout/SignatureComponent';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction AccountantSignature({onChangeInputFn}) {\r\n    \r\n    const dateNow = moment().format();\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate );\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n    const [uploadedDocs, setUploadedDocs] = useState([]);\r\n    const [signCreate, setSignCreate] = useState({file:'', loader:''})\r\n    \r\n    const updateSignUrl = ({name, value}) => {\r\n        onChangeInputFn({name, value});\r\n    }\r\n\r\n    const onSaveSignature = async({sign, investorId, fileName=\"\"}) => {\r\n        if(sign){\r\n            //call api to upload files\r\n            const formData = new FormData();\r\n            formData.append('file', sign);\r\n            const {success, url} = await uploadSignatureApiCall(formData);\r\n            success && updateSignUrl({name:'accountant_signature_url', value:url});\r\n\r\n            //below is for updating loader state for sign upload\r\n            fileName && setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n                return prevDocs.map((each)=>{\r\n                    if(each.file.name === fileName){\r\n                        return {...each, loader:success? SUCCESS : FAILED}\r\n                    }\r\n                    return each\r\n                })\r\n            });\r\n\r\n            //below is for updating loader state for sign create\r\n            fileName || setSignCreate((prevState)=>({file:prevState?.file, loader:success? SUCCESS : FAILED}));\r\n        }    \r\n    }\r\n \r\n  return (\r\n    <div>\r\n        <div className=\"u-padding-y u-margin-bottom-lg\">\r\n            <h6>Accountant's Signature <span>*</span></h6>\r\n            <SignatureUploadOrCreate \r\n                signatureUrl={wholesaleClientCertificate?.accountant_signature_url}\r\n                onSaveSignature={onSaveSignature}\r\n                uploadedDocs={uploadedDocs}\r\n                setUploadedDocs={setUploadedDocs}\r\n                signCreate={signCreate}\r\n                setSignCreate={setSignCreate}\r\n                investorId={1} //dummy\r\n            />\r\n            {invFormStatus?.errors?.accountant_signature_url? <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus?.errors?.accountant_signature_url)}\r\n            </div>: null}\r\n        </div>\r\n\r\n        <CustomTextField\r\n            placeholder=\"DD/MM/YYYY\"\r\n            inputType=\"date\"\r\n            label=\"Date\"\r\n            asterik=\"*\"\r\n            name='date_of_signature'\r\n            value={wholesaleClientCertificate?.date_of_signature}\r\n            onChangeFn={onChangeInputFn}\r\n            maxDate={dateNow?.split(\"T\")[0]}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountantSignature","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nfunction MembershipDetails({onChangeInputFn}) {\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n\r\n    return (\r\n        <div>\r\n            <CustomTextField\r\n                placeholder=\"Membership No.\"\r\n                id=\"membership-no.\"\r\n                label=\"Membership No.\"\r\n                asterisk=\"*\"\r\n                name=\"membership_number\"\r\n                value={wholesaleClientCertificate?.membership_number}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField\r\n                placeholder=\"e.g. CPA, IPA, CA\"\r\n                id=\"membership-designation\"\r\n                label=\"Membership Designation\"\r\n                asterisk=\"*\"\r\n                name=\"membership_designation\"\r\n                value={wholesaleClientCertificate?.membership_designation}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default MembershipDetails","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useSelector } from 'react-redux';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { CA_AUS_NZ_WCC, CPA_AUS_WCC, INST_PUBLIC_ACCOUNTANTS_WCC, INST_AMERICAN_PUBLIC_ACCOUNTANTS_WCC, CA_UK_WCC, CA_CANADA_WCC, CA_NZ_WCC, INST_CA_ENG_WALES_WCC, INST_CA_IRELAND_WCC, INST_CA_ENG_SCOTLAND_WCC } from '../../../../constants';\r\n\r\nfunction ProfessionalBody({onChangeProfessionalbodyFn}) {\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n\r\n  return (\r\n    <div className=\"u-margin-bottom-3 select-dropdown-width\">\r\n        <label htmlFor=\"sec-g-1-professional-body\">Professional Body <span>*</span></label>\r\n        <Form.Control\r\n            className={invFormStatus?.errors?.professional_body? \"incorrect-select\" : null}\r\n            as=\"select\"\r\n            id=\"sec-g-1-professional-body\"\r\n            name=\"professional_body\"\r\n            value={wholesaleClientCertificate?.professional_body}\r\n            onChange={onChangeProfessionalbodyFn}\r\n        >\r\n            <option></option>\r\n            <option value={CA_AUS_NZ_WCC}>Chartered Accountants Australia and New Zealand</option>\r\n            <option value={CPA_AUS_WCC}>CPA Australia</option>\r\n            <option value={INST_PUBLIC_ACCOUNTANTS_WCC}>Institute of Public Accountants</option>\r\n            <option value={INST_AMERICAN_PUBLIC_ACCOUNTANTS_WCC}>The American Institute of Certified Public Accountants</option>\r\n            <option value={CA_UK_WCC}>Association of Certified Chartered Accountants (United Kingdom)</option>\r\n            <option value={CA_CANADA_WCC}>Canadian Institute of Chartered Accountants</option>\r\n            <option value={CA_NZ_WCC}>Institute of Chartered Accountants of New Zealand</option>\r\n            <option value={INST_CA_ENG_WALES_WCC}>The Institute of Chartered Accountants in England and Wales</option>\r\n            <option value={INST_CA_IRELAND_WCC}>The Institute of Chartered Accountants in Ireland</option>\r\n            <option value={INST_CA_ENG_SCOTLAND_WCC}>The Institute of Chartered Accountants of Scotland</option>\r\n        </Form.Control>\r\n        {invFormStatus?.errors?.professional_body? <div className=\"input__desc\">\r\n          {renderErrorTxt(invFormStatus?.errors?.professional_body)}\r\n        </div>: null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfessionalBody","import React, { useEffect, useCallback, useReducer, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport CustomTextButtonField from '../../Layout/CustomTextButtonField';\r\nimport ProfessionalBody from './ProfessionalBody';\r\nimport MembershipDetails from './MembershipDetails';\r\nimport { sendCodeToUser, verifyCodeFromUser } from '../../../../actions/Email-Verification';\r\nimport validateEmail from '../../../../utils/validations/Common-Validations/email';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { LoaderOnConfirm } from '../../../stylesheet/Loader';\r\nimport { updateInvFormErrors } from '../../../../actions/Investor-Application-Form/invFormStatusActions';\r\nimport { deleteKeys } from '../../../../utils/validations/helperFunc';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst initialState = {\r\n    showCodeInput: false,\r\n    //[TRUE]: see input field for verification code & button in email-field will read as edit email & email input field is disabled\r\n    //[FALSE]: hide input field for verification code & button in email-field will read as send code & email input field is enabled\r\n\r\n    verificationCode: '', //store verification code\r\n    loader: false, //loader notification/btn to show api call status -- [TRUE]: disable emal, verification code inp fields,\r\n    errors: {email: '', code: ''},\r\n    resendLoader: false,\r\n    code_id: '', //get this from backend when send-code is clicked\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type){\r\n        case 'editEmail': //reset everything\r\n            return {\r\n                ...initialState,\r\n            };\r\n        case 'sendCodeOrVerifyCode': //activateLoader\r\n            return {\r\n                ...state,\r\n                loader:true,\r\n                errors: {email: '', code: ''}\r\n            };\r\n        case 'update':\r\n            return {\r\n                ...state,\r\n                loader: false,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst CertificateForm = ({ onChangeInputFn, onChangeProfessionalbodyFn }) => {\r\n    const timerId = useRef(null);\r\n    const timerStartSeconds = 30;\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const [forEmailVerify, dispatchVerify] = useReducer(reducer, initialState);\r\n    const [startTimer, setStartTimer] = useState(false);\r\n    const [time, setTime] = useState(0)\r\n\r\n    const clearInputData = useCallback(() => {\r\n        const arr = ['accountant_email', 'accountant_full_name', 'address_1', 'phone', 'membership_number', 'membership_designation']\r\n        for(let i = 0; i < arr.length; i++){\r\n            onChangeInputFn({ name: arr[i], value: '' })\r\n        }\r\n        onChangeInputFn({ name: 'professional_body', value: 0 })\r\n    },[]);\r\n    \r\n\r\n    useEffect(() => {\r\n    \r\n      return () => {\r\n        clearInputData();\r\n      }\r\n    }, [clearInputData]);\r\n\r\n    useEffect(()=>{\r\n        if(startTimer && !time){\r\n            setStartTimer(false) //set timer to false (so it stops)\r\n        }\r\n    },[time, startTimer])\r\n\r\n    useEffect(()=>{\r\n        if(startTimer){\r\n            countdownFn(); //start timer\r\n            return\r\n        }\r\n        clearTimer(); //stop timer\r\n\r\n        return ()=>{\r\n            clearTimer(); //stop timer\r\n        }\r\n    },[startTimer])\r\n\r\n\r\n    const onClickEditEmail = () => {\r\n        dispatchVerify({type: 'editEmail'});\r\n        onChangeInputFn({name:'isEmailVerified', value: false}); //update in redux as the email is un-verified \r\n        const errors = invFormStatus?.errors || {}\r\n        const updErrors = deleteKeys(errors, ['accountant_email', 'isEmailVerified'])\r\n        dispatch(updateInvFormErrors({...updErrors}))\r\n    }\r\n    \r\n    const onChangeEmailInFn = ({ name, value }) => {\r\n        onChangeInputFn({name, value});\r\n        onClickEditEmail()\r\n    }\r\n\r\n    const startTimerFn = () => {\r\n        setTime(timerStartSeconds) //set start time\r\n        setStartTimer(true)\r\n    }\r\n\r\n    const onClickSendCode = async(resend=false) => {\r\n        //validate email ==> disable email edit, change btm text, call api and show code input field\r\n        const toValidate = {email: wholesaleClientCertificate?.accountant_email}\r\n        const { isValid, errors } = await validateEmail({data:toValidate});\r\n        if(!isValid){\r\n            const payload = { errors: {email: errors.email, code: ''} }\r\n            dispatchVerify( {type: 'update', payload} )\r\n            return {success: false}\r\n        }\r\n\r\n        resend || dispatchVerify({ type: 'sendCodeOrVerifyCode' }) //don't activate this loader for re-senc\r\n        const reqObj = { accountant_email: wholesaleClientCertificate?.accountant_email}\r\n        const { success, message, data } = await sendCodeToUser(reqObj);\r\n        //success\r\n        success && dispatchVerify({\r\n            type: 'update',\r\n            payload: { showCodeInput: true, code_id: data?.code_id }\r\n        })\r\n        success && startTimerFn()\r\n        success && toast.success(\"Verification code sent!\");\r\n\r\n        //failure\r\n        const payload = { ...initialState, errors: {email: message, code: ''}}\r\n        success || dispatchVerify( {type: 'update', payload} )\r\n        success || toast.error(message);\r\n\r\n        return { success }\r\n    }\r\n\r\n    const onChangeCodeInFn = ({ name, value }) => {\r\n        const payload = {[name]: value, errors:{email:'', code:''}}\r\n        dispatchVerify( {type: 'update', payload} )\r\n    }\r\n\r\n    const onClickSubmitCode = async() => {\r\n        //validate email, call api and show code input field\r\n        if(!forEmailVerify?.verificationCode){\r\n            const payload = {errors: {email:'', code: 'Verification code is a required field'}}\r\n            dispatchVerify({type: 'update', payload})\r\n            return\r\n        }\r\n\r\n        dispatchVerify({ type: 'sendCodeOrVerifyCode' });\r\n        const reqObj = {code: forEmailVerify?.verificationCode, code_id: forEmailVerify?.code_id}\r\n        const { success, message } = await verifyCodeFromUser(reqObj);\r\n        \r\n        //success\r\n        success && onClickEditEmail();\r\n        success && onChangeInputFn({name:'isEmailVerified', value: true}); //--update to redux that this email has been verified (for frontend purpose)\r\n        success && toast.success('Email verified');\r\n\r\n        //failure\r\n        success || dispatchVerify({\r\n            type: 'update',\r\n            payload: { errors: {email: '', code: message} }\r\n        })\r\n        success || toast.error(message);\r\n\r\n    }\r\n\r\n    const emailBtnContent = () => {\r\n        if(forEmailVerify?.loader && !forEmailVerify?.showCodeInput){\r\n            return <LoaderOnConfirm />\r\n        }\r\n        else if(forEmailVerify?.showCodeInput || wholesaleClientCertificate?.isEmailVerified){\r\n            return \"Edit Email\"\r\n        }\r\n        return \"Send Code\"\r\n    }\r\n\r\n    const emailBtnFn = () => {\r\n        if((forEmailVerify?.loader && !forEmailVerify?.showCodeInput) || forEmailVerify?.resendLoader){\r\n            return null\r\n        }\r\n        else if(forEmailVerify?.showCodeInput || wholesaleClientCertificate?.isEmailVerified){\r\n            return onClickEditEmail()\r\n        }\r\n        return onClickSendCode()\r\n    }\r\n\r\n    const codeBtnContent = () => {\r\n        if(forEmailVerify?.loader){\r\n            return <LoaderOnConfirm />\r\n        }\r\n        return 'Submit'\r\n    }\r\n\r\n    const codeBtnFn = () => {\r\n        if(forEmailVerify?.loader){\r\n            return null\r\n        }\r\n        return onClickSubmitCode()\r\n    }\r\n\r\n    const clearTimer = () => {\r\n        timerId.current && clearInterval(timerId.current); //clear timer\r\n    }\r\n\r\n    const countdownFn = () => {\r\n        timerId.current && clearInterval(timerId.current); //clear timer if there's one already active\r\n        timerId.current = setInterval(()=>{\r\n            setTime( prev => prev-1 ) //countdown each sec\r\n        }, 1000)\r\n    }\r\n\r\n    const onClickReSendCode = async() => {\r\n        if(time || forEmailVerify?.loader || forEmailVerify?.resendLoader){\r\n            //if timer is already running (or some loader is running)-- don't restart\r\n            return null\r\n        }\r\n        dispatchVerify({type: 'update', payload: {resendLoader: true}})\r\n\r\n        const {success} = await onClickSendCode(true) //send true for re-send\r\n        dispatchVerify({type: 'update', payload: {resendLoader: false}})\r\n        //on succes - start timer\r\n        // success && setTime(timerStartSeconds) //set start time\r\n        // success &&  setStartTimer(true)\r\n        success && startTimerFn();\r\n    }\r\n\r\n  return (\r\n      <div className=\"section__container--box\">\r\n        <div className=\"u-padding-y\">\r\n        <div className=\"u-margin-bottom-lg\">\r\n            <CustomTextButtonField\r\n                id=\"accountant-email\"\r\n                placeholder=\"Accountant's Email\"\r\n                type=\"email\"\r\n                content={emailBtnContent()}\r\n                label=\"Accountant's Email\"\r\n                asterisk=\"*\"\r\n                fullWidth=\"\"\r\n                name=\"accountant_email\"\r\n                value={wholesaleClientCertificate?.accountant_email} \r\n                onClickButton={emailBtnFn}\r\n                onChange={onChangeEmailInFn}\r\n                errorTxt={forEmailVerify?.errors?.email || invFormStatus?.errors?.isEmailVerified}\r\n                disableInput={forEmailVerify?.loader || forEmailVerify?.showCodeInput || wholesaleClientCertificate?.isEmailVerified}\r\n            />\r\n        </div>\r\n\r\n        {forEmailVerify?.showCodeInput? <div className=\"u-margin-bottom-lg\">\r\n            <div className=\"\">\r\n                <CustomTextButtonField\r\n                    id=\"verification-code\"\r\n                    placeholder=\"Enter the verification code\"\r\n                    type=\"text\"\r\n                    content={codeBtnContent()}\r\n                    asterisk=\"\"\r\n                    fullWidth=\" dark\"\r\n                    name=\"verificationCode\"\r\n                    value={forEmailVerify?.verificationCode}\r\n                    onClickButton={codeBtnFn}\r\n                    onChange={onChangeCodeInFn}\r\n                    errorTxt={forEmailVerify?.errors?.code}\r\n                    disableInput={forEmailVerify?.loader}\r\n                    // props for resend code below\r\n                    onClickReSendCode={onClickReSendCode}\r\n                    time={time}\r\n                    loader={forEmailVerify?.resendLoader}\r\n                />\r\n            </div>\r\n        </div>: null}\r\n\r\n\r\n            {/* <CustomTextField \r\n                placeholder=\"Accountant's Email\"\r\n                id=\"accountant-email\"\r\n                label=\"Accountant's Email\"\r\n                asterisk=\"*\"\r\n                name=\"accountant_email\"\r\n                value={wholesaleClientCertificate?.accountant_email}\r\n                type=\"\"\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            /> */}\r\n\r\n            <CustomTextField \r\n                placeholder=\"Full Name of Qualified Accountant\"\r\n                id=\"fullname-of-qualified-accountant\"\r\n                label=\"Full Name of Qualified Accountant\"\r\n                asterisk=\"*\"\r\n                name=\"accountant_full_name\"\r\n                value={wholesaleClientCertificate?.accountant_full_name}\r\n                type=\"\"\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField \r\n                placeholder=\"Address\"\r\n                id=\"address\"\r\n                label=\"Address\"\r\n                asterisk=\"\"\r\n                type=\"\"\r\n                name=\"address_1\"\r\n                value={wholesaleClientCertificate?.address_1}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField \r\n                placeholder=\"Phone\"\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                inputType=\"tel\"\r\n                asterisk=\"\"\r\n                type=\"\"\r\n                name=\"phone\"\r\n                value={wholesaleClientCertificate?.phone}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n        </div>\r\n        \r\n        <ProfessionalBody onChangeProfessionalbodyFn={onChangeProfessionalbodyFn}/>\r\n        <MembershipDetails onChangeInputFn={onChangeInputFn}/>\r\n\r\n        <hr />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CertificateForm;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst UploadCertificate = ({ onAddFiles, uploadedDocs, onClickRemove, onClickDel }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <h6 className=\"u-padding-y\">Please upload the Certificate</h6>\r\n            <DocPlaceholder \r\n                onAddFiles={onAddFiles} \r\n                uploadedDocs={uploadedDocs} \r\n                onClickRemove={onClickRemove} \r\n                onClickDel={onClickDel} \r\n                uniqId=\"wholesaleinvestoraccountantdocs\"\r\n            />\r\n            {invFormStatus?.errors?.document_url?.length? <div className=\"input__desc\">\r\n              {renderErrorTxt(invFormStatus?.errors?.document_url)}\r\n            </div>: null}\r\n        <hr />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default UploadCertificate","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import CustomTextButtonField from '../../Layout/CustomTextButtonField';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport AccountantSignature from './AccountantSignature';\r\nimport MembershipDetails from './MembershipDetails';\r\nimport ProfessionalBody from './ProfessionalBody';\r\nimport {uploadSignatureApiCall, deleteFileShortForms} from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { LOADING, SUCCESS, FAILED, WCC_YES, WCC_NO } from '../../../../constants';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport CertificateForm from './CertificateForm';\r\nimport UploadCertificate from './UploadCertificate';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst QualifiedAccountantCert = ({onFormChange}) => {\r\n\r\n    const toast = useToast();\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n    // const [ emailCode, setEmailCode ] = useState('');\r\n    // const [ showCodeInput, setShowCodeInput ] = useState(false);\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([])\r\n    \r\n    // const onChangeCodeInFn = (e) => {\r\n    //     const {name, value} = e.target\r\n    //     setEmailCode(value)\r\n    // }\r\n\r\n    // const onChangeEmailInFn = (e) => {\r\n    //     const {name, value} = e.target\r\n    //     onChangeInputFn({name, value})\r\n    // }\r\n\r\n    // const onClickSendCode = () => {\r\n    //     //validate email, call api and show code input field\r\n    //     setShowCodeInput(prevState => !prevState)\r\n    // }\r\n\r\n    // const onClickSubmitCode = () => {\r\n\r\n    // }\r\n\r\n    const onChangeRadioFn = ({ name, value }) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n    }\r\n\r\n    const onChangeProfessionalbodyFn = (e) =>{ \r\n        const { name, value } = e.target;\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n    }\r\n\r\n    const onChangeInputFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const updateDocUrl = ({name, value}) => {\r\n        onFormChange({name, value, level:'document-add'})\r\n    }\r\n\r\n    const removeDocFromStore = ({fileName, docData}) => {\r\n        onFormChange({ value: docData?.docUrl, level:'document-remove'})\r\n    }\r\n\r\n    const onUploadFile = async(file) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name                   \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            const {success, url, data} = await uploadSignatureApiCall(formData)\r\n            success && updateDocUrl({name:'document_url', value:url});\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => { \r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state  \r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFileShortForms(docData?.resData);\r\n        success && onClickRemove(fileName); //also add removeDocFromStore\r\n        success && removeDocFromStore({ docData });\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">Qualified Accountant Certification</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h5 className=\"section__container--box--subtitle\">Do you have a separate Certificate available? <span>*</span></h5>\r\n            <div className=\"row-space-between\">\r\n                <CustomRadioInput\r\n                    name=\"certificate_availability\"\r\n                    id=\"certificate_availability_yes\"\r\n                    content=\"Yes\"\r\n                    val={WCC_YES}\r\n                    type=\"\"\r\n                    checked={wholesaleClientCertificate?.certificate_availability === WCC_YES}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"certificate_availability\"\r\n                    id=\"certificate_availability_no\"\r\n                    content=\"No\"\r\n                    val={WCC_NO}\r\n                    type=\"\"\r\n                    checked={wholesaleClientCertificate?.certificate_availability === WCC_NO}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n            </div>\r\n            {invFormStatus?.errors?.certificate_availability? <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus?.errors?.certificate_availability)}\r\n            </div>: null}\r\n        </div>\r\n       \r\n       {wholesaleClientCertificate?.certificate_availability === WCC_NO? \r\n       <CertificateForm onChangeInputFn={onChangeInputFn} onChangeProfessionalbodyFn={onChangeProfessionalbodyFn}/>: null}\r\n\r\n        <div className=\"section__container--box\">\r\n            \r\n            {wholesaleClientCertificate?.certificate_availability === WCC_YES?\r\n            <UploadCertificate onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} />: null}\r\n\r\n            {wholesaleClientCertificate?.certificate_availability === WCC_NO? \r\n            <div className=\"text__box u-margin-bottom\">\r\n                <p className=\"text__box--p u-padding-y\">I, the above named Qualified Accountant, confirm that I comply with this body's continuing professional education requirements. I certify that the above named person/entity is a Qualifying Investor.</p>\r\n            </div> : null}\r\n\r\n           <AccountantSignature onChangeInputFn={onChangeInputFn}/>\r\n\r\n           <div className=\"note__box\">\r\n                <p className=\"note__box--p\"><span>Note:</span> For information on this certificate or a list of accountant qualifications, please refer to <a href=\"https://asic.gov.au/regulatory-resources/financial-services/financial-product-disclosure/certificates-issued-by-a-qualified-accountant/\">https://asic.gov.au/regulatory-resources/financial-services/financial-product-disclosure/certificates-issued-by-a-qualified-accountant/</a></p>\r\n           </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QualifiedAccountantCert;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CallToActions from '../Layout/CallToActions';\r\nimport Category from './SubSections/Category';\r\nimport InvestorCategory from './SubSections/InvestorCategory';\r\nimport QualifiedAccountantCert from './SubSections/QualifiedAccountantCert';\r\n\r\nconst QACertificationContent = ({onFormChange, onSubmit}) => {\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n\r\n    const onChangeInvestorFn = ({name, value, investorId}) => {\r\n        const updIndex = investorId - 1;\r\n        const upd = [...wholesaleClientCertificate?.investor_details];\r\n        upd[updIndex][name] = value;\r\n\r\n        onFormChange({\r\n            name: \"investor_details\",\r\n            value: [...upd]\r\n        });\r\n        return\r\n    }\r\n\r\n  return (\r\n\r\n    <div className=\"section\">\r\n        \r\n        <Category onFormChange={onFormChange} onChangeInvestorFn={onChangeInvestorFn}/>\r\n\r\n        <InvestorCategory onChangeInvestorFn={onChangeInvestorFn}/>\r\n\r\n        <QualifiedAccountantCert onFormChange={onFormChange}/>\r\n\r\n        <CallToActions onSubmit={onSubmit} onFormChange={onFormChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QACertificationContent;"],"names":["_ref","_invFormStatus$errors","_invFormStatus$errors2","investorId","itemIndex","investorDetails","onChangeinvestor","wholesaleClientCertificate","useSelector","store","tempInvNumber","category","CATEGORY_INDIVIDUAL_WCC","invFormStatus","label","QA_INVESTOR_LABELS","errMsgs","investor_name","errors","_jsx","children","CustomTextField","placeholder","concat","id","asterisk","type","name","value","onChangeFn","_ref2","formErrors","onChangeRadioFn","useEffect","_jsxs","className","CustomRadioInput","content","val","checked","no_of_individuals","renderErrorTxt","onChangeInputFn","_Fragment","controlling_person_of_investor_entity","onFormChange","onChangeInvestorFn","addInvestorDetails","numOfInvestors","_wholesaleClientCerti","_wholesaleClientCerti2","upd","prevDirLen","investor_details","length","filter","each","index","_toConsumableArray","newLen","newArr","Array","from","_objectSpread","singleWholesaleClientCertificateInvestorDetails","convrtToNum","parseInt","_ref3","CATEGORY_NON_INDIVIDUAL_WCC","CATEGORY_CONTROLLING_PERSON_WCC","HowManyIndividuals","_wholesaleClientCerti3","map","item","uniqId","NameOfInvestorOrEntity","renderInvestorNameInput","ControllingPersonOfInvestorEntity","investor_address","investor_category","INVESTOR_CATEGORY_NET_ASSETS_WCC","INVESTOR_CATEGORY_EARNED_WCC","INVESTOR_CATEGORY_CONTROLS_WCC","InvestorCategorySub","renderInvestorCategory","dateNow","moment","format","_useState","useState","_useState2","_slicedToArray","uploadedDocs","setUploadedDocs","_useState3","file","loader","_useState4","signCreate","setSignCreate","updateSignUrl","onSaveSignature","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sign","_ref3$fileName","fileName","formData","_yield$uploadSignatur","success","url","wrap","_context","prev","next","FormData","append","uploadSignatureApiCall","sent","prevDocs","SUCCESS","FAILED","prevState","stop","_x","apply","arguments","SignatureUploadOrCreate","signatureUrl","accountant_signature_url","inputType","asterik","date_of_signature","maxDate","split","membership_number","membership_designation","_invFormStatus$errors3","onChangeProfessionalbodyFn","htmlFor","Form","professional_body","as","onChange","CA_AUS_NZ_WCC","CPA_AUS_WCC","INST_PUBLIC_ACCOUNTANTS_WCC","INST_AMERICAN_PUBLIC_ACCOUNTANTS_WCC","CA_UK_WCC","CA_CANADA_WCC","CA_NZ_WCC","INST_CA_ENG_WALES_WCC","INST_CA_IRELAND_WCC","INST_CA_ENG_SCOTLAND_WCC","initialState","showCodeInput","verificationCode","email","code","resendLoader","code_id","reducer","state","action","payload","_forEmailVerify$error","_forEmailVerify$error2","timerId","useRef","dispatch","useDispatch","toast","useToast","_useReducer","useReducer","_useReducer2","forEmailVerify","dispatchVerify","startTimer","setStartTimer","time","setTime","clearInputData","useCallback","arr","i","clearTimer","countdownFn","onClickEditEmail","updErrors","deleteKeys","updateInvFormErrors","startTimerFn","onClickSendCode","resend","toValidate","_yield$validateEmail","isValid","_payload","reqObj","_yield$sendCodeToUser","message","data","_args","undefined","accountant_email","validateEmail","abrupt","sendCodeToUser","error","onClickSubmitCode","_ref5","_callee2","_yield$verifyCodeFrom","_context2","verifyCodeFromUser","current","clearInterval","setInterval","onClickReSendCode","_ref6","_callee3","_yield$onClickSendCod","_context3","CustomTextButtonField","isEmailVerified","LoaderOnConfirm","fullWidth","onClickButton","errorTxt","disableInput","_payload2","_defineProperty","accountant_full_name","address_1","phone","ProfessionalBody","MembershipDetails","onAddFiles","onClickRemove","onClickDel","React","DocPlaceholder","document_url","updateDocUrl","level","removeDocFromStore","docData","docUrl","onUploadFile","extradata","resData","updateDocArray","removeDocFromArray","_ref8","_ref7","_yield$deleteFileShor","delLoader","deleteFileShortForms","_x2","WCC_YES","certificate_availability","WCC_NO","CertificateForm","e","_e$target","target","UploadCertificate","files","addNewDocToArray","selectedDocType","AccountantSignature","href","onSubmit","updIndex","Category","InvestorCategory","QualifiedAccountantCert","CallToActions"],"sourceRoot":""}