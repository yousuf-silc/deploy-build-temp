{"version":3,"file":"static/js/77.e33818fe.chunk.js","mappings":"kMAyGA,EAnG0B,SAAHA,GAA+D,IAA1DC,EAAYD,EAAZC,aAAcC,EAAWF,EAAXE,YAAaC,EAAUH,EAAVG,WAAUC,EAAAJ,EAAEK,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EACvEE,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IAgBxCG,EAAeJ,GAAaK,EAAAA,EAAAA,KAACC,EAAAA,GAAe,IAApB,GAE1BC,EAAWV,EAAYW,YAAaX,EAAYW,YAAcJ,EAC9DK,EAAMZ,EAAYY,IAAMZ,EAAYY,IAAML,EAC1CM,EAAgBb,EAAYc,eAAgBd,EAAYc,eAAiBP,EACzEQ,EAAWf,EAAYgB,UAAYhB,EAAYgB,UAAYT,EAC3DU,EAAQjB,EAAYiB,MAAQjB,EAAYiB,MAAQV,EAEpD,OACEW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,+BAA+BE,MAAM,yBAAwBD,SAAC,4BAC5EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACxCZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,qBAAoBC,SAAC,qBAGnCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCZ,EAAAA,EAAAA,KAAA,SAAAY,SAAO,mCACPF,EAAAA,EAAAA,MAAA,OAAKC,UAAS,iBAAAG,OAA6B,OAAVrB,QAAU,IAAVA,GAAAA,EAAYsB,uBAAwB,YAAY,IAAKH,SAAA,EACpFZ,EAAAA,EAAAA,KAAA,QAAMW,UAAU,sBAAqBC,SAAC,OACtCZ,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,OAAOL,UAAU,eAAeM,YAAY,yBAAyBC,KAAK,yBACtFC,OAAQC,EAAAA,EAAAA,IAAaxB,EAAKmB,yBAA4B,GAAIM,SAnCrD,SAACC,GAAM,IAADC,EACnBC,EACJC,EAAwBH,EAAEI,OAAlBR,EAAIO,EAAJP,KAAMC,EAAKM,EAALN,MACRQ,GAAeP,EAAAA,EAAAA,IAAaD,GAC5BS,EAAyB,OAAZD,QAAY,IAAZA,GAAwB,QAAZJ,EAAZI,EAAcE,kBAAU,IAAAN,OAAZ,EAAZA,EAA0BO,WAAW,IAAK,IACvDC,EAAyB,KAAfH,IAAqBI,EAAAA,EAAAA,IAASJ,GAC1CG,GAAWH,IAAYJ,EAAiBS,WAAWL,IACvDG,GAAWxC,EAAa,CAAE2B,KAAAA,EAAMC,MAAOK,GAAkBI,GAC7D,EA2BgGM,WAAYvC,OAGnF,OAAVF,QAAU,IAAVA,GAAAA,EAAYsB,wBACbf,EAAAA,EAAAA,KAAA,OAAKW,UAAU,cAAaC,UACzBuB,EAAAA,EAAAA,GAAyB,OAAV1C,QAAU,IAAVA,OAAU,EAAVA,EAAYsB,0BACtB,SAEVf,EAAAA,EAAAA,KAAA,OAAKW,UAAU,+BAA8BC,UAC3CZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,eAAcC,SAAC,oIAKlCZ,EAAAA,EAAAA,KAAA,OAAKW,UAAU,0BAAyBC,UACpCZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,mCAAkCC,SAAC,8jBAIpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,oCAAmCC,SAAC,uCAElDZ,EAAAA,EAAAA,KAAA,OAAKW,UAAU,YAAWC,UACxBZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,eAAcC,SAAC,iDAG9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,6BAA4BC,SAAA,CAAC,eAAWZ,EAAAA,EAAAA,KAAA,QAAMW,UAAU,YAAWC,SAAEV,QAGnFQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,6BAA4BC,SAAC,UAC3CZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,oBAAmBC,SAAER,QAIpCM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,6BAA4BC,SAAC,qBAC3CZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,oBAAmBC,SAAEP,QAGpCK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,6BAA4BC,SAAC,gBAC3CZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,oBAAmBC,SAAEL,QAIpCG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,6BAA4BC,SAAC,YAC3CZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,oBAAmBC,SAAEH,QAGpCT,EAAAA,EAAAA,KAAA,OAAKW,UAAU,6CAA4CC,UACzDZ,EAAAA,EAAAA,KAAA,KAAGW,UAAU,eAAcC,SAAC,+NAM1C,E,mBCpDA,EA9CsB,SAAHtB,GAAsC,IAAhCC,EAAYD,EAAZC,aAAcE,EAAUH,EAAVG,WAC/BG,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IAExCwC,EAAa,SAAHC,GAAwB,IAAlBnB,EAAImB,EAAJnB,KAAMC,EAAKkB,EAALlB,MACpBmB,EAAcnB,GAASoB,SAASpB,GACtC5B,EAAa,CAAE2B,KAAAA,EAAMC,MAAOmB,GAC9B,EAEA,OACE5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,+BAA8BC,SAAC,uBAE7CZ,EAAAA,EAAAA,KAAA,OAAKW,UAAU,0BAAyBC,UACxCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,qEAAiEZ,EAAAA,EAAAA,KAAA,QAAAY,SAAM,UAE3EZ,EAAAA,EAAAA,KAACwC,EAAAA,EAAgB,CACftB,KAAK,sBACLuB,GAAG,kCACHC,QAAQ,oDACRC,IAAKC,EAAAA,GACLC,QAASjD,EAAKkD,sBAAwBF,EAAAA,GACtCR,WAAYA,KAGdpC,EAAAA,EAAAA,KAACwC,EAAAA,EAAgB,CACftB,KAAK,sBACLuB,GAAG,+BACHC,QAAQ,8CACRC,IAAKI,EAAAA,GACLF,QAASjD,EAAKkD,sBAAwBC,EAAAA,GACtCX,WAAYA,IAEH,OAAV3C,QAAU,IAAVA,GAAAA,EAAYqD,qBAAqB9C,EAAAA,EAAAA,KAAA,OAAKW,UAAU,cAAaC,UAC3DuB,EAAAA,EAAAA,GAAyB,OAAV1C,QAAU,IAAVA,OAAU,EAAVA,EAAYqD,uBACtB,MAER9C,EAAAA,EAAAA,KAAA,OAAKW,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGZ,EAAAA,EAAAA,KAAA,QAAAY,SAAM,UAAY,oJAMnC,ECzBA,EArBwB,SAAHtB,GAA4D,IAAtDC,EAAYD,EAAZC,aAAcC,EAAWF,EAAXE,YAAaC,EAAUH,EAAVG,WAAYE,EAAOL,EAAPK,QAChE,OACEe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBZ,EAAAA,EAAAA,KAAA,MAAIW,UAAU,mBAAkBC,SAAC,gCACjCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,+CACJZ,EAAAA,EAAAA,KAAA,MAAAY,SAAI,mDAONZ,EAAAA,EAAAA,KAACgD,EAAiB,CAACzD,aAAcA,EAAcC,YAAaA,EAAaC,WAAYA,EAAYE,QAASA,KAE1GK,EAAAA,EAAAA,KAACiD,EAAa,CAAC1D,aAAcA,EAAcE,WAAYA,MAI7D,C","sources":["components/Forms/Sections/SectionA/SubSections/InvestmentDetails.js","components/Forms/Sections/SectionA/SubSections/Distributions.js","components/Forms/Sections/SectionA/SectionAContent.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { isNumber } from '../../../../../utils/regexFuncs';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { LoaderOnConfirm } from '../../../../stylesheet/Loader';\r\nimport { currencyMask } from '../../../../../utils/regexFuncs';\r\n\r\nconst InvestmentDetails = ({onFormChange, fundDetails, formErrors, loading = ''}) => {\r\n  const secA = useSelector((store) => store.secA)\r\n\r\n  const onChangeFn = (e) =>{\r\n    let convertedValue\r\n    const { name, value } = e.target;\r\n    const withCommaVal = currencyMask(value) //removing anything other than number and adding commas\r\n    const noCommaVal = withCommaVal?.toString()?.replaceAll(\",\", \"\") //removing commas to send to backend\r\n    const isValid = noCommaVal === '' || isNumber(noCommaVal); //validation check\r\n    if (isValid && noCommaVal) convertedValue = parseFloat(noCommaVal) //update it as an integer\r\n    isValid && onFormChange({ name, value: convertedValue || noCommaVal }); //update to redux\r\n}\r\n\r\n  const renderInvestmentGoal = () => {\r\n   return  fundDetails?.asset?.investment_goal? currencyMask(fundDetails?.asset?.investment_goal) : null\r\n  }\r\n\r\n  const emptyString = !loading? '': <LoaderOnConfirm />;\r\n\r\n  var fundName = fundDetails.asset_title? fundDetails.asset_title : emptyString;\r\n  var bsb = fundDetails.bsb ? fundDetails.bsb : emptyString;\r\n  var accountNumber = fundDetails.account_number? fundDetails.account_number : emptyString;\r\n  var bankName = fundDetails.bank_name ? fundDetails.bank_name : emptyString;\r\n  var swift = fundDetails.swift ? fundDetails.swift : emptyString;\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\" title=\"A.1 Investment Details\">A.1 Investment Details</h4>\r\n        <div className=\"section__container--box\">\r\n        <h5 className=\"u-margin-bottom-xl\">Your Commitment</h5>\r\n\r\n        {/*custom input*/}\r\n        <div>\r\n            <div className=\"u-margin-bottom-lg\">\r\n              <label>Firm Commitment Amount* (AUD)</label>\r\n              <div className={`input__holder ${formErrors?.firm_commitment_amount? 'incorrect':''}`}> \r\n                <span className=\"input__holder--icon\">$</span>\r\n                <input type=\"text\" className=\"custom-input\" placeholder=\"Firm Commitment Amount\" name=\"firm_commitment_amount\" \r\n                value={ currencyMask(secA.firm_commitment_amount)  || \"\"} onChange={onChangeFn} disabled={!!loading}/>\r\n              </div>\r\n\r\n              {formErrors?.firm_commitment_amount? \r\n              <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.firm_commitment_amount)}\r\n              </div>: null}\r\n            </div>\r\n            <div className=\"note__box u-padding-10y bold\">\r\n              <p className=\"note__box--p\">This amount does not need to be paid upfront. You will be issued with a Capital Call notice when the monies are required.</p>\r\n            </div>\r\n        </div>\r\n\r\n        {/* text box */}\r\n        <div className=\"note__box u-padding-10y\">\r\n            <p className=\"note__box--p u-margin-bottom-xxl\">*By selecting this Firm Commitment option and executing this Application Form, you make a legally binding commitment to invest the nominated Firm Commitment amount in the Fund on the terms set out in the IM and the relevant SIM. Failure to pay the Firm Commitment amount when called constitutes a breach of contract and you will be liable to the Trustee and Investment Manager for any losses suffered by one or more of them arising from the breach as well as possible forfeiture of your investments in the Fund pursuant to the terms of the Trust Deed, IM and SIM.</p>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"section__container--box\">\r\n          <h5 className=\"section__container--box--subtitle\">Direct Credit / EFT Instructions:</h5>\r\n\r\n          <div className=\"note__box\">\r\n            <p className=\"note__box--p\">Please transfer investor funds amount to:</p>\r\n          </div>\r\n\r\n          <div className=\"box__container\">\r\n            <h6 className=\"box__container--subheading\">Fund Name: <span className=\"fund-name\">{fundName}</span></h6>\r\n            \r\n            {/* bsb */}\r\n            <div className=\"box__container--row\">\r\n              <h6 className=\"box__container--subheading\">BSB:</h6>\r\n              <p className=\"u-margin-bottom-0\">{bsb}</p>\r\n            </div>\r\n\r\n            {/* Account Number */}\r\n            <div className=\"box__container--row\">\r\n              <h6 className=\"box__container--subheading\">Account Number:</h6>\r\n              <p className=\"u-margin-bottom-0\">{accountNumber}</p>\r\n            </div>\r\n\r\n            <div className=\"box__container--row\">\r\n              <h6 className=\"box__container--subheading\">Bank Name:</h6>\r\n              <p className=\"u-margin-bottom-0\">{bankName}</p>\r\n            </div>\r\n\r\n            \r\n            <div className=\"box__container--row\">\r\n              <h6 className=\"box__container--subheading\">SWIFT:</h6>\r\n              <p className=\"u-margin-bottom-0\">{swift}</p>\r\n            </div>\r\n\r\n            <div className=\"note__box u-padding-10y u-padding-bottom-0\">\r\n              <p className=\"note__box--p\">Please note the Applicant's name in the reference when transferring the funds. The amount transferred must be the exact amount of the investment. Please ensure amounts transferred are net of all bank charges.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default InvestmentDetails;","import { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { PAY_INTO_NOMINATED_BANK_ACCOUNT, REINVEST_INTO_THE_SAME_UNITS } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst Distributions = ({ onFormChange, formErrors }) => {\r\n  const secA = useSelector((store) => store.secA);\r\n\r\n  const onChangeFn = ({ name, value }) =>{ \r\n    const convrtToNum = value && parseInt(value);\r\n    onFormChange({ name, value: convrtToNum });\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">A.2 Distributions</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n        <div>\r\n            <h6>Please indicate what you would like to do with your distributions<span>*</span></h6>\r\n\r\n            <CustomRadioInput\r\n              name=\"distribution_choice\"\r\n              id=\"pay-into-nominated-bank-account\"\r\n              content=\"Pay into nominated bank account (see section B.3)\"\r\n              val={PAY_INTO_NOMINATED_BANK_ACCOUNT}\r\n              checked={secA.distribution_choice === PAY_INTO_NOMINATED_BANK_ACCOUNT}\r\n              onChangeFn={onChangeFn}\r\n            />\r\n            \r\n            <CustomRadioInput\r\n              name=\"distribution_choice\"\r\n              id=\"reinvest-into-the-same-units\"\r\n              content=\"Reinvest into the same Units (if available)\"\r\n              val={REINVEST_INTO_THE_SAME_UNITS}\r\n              checked={secA.distribution_choice === REINVEST_INTO_THE_SAME_UNITS}\r\n              onChangeFn={onChangeFn}\r\n            />\r\n            {formErrors?.distribution_choice? <div className=\"input__desc\">\r\n              {renderErrorTxt(formErrors?.distribution_choice)}\r\n            </div>: null}\r\n\r\n            <div className=\"note__box\">\r\n              <p><span>Note:</span> Unless otherwise stipulated in the IM, if no selection is made, the distributions will be paid to your nominated account by default.</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Distributions;","import InvestmentDetails from './SubSections/InvestmentDetails';\r\nimport Distributions from './SubSections/Distributions';\r\n\r\nconst SectionAContent = ({ onFormChange, fundDetails, formErrors, loading }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <h2 className=\"section__heading\">Section A: Your Investment</h2>\r\n      <ul>\r\n        <li>All investors must complete this section.</li>\r\n        <li>All fields in Section A MUST be completed.</li>\r\n      </ul>\r\n{/* \r\n      <FormAbout fundData={fundData}/> \r\n\r\n      <FormAppAbout fundData={fundData}/> */}\r\n\r\n      <InvestmentDetails onFormChange={onFormChange} fundDetails={fundDetails} formErrors={formErrors} loading={loading}/>\r\n\r\n      <Distributions onFormChange={onFormChange} formErrors={formErrors}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionAContent;"],"names":["_ref","onFormChange","fundDetails","formErrors","_ref$loading","loading","secA","useSelector","store","emptyString","_jsx","LoaderOnConfirm","fundName","asset_title","bsb","accountNumber","account_number","bankName","bank_name","swift","_jsxs","className","children","title","concat","firm_commitment_amount","type","placeholder","name","value","currencyMask","onChange","e","_withCommaVal$toStrin","convertedValue","_e$target","target","withCommaVal","noCommaVal","toString","replaceAll","isValid","isNumber","parseFloat","disabled","renderErrorTxt","onChangeFn","_ref2","convrtToNum","parseInt","CustomRadioInput","id","content","val","PAY_INTO_NOMINATED_BANK_ACCOUNT","checked","distribution_choice","REINVEST_INTO_THE_SAME_UNITS","InvestmentDetails","Distributions"],"sourceRoot":""}