{"version":3,"file":"static/js/413.9cc23802.chunk.js","mappings":"qLAiBA,EAfqB,SAAHA,GAAsE,IAM1DC,EANPC,EAAcF,EAAdE,eAAcC,EAAAH,EAAEI,gBAAAA,OAAe,IAAAD,EAAC,GAAEA,EAAEE,EAAQL,EAARK,SAAUC,EAAWN,EAAXM,YAQnE,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,2BAAAC,OAA6BJ,GAAWK,UAH5BT,EAIFG,EAJkBH,EAAYU,KAAI,SAACC,GAAI,OAF5C,SAAHC,GAAA,IAAKC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAK,OAAMR,EAAAA,EAAAA,KAAA,KAAoBS,QAAS,kBAAId,EAAe,CAACY,MAAAA,EAAOC,MAAAA,GAAO,EAACL,SAAEJ,EAAY,CAACQ,MAAAA,EAAOC,MAAAA,KAAO,GAAAN,OAAlFM,GAAuF,CAEtEE,CAAa,CAACH,MAAMF,EAAK,GAAIG,MAAMH,EAAK,IAAI,MAOnH,ECwBA,EAlCuB,SAAHZ,GAA6H,IAAxHI,EAAeJ,EAAfI,gBAAiBc,EAAclB,EAAdkB,eAAgBC,EAAoBnB,EAApBmB,qBAAoBC,EAAApB,EAAEK,SAAAA,OAAQ,IAAAe,EAAC,GAAEA,EAAAC,EAAArB,EAAEsB,WAAAA,OAAU,IAAAD,EAAC,GAAEA,EAAAE,EAAAvB,EAAEwB,2BAAAA,OAA0B,IAAAD,EAAC,GAAEA,EAEvIE,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAEnBI,EAAiB,WAAH,OAASD,GAAW,SAAAE,GAAS,OAAKA,CAAS,GAAE,EAO3D1B,EAAc,SAAC2B,GACnB,IAAMC,GAAkB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQnB,QAAS,GAEnC,OAAGU,EAA2BW,SAAe,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQlB,OACtCmB,EACO,OAAND,QAAM,IAANA,GAAAA,EAAQnB,OAASQ,EACnB,GAANb,OAAUwB,EAAOnB,MAAK,KAAAL,OAAIa,GAErBY,CAET,EAEA,OACME,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,iBAAgBE,SAAA,EAC3B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,2BAA2BQ,QAASe,EAAerB,SAAA,EAC9DH,EAAAA,EAAAA,KAAA,SAAAG,SAAQJ,EAAYY,MACpBX,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMT,EAAQU,EAAAA,IAAYC,EAAAA,SAE9CX,IAAUtB,EAAAA,EAAAA,KAACkC,EAAY,CAACvC,eAvBZ,SAAHW,GAAwB,IAAnBC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAC9BI,EAAqB,CAACL,MAAAA,EAAOC,MAAAA,IAC7BgB,GACF,EAoBmE3B,gBAAiBA,EAAiBC,SAAUA,EAAUC,YAAaA,MAGxI,C,wPC4MA,EArO0B,SAAHN,GAAkG,IAAD0C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA3FC,EAAUpD,EAAVoD,WAA4BC,GAAFrD,EAAdsD,eAA+BtD,EAAfqD,iBAAiBE,EAAiBvD,EAAjBuD,kBAAmBC,EAASxD,EAATwD,UAAWC,EAASzD,EAATyD,UAG9FC,EAAUC,MAASC,SAErBC,EAAe,GACnBpC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CqC,EAAYnC,EAAA,GAAEoC,EAAepC,EAAA,GACpCqC,GAAoCtC,EAAAA,EAAAA,UAAS,CAACuC,KAAK,GAAIC,OAAO,KAAIC,GAAAvC,EAAAA,EAAAA,GAAAoC,EAAA,GAA3DI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgD5C,EAAAA,EAAAA,UAAS,IAAG6C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACtCG,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1DG,EAAU,CAEZC,UAA+B,QAApBpC,EAAAgC,EAAcK,cAAM,IAAArC,GAApBA,EAAsBoC,UAA+B,QAAtBnC,EAAE+B,EAAcK,cAAM,IAAApC,OAAA,EAApBA,EAAsBmC,UAAUrB,GAAY,GACxFuB,cAAmC,QAApBpC,EAAA8B,EAAcK,cAAM,IAAAnC,GAApBA,EAAsBoC,cAAmC,QAAtBnC,EAAE6B,EAAcK,cAAM,IAAAlC,OAAA,EAApBA,EAAsBmC,cAAcvB,GAAY,GACpGwB,kBAAuC,QAApBnC,EAAA4B,EAAcK,cAAM,IAAAjC,GAApBA,EAAsBmC,kBAAuC,QAAtBlC,EAAE2B,EAAcK,cAAM,IAAAhC,OAAA,EAApBA,EAAsBkC,kBAAkBxB,GAAY,GAChHyB,SAA8B,QAApBlC,EAAA0B,EAAcK,cAAM,IAAA/B,GAApBA,EAAsBkC,SAA8B,QAAtBjC,EAAEyB,EAAcK,cAAM,IAAA9B,OAAA,EAApBA,EAAsBiC,SAASzB,GAAY,IAGnF0B,EAAoB,SAAHtE,GAAiB,IAAZE,EAAKF,EAALE,MAClBqE,EAAcC,SAAStE,GAC7B0D,EAAoBW,EACxB,EAEME,EAAgB,SAAHC,GAAuB,IAAlBC,EAAID,EAAJC,KAAMzE,EAAKwE,EAALxE,MAC1BwC,EAAkB,CAACiC,KAAAA,EAAMzE,MAAAA,EAAO0E,MAAM,qBAAsBrC,WAAAA,GAChE,EAEMsC,EAAa,SAAHC,GAASA,EAAJH,KAAkB,IAAZzE,EAAK4E,EAAL5E,MACjBqE,EAAcC,SAAStE,GAC7BwC,EAAkB,CAACiC,KAAK,WAAYzE,MAAMqE,EAAaK,MAAM,qBAAsBrC,WAAAA,GACvF,EAEMwC,EAAgB,SAAHC,GAAuB,IAAlBL,EAAIK,EAAJL,KAAMzE,EAAK8E,EAAL9E,MAC1BwC,EAAkB,CAACiC,KAAAA,EAAMzE,MAAAA,EAAO0E,MAAM,qBAAsBrC,WAAAA,GAChE,EAEM0C,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAAC,EAAAjD,EAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAoC,GAA7BV,EAAID,EAAJC,KAAMjD,EAAUgD,EAAVhD,WAAUkD,EAAAF,EAAEG,SAAAA,OAAQ,IAAAD,EAAC,GAAEA,GACrDD,IAAQjD,EAAU,CAAAyD,EAAAE,KAAA,SAGa,OADxBP,EAAW,IAAIQ,UACZC,OAAO,OAAQZ,GAAMQ,EAAAE,KAAA,GACDG,EAAAA,EAAAA,IAAuBV,GAAU,KAAD,EAAAC,EAAAI,EAAAM,KAAtDT,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAChBD,GAAWd,EAAc,CAACJ,KAAK,gBAAiBzE,MAAM4F,IAGtDJ,GAAYxC,GAAgB,SAACqD,GACzB,OAAOA,EAASzG,KAAI,SAACC,GACjB,OAAGA,EAAKqD,KAAKuB,OAASe,EACX,CAACtC,KAAKrD,EAAKqD,KAAMC,OAAOwC,EAASW,EAAAA,GAAUC,EAAAA,IAE/C1G,CACX,GACJ,IAGA2F,GAAYlC,GAAc,SAACrC,GAAS,MAAI,CAACiC,KAAc,OAATjC,QAAS,IAATA,OAAS,EAATA,EAAWiC,KAAMC,OAAOwC,EAASW,EAAAA,GAAUC,EAAAA,GAAO,IAAG,yBAAAT,EAAAU,OAAA,GAAApB,EAAA,KAE1G,gBArBoBqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAuBfC,EAAiB,SAAHC,GAA4B,IAAvBvB,EAAIuB,EAAJvB,KAAMjD,EAAUwE,EAAVxE,WACrByE,EAAcxB,EAAKyB,QAAQ,QAAS,IAAIA,QAAQ,OAAQ,IAC9DzD,EAAc,CAACJ,KAAK4D,EAAa3D,OAAO6D,EAAAA,KACxCjC,EAAgB,CAACO,KAAKwB,EAAazE,WAAAA,EAAYmD,SAAS,IAC5D,EAaA,IAAMyB,EAAa,SAACC,GAChB,IAAMC,GAAQC,EAAAA,EAAAA,GAAOrE,GACrBmE,EAAMG,MAAK,SAACnE,IACmD,IAAxDiE,EAASG,WAAU,SAACC,GAAC,OAAGA,EAAErE,KAAKuB,OAASvB,EAAKuB,IAAI,OAd5D,SAA6BvB,GACzB,IAAMsC,EAAWtC,EAAKuB,KAClB+C,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACZ5E,EAAe0E,EAAOG,OAAOZ,QAAQ,QAAS,IAAIA,QAAQ,OAAQ,IAClEhC,EAAgB,CAACO,KAAMxC,EAAcT,WAAAA,EAAYmD,SAAAA,GACrD,EACAgC,EAAOI,cAAc1E,EACzB,CAOY2E,CAAoB3E,GACpBiE,EAASW,KAAK,CAAC5E,KAAAA,EAAMC,OAAO6D,EAAAA,KAGpC,IACAhE,EAAgBmE,EACpB,EAEMY,GAAgB,SAACvC,GACnB,IACMwC,GADQZ,EAAAA,EAAAA,GAAOrE,GACQkF,QAAO,SAACpI,GACjC,OAAOA,EAAKqD,KAAKuB,OAASe,CAC9B,IACAxC,GAAeoE,EAAAA,EAAAA,GAAKY,GACxB,EAkBF,OACE3G,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAA,yBAAAD,OAA8BgD,EAAY,KACzB,OAAfJ,QAAe,IAAfA,GAAAA,EAAiB2B,eAPZzE,EAAAA,EAAAA,KAAA,OAAK0I,IAAoB,OAAf5F,QAAe,IAAfA,OAAe,EAAfA,EAAiB2B,cAAekE,IAAG,YAAAzI,OAAc2C,GAAc+F,MAAO,CAACC,UAAU,UAAWC,SAAS,WAOpFjH,EAAAA,EAAAA,MAAAkH,EAAAA,SAAA,CAAA5I,SAAA,EAC9B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,iCAAgCE,SAAA,EAC3CH,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,cAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,qBAC3BqG,QAAQ,mBACRC,IAzHO,EA0HPC,QA1HO,IA0HEnF,EACTkB,WAAYP,KAEhB5E,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,cAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,qBAC3BqG,QAAQ,mBACRC,IAhIO,EAiIPC,QAjIO,IAiIEnF,EACTkB,WAAYP,OAnIL,IAiGhBX,GAGQjE,EAAAA,EAAAA,KAACqJ,EAAAA,EAAa,CAAC5B,WAAYA,EAAYlE,aAAcA,EAAcgF,cAAeA,GAAee,OAAO,0BAA0BC,UAAU,EAAOC,OAAO,YAnGlJ,IAoGTvF,GACCjE,EAAAA,EAAAA,KAACyJ,EAAAA,EAAS,CAAC5G,WAAYA,EAAYuE,eAAgBA,EAAgBvD,WAAYA,IAEnF,QAiCC,OAAPS,QAAO,IAAPA,GAAsB,QAAf3B,EAAP2B,EAASG,qBAAa,IAAA9B,GAAtBA,EAAwB+G,QAAQ1J,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACxDwJ,EAAAA,EAAAA,GAAsB,OAAPrF,QAAO,IAAPA,OAAO,EAAPA,EAASG,iBACrB,MAER5C,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,gBAAeE,SAAA,EAC1B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,gBAAeE,SAAA,EAC1BH,EAAAA,EAAAA,KAAC4J,EAAAA,EAAe,CACZX,GAAE,aAAA/I,OAAe2C,EAAU,SAC3BtC,MAAM,OACNsJ,YAAY,aACZC,UAAU,OACVC,KAAK,wBACLC,SAAU/G,EAAW,IAAI,GACzBgC,KAAK,oBACLzE,MAAsB,OAAfsC,QAAe,IAAfA,OAAe,EAAfA,EAAiB4B,kBACxBS,WAAYJ,EACZkF,WAAY3F,EACZ4F,QAAgB,OAAP/G,QAAO,IAAPA,OAAO,EAAPA,EAASgH,MAAM,KAAK,MAEjCnK,EAAAA,EAAAA,KAAC4J,EAAAA,EAAe,CACZX,GAAE,aAAA/I,OAAe2C,EAAU,aAC3BtC,MAAM,sBACNsJ,YAAY,sBACZE,KAAK,wBACLC,SAAU/G,EAAW,IAAI,GACzBgC,KAAK,YACLzE,MAAsB,OAAfsC,QAAe,IAAfA,OAAe,EAAfA,EAAiByB,UACxBY,WAAYJ,EACZkF,WAAY3F,QAIpBzC,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACI0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,cAAAD,OAAkB2C,EAAU,aAAY,KAAC7C,EAAAA,EAAAA,KAAA,QAAAG,SAAO8C,EAAW,IAAI,SAC/DjD,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,aAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,eAC3BqG,QAAQ,aACRC,IAAKiB,EAAAA,GACLhB,SAAwB,OAAftG,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,YAAayF,EAAAA,GACvCjF,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,aAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,mBAC3BqG,QAAQ,iBACRC,IAAKkB,EAAAA,GACLjB,SAAwB,OAAftG,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,YAAa0F,EAAAA,GACvClF,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,aAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,kBAC3BqG,QAAQ,gBACRC,IAAKmB,EAAAA,GACLlB,SAAwB,OAAftG,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,YAAa2F,EAAAA,GACvCnF,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,aAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,aAC3BqG,QAAQ,WACRC,IAAKoB,EAAAA,GACLnB,SAAwB,OAAftG,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,YAAa4F,EAAAA,GACvCpF,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,aAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,uBAC3BqG,QAAQ,qBACRC,IAAKqB,EAAAA,GACLpB,SAAwB,OAAftG,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,YAAa6F,EAAAA,GACvCrF,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAI,aAAA/E,OAAe2C,EAAU,aAC7BoG,GAAE,aAAA/I,OAAe2C,EAAU,aAC3BqG,QAAQ,WACRC,IAAKsB,EAAAA,GACLrB,SAAwB,OAAftG,QAAe,IAAfA,OAAe,EAAfA,EAAiB6B,YAAa8F,EAAAA,GACvCtF,WAAYA,OAGZ,OAAPb,QAAO,IAAPA,GAAiB,QAAV1B,EAAP0B,EAASK,gBAAQ,IAAA/B,GAAjBA,EAAmB8G,QAAQ1J,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACnDwJ,EAAAA,EAAAA,GAAerF,EAAQK,YACpB,UA7G8B9B,EAiHlD,E,kDC1CA,EAvLwB,SAAHpD,GAA4D,IAAD0C,EAAAC,EAAAsI,EAArDC,EAAYlL,EAAZkL,aAAc5H,EAActD,EAAdsD,eAAgB6H,EAAgBnL,EAAhBmL,iBAC/CC,GAAQC,EAAAA,EAAAA,KACRC,GAAO3G,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM0G,IAAI,IACxC5G,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAEhEjD,GAA8CC,EAAAA,EAAAA,UAAS,CAACZ,MAAMyK,EAAAA,GAAAA,GAAAA,GAA4BxK,MAAMwK,EAAAA,GAAAA,GAAAA,KAA4B5J,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArH+J,EAAe7J,EAAA,GAAE8J,EAAkB9J,EAAA,GAC1CqC,GAAwCtC,EAAAA,EAAAA,UAAS,IAAGyC,GAAAvC,EAAAA,EAAAA,GAAAoC,EAAA,GAA7CF,EAAYK,EAAA,GAAEJ,EAAeI,EAAA,GAE9BuB,EAAa,SAAH7E,GAAsB,IAAjB2E,EAAI3E,EAAJ2E,KAAMzE,EAAKF,EAALE,MACjBqE,EAAcC,SAAStE,GAC7BmK,EAAa,CAAC1F,KAAAA,EAAMzE,MAAMqE,EAAaK,MAAM,IACjD,EAEMlC,EAAoB,SAAHgC,GAA0C,IAArCC,EAAID,EAAJC,KAAMzE,EAAKwE,EAALxE,MAAO0E,EAAKF,EAALE,MAAOrC,EAAUmC,EAAVnC,WAC5C8H,EAAa,CAAC1F,KAAAA,EAAMzE,MAAMA,EAAO0E,MAAAA,EAAOiG,YAAYtI,GACxD,EAEMuI,EAAY,eAAAhG,GAAAK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMlC,GAAI,IAAAqG,EAAA/D,EAAAC,EAAAoF,EAAAlF,EAAAC,EAAAkF,EAAAC,EAAAC,EAAArE,UAAA,OAAAzB,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,GAAzBuD,EAAIyB,EAAA9B,OAAA,QAAA+B,IAAAD,EAAA,GAAAA,EAAA,GAAC,CAACjL,MAAM,GAAIC,MAAM,KAChDkD,EAAK,CAAD4C,EAAAE,KAAA,SAMiD,OAL9CR,EAAWtC,EAAKuB,MAChBgB,EAAW,IAAIQ,UACZC,OAAO,OAAQhD,GACxBuC,EAASS,OAAO,OAAQqD,EAAKvJ,OAC7ByF,EAASS,OAAO,UAAW,KAC3BT,EAASS,OAAO,mBAAoB3D,GAAgBuD,EAAAE,KAAA,IACjBkF,EAAAA,EAAAA,IAAYzF,GAAS,QAAAoF,EAAA/E,EAAAM,KAAjDT,EAAOkF,EAAPlF,QAASC,EAAGiF,EAAHjF,IAAKkF,EAAID,EAAJC,KACfC,EAAY,CACd5H,OAAQwC,EAASW,EAAAA,GAAUC,EAAAA,GAC3B4E,OAAQvF,EACRwF,QAASN,IAEbO,EAAAA,EAAAA,IAAe,CAACrI,gBAAAA,EAAiBwC,SAAAA,EAAUuF,UAAAA,IAAW,yBAAAjF,EAAAU,OAAA,GAAApB,EAAA,KAE7D,gBAhBiBqB,GAAA,OAAA7B,EAAA8B,MAAA,KAAAC,UAAA,KAyCZoB,EAAgB,SAACvC,IAEnB8F,EAAAA,EAAAA,IAAmB,CAAC9F,SAAAA,EAAUzC,aAAAA,EAAcC,gBAAAA,GAChD,EAEMuI,EAAU,eAAAlG,GAAAJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqG,EAAA1G,GAAA,IAAAU,EAAAiG,EAAAC,EAAA/F,EAAA,OAAAT,EAAAA,EAAAA,KAAAW,MAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,OAE0D,OAFnDR,EAAQV,EAARU,SAAUiG,EAAO3G,EAAP2G,SAEhCJ,EAAAA,EAAAA,IAAe,CAACrI,gBAAAA,EAAiBwC,SAAAA,EAAUuF,UAAW,CAACa,WAAW,KAAOD,EAAA3F,KAAA,GAC/C6F,EAAAA,EAAAA,IAAkB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASL,SAAS,KAAD,EAAAM,EAAAC,EAAAvF,MAA9CT,EAAO+F,EAAP/F,UACGoC,EAAcvC,GACzBG,GAAW0E,EAAM1E,QAAQ,yBACzBA,IAAW0F,EAAAA,EAAAA,IAAe,CAACrI,gBAAAA,EAAiBwC,SAAAA,EAAUuF,UAAW,CAACa,WAAW,KAC7EjG,GAAW0E,EAAMyB,MAAM,qBAAoB,yBAAAH,EAAAnF,OAAA,GAAAgF,EAAA,KAC9C,gBAReO,GAAA,OAAA1G,EAAAqB,MAAA,KAAAC,UAAA,KA0BlB,OACEtF,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,UAASE,SAAA,EACpBH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAmBuM,MAAM,uCAAsCrM,SAAC,0CAC9E0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBE,SAAA,EAC/B0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6CAA4CE,SAAC,8EAE3D0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kBACJ0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UAC5BH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,0RAEH0B,EAAAA,EAAAA,MAAA,MAAI5B,UAAU,cAAaE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,oEACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0NACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kIACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,geAKhB0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,4CACJ0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,cAAaE,SAAA,EACxBH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,6bACHH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,oJArCS,WAAO,IAADsM,EAClC,OAAW,OAAJ1B,QAAI,IAAJA,GAAwB,QAApB0B,EAAJ1B,EAAM2B,0BAAkB,IAAAD,OAApB,EAAJA,EAA0BrM,KAAI,SAACuM,EAAUC,GAC5C,IAAMC,EAASD,EAAS,EAElB/J,GAAqB,OAAR8J,QAAQ,IAARA,OAAQ,EAARA,EAAUG,QAASD,EAChC5J,EAAY2J,EAAWG,EAAAA,GAE7B,OAAO/M,EAAAA,EAAAA,KAACgN,EAAiB,CAAkBnK,WAAYA,EAAYE,eAAgBA,EAAgBD,gBAAiB6J,EAAU3J,kBAAmBA,EAAmBC,UAAWA,EAAWC,UAAW0J,GAAtK/J,EACnC,GACJ,CAiCaoK,IACDpL,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BE,SAAC,iCAE7C0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACI0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,CAAI,sBAAkBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UAC5B0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAK,oBACLgE,GAAG,4BACHE,IAAK+D,EAAAA,GACLhE,QAAQ,4BACRE,QAAS2B,EAAKoC,oBAAsBD,EAAAA,GACpC/H,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAK,oBACLgE,GAAG,4BACHE,IAAKiE,EAAAA,GACLlE,QAAQ,4BACRE,QAAS2B,EAAKoC,oBAAsBC,EAAAA,GACpCjI,WAAYA,KAEhBnF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CACb/D,KAAK,oBACLgE,GAAG,4BACHE,IAAKkE,EAAAA,GACLnE,QAAQ,kDACRE,QAAS2B,EAAKoC,oBAAsBE,EAAAA,GACpClI,WAAYA,OAGC,QAApBhD,EAAAgC,EAAcK,cAAM,IAAArC,GAApBA,EAAsBgL,mBAAmBnN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACjEwJ,EAAAA,EAAAA,GAAmC,QAArBvH,EAAC+B,EAAcK,cAAM,IAAApC,OAAA,EAApBA,EAAsB+K,qBAClC,SAGZnN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBE,UACpCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcE,SAAC,8FAGhC0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCE,SAAC,kFAC/CH,EAAAA,EAAAA,KAACsN,EAAAA,EAAc,CACXzN,gBAAiBmL,EAAAA,GACjBrK,eAAgBsK,EAChBrK,qBA7FK,SAACc,GAE1BwJ,GAAkBqC,EAAAA,EAAAA,GAAC,CAAC,EAAG7L,GAC3B,IA4FoC,OAAfuJ,QAAe,IAAfA,GAAAA,EAAiBzK,OACdR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACxBH,EAAAA,EAAAA,KAACwN,EAAAA,EAAc,CAAC/F,WAvIzB,SAACC,IAEhB+F,EAAAA,EAAAA,IAAiB,CACb/F,MAAAA,EACAnE,aAAAA,EACAC,gBAAAA,EACA4H,aAAAA,EACAH,iBAAesC,EAAAA,EAAAA,GAAA,GAAKtC,IAE5B,EA8HoE1H,aAAcA,EAAcgF,cAAeA,EAAewD,WAAYA,EAAYzC,OAAO,0BAC7H,eAMnB,OAAJyB,QAAI,IAAJA,GAAe,QAAXL,EAAJK,EAAM2C,iBAAS,IAAAhD,OAAX,EAAJA,EAAiBhB,QAAS,GAAGiE,EAAAA,EAAAA,IAAuB,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAM2C,UAAW9C,GAAoB,UAIlG,C","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Sections/SectionI/InvestorSignatory.js","components/Forms/Sections/SectionI/SectionIContent.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst DropdownList = ({onSelectOption, dropdownOptions=[], addClass, renderLabel }) => {\r\n\r\n\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`}>\r\n        {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  } \r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList onSelectOption={onSelectOption} dropdownOptions={dropdownOptions} addClass={addClass} renderLabel={renderLabel}/>}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Signature from '../../Layout/Signature';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\n// import DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { uploadSignatureApiCall } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { INIDIVIDUAL_I, JOINT_INVESTOR_I, SOLE_DIRECTOR_I, DIRECTOR_I, INDIVIDUAL_TRUSTEE_I, ATTORNEY_I, LOADING, SUCCESS, FAILED } from '../../../../constants';\r\nimport ImageUploader from '../../Layout/ImageUploader'; \r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport moment from 'moment/moment';\r\n\r\nconst InvestorSignatory = ({ investorId, investorFormId, investorDetails, onChangeSignatory, mandatory, itemIndex }) => {\r\n    const IS_SIGN_UPLOAD = 1;\r\n    const IS_SIGN_CREATE = 2;\r\n    const dateNow = moment().format();\r\n\r\n    let base64String = \"\";\r\n    const [uploadedDocs, setUploadedDocs] = useState([])\r\n    const [signCreate, setSignCreate] = useState({file:'', loader:''})\r\n    const [isSignCreateOrUp, setIsSignCreateOrUp] = useState('');\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const errMsgs = {\r\n        // signatory_info_id: invFormStatus.errors?.signatory_info_id? invFormStatus.errors?.signatory_info_id[itemIndex]: [''],\r\n        full_name: invFormStatus.errors?.full_name? invFormStatus.errors?.full_name[itemIndex]: [],\r\n        signature_url: invFormStatus.errors?.signature_url? invFormStatus.errors?.signature_url[itemIndex]: [],\r\n        date_of_signature: invFormStatus.errors?.date_of_signature? invFormStatus.errors?.date_of_signature[itemIndex]: [],\r\n        capacity: invFormStatus.errors?.capacity? invFormStatus.errors?.capacity[itemIndex]: []\r\n    }\r\n\r\n    const onChangeSignRadio = ({value}) => {\r\n        const convrtToNum = parseInt(value);\r\n        setIsSignCreateOrUp(convrtToNum);\r\n    }\r\n    \r\n    const onInputChange = ({name, value}) => {\r\n        onChangeSignatory({name, value, level:'individual_details', investorId});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) => {\r\n        const convrtToNum = parseInt(value);\r\n        onChangeSignatory({name:'capacity', value:convrtToNum, level:'individual_details', investorId});\r\n    }\r\n\r\n    const updateSignUrl = ({name, value}) => {\r\n        onChangeSignatory({name, value, level:'individual_details', investorId});\r\n    }\r\n\r\n    const onSaveSignature = async({sign, investorId, fileName=\"\"}) => {\r\n        if(sign && investorId){\r\n            //call api to upload files\r\n            const formData = new FormData();\r\n            formData.append('file', sign);\r\n            const {success, url} = await uploadSignatureApiCall(formData);\r\n            success && updateSignUrl({name:'signature_url', value:url});\r\n\r\n            //below is for updating loader state for sign upload\r\n            fileName && setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n                return prevDocs.map((each)=>{\r\n                    if(each.file.name === fileName){\r\n                        return {file:each.file, loader:success? SUCCESS : FAILED}\r\n                    }\r\n                    return each\r\n                })\r\n            });\r\n\r\n            //below is for updating loader state for sign create\r\n            fileName || setSignCreate((prevState)=>({file:prevState?.file, loader:success? SUCCESS : FAILED}));\r\n        }    \r\n    }\r\n\r\n    const onAddSignature = ({sign, investorId}) => {\r\n        const cleanBase64 = sign.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n        setSignCreate({file:cleanBase64, loader:LOADING});\r\n        onSaveSignature({sign:cleanBase64, investorId, fileName:\"\"})\r\n    }\r\n\r\n    function convertBase64Upload(file) { //to convert uploaded signature img into base64\r\n        const fileName = file.name\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\"); //replace is needed - add for signature also\r\n            onSaveSignature({sign: base64String, investorId, fileName}) //actual upload to backend\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n    const onAddFiles = (files) => {\r\n        const uploaded = [...uploadedDocs];\r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f)=>f.file.name === file.name) === -1){\r\n                convertBase64Upload(file)\r\n                uploaded.push({file, loader:LOADING});\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        setUploadedDocs(uploaded);\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        const allFiles = [...uploadedDocs];\r\n        const newSetFiles = allFiles.filter((each)=>{\r\n            return each.file.name !== fileName\r\n        });\r\n        setUploadedDocs([...newSetFiles]);\r\n    }\r\n\r\n    const renderSignOrUpload = () => {\r\n        if(isSignCreateOrUp === IS_SIGN_UPLOAD) {\r\n            // // return <DocPlaceholder onUploadFile={onUploadSignature} multiple={false} accept=\"image/*\"/>\r\n            // return <ImageUploader onUploadFile={onUploadSignature} multiple={false} accept=\"image/*\"/>\r\n            return <ImageUploader onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} uniqId=\"sectionisignatureupload\" multiple={false} accept=\"image/*\"/>\r\n        } else if(isSignCreateOrUp === IS_SIGN_CREATE) {\r\n            return <Signature investorId={investorId} onAddSignature={onAddSignature} signCreate={signCreate}/>\r\n        }\r\n        return null\r\n    }\r\n\r\n    const renderUploadedSign = () => {\r\n        return <img src={investorDetails?.signature_url} alt={`Investor-${investorId}`} style={{objectFit:'contain', maxWidth:'100%'}}/>\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"section__container--box\" key={investorId}>\r\n        <h5>{`Investor or Signatory ${itemIndex + 1}`}</h5>\r\n        {!investorDetails?.signature_url? <>\r\n            <div className=\"u-padding-10y radio-inputs-row\">\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-signature`}\r\n                    id={`signatory-${investorId}-signature-upload`}\r\n                    content=\"Upload signature\"\r\n                    val={IS_SIGN_UPLOAD}\r\n                    checked={isSignCreateOrUp === IS_SIGN_UPLOAD}\r\n                    onChangeFn={onChangeSignRadio}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-signature`}\r\n                    id={`signatory-${investorId}-signature-create`}\r\n                    content=\"Create signature\"\r\n                    val={IS_SIGN_CREATE}\r\n                    checked={isSignCreateOrUp === IS_SIGN_CREATE}\r\n                    onChangeFn={onChangeSignRadio}\r\n                />\r\n            </div>\r\n            {renderSignOrUpload()}\r\n        </> : renderUploadedSign()\r\n        }\r\n        {errMsgs?.signature_url?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(errMsgs?.signature_url)}\r\n        </div>: null}\r\n\r\n        <div className=\"u-padding-10y\">\r\n            <div className=\"u-padding-10y\">\r\n                <CustomTextField \r\n                    id={`signature-${investorId}-date`}\r\n                    label=\"Date\"\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    inputType=\"date\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk={mandatory? \"*\":\"\"}\r\n                    name='date_of_signature'\r\n                    value={investorDetails?.date_of_signature}\r\n                    onChangeFn={onInputChange}\r\n                    formErrors={errMsgs}\r\n                    maxDate={dateNow?.split(\"T\")[0]}\r\n                />\r\n                <CustomTextField \r\n                    id={`signatory-${investorId}-fullname`}\r\n                    label=\"Signatory full name\"\r\n                    placeholder=\"Signatory full name\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk={mandatory? \"*\":\"\"}\r\n                    name=\"full_name\"\r\n                    value={investorDetails?.full_name}\r\n                    onChangeFn={onInputChange}\r\n                    formErrors={errMsgs}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <h5>{`Signatory ${investorId} Capacity`} <span>{mandatory? \"*\":\"\"}</span></h5>\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-capacity`}\r\n                    id={`signatory-${investorId}-individual`}\r\n                    content=\"Individual\"\r\n                    val={INIDIVIDUAL_I}\r\n                    checked={investorDetails?.capacity === INIDIVIDUAL_I}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-capacity`}\r\n                    id={`signatory-${investorId}-joint-investor`}\r\n                    content=\"Joint Investor\"\r\n                    val={JOINT_INVESTOR_I}\r\n                    checked={investorDetails?.capacity === JOINT_INVESTOR_I}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-capacity`}\r\n                    id={`signatory-${investorId}-sole-director`}\r\n                    content=\"Sole Director\"\r\n                    val={SOLE_DIRECTOR_I}\r\n                    checked={investorDetails?.capacity === SOLE_DIRECTOR_I}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-capacity`}\r\n                    id={`signatory-${investorId}-director`}\r\n                    content=\"Director\"\r\n                    val={DIRECTOR_I}\r\n                    checked={investorDetails?.capacity === DIRECTOR_I}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-capacity`}\r\n                    id={`signatory-${investorId}-individual-trustee`}\r\n                    content=\"Individual Trustee\"\r\n                    val={INDIVIDUAL_TRUSTEE_I}\r\n                    checked={investorDetails?.capacity === INDIVIDUAL_TRUSTEE_I}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`signatory-${investorId}-capacity`}\r\n                    id={`signatory-${investorId}-attorney`}\r\n                    content=\"Attorney\"\r\n                    val={ATTORNEY_I}\r\n                    checked={investorDetails?.capacity === ATTORNEY_I}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n            </div>\r\n            {errMsgs?.capacity?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(errMsgs.capacity)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvestorSignatory;","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport InvestorSignatory from './InvestorSignatory';\r\nimport { ONE_SIGNATORY, TWO_SIGNATORY, ALL_SIGNATORY, SIGN_MANDATORY_I, LOADING, SUCCESS, FAILED, SUPPORTING_DOCUMENTS } from '../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport Backdrop from '../../Layout/Backdrop';\r\nimport { formatAndPrintDocs } from '../../../../utils/validations/helperFunc';\r\nimport CustomDropdown from '../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst SectionIContent = ({ onFormChange, investorFormId, removeDocFromArr }) => {\r\n    const toast = useToast();\r\n    const secI = useSelector((store) => store.secI);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const [selectedDocType, setSelectedDocType] = useState({label:SUPPORTING_DOCUMENTS[0][1], value:SUPPORTING_DOCUMENTS[0][0]})\r\n    const [uploadedDocs, setUploadedDocs] = useState([])\r\n\r\n    const onChangeFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:''});\r\n    }\r\n\r\n    const onChangeSignatory = ({name, value, level, investorId}) => {\r\n        onFormChange({name, value:value, level, investor_id:investorId});\r\n    }\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name                   \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            formData.append('section', 'i');\r\n            formData.append('investor_form_id', investorFormId);\r\n            const {success, url, data} = await uploadFiles(formData)\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...selectedDocType},\r\n        })\r\n    }\r\n\r\n    // const onClickRetry = (fileName) => {\r\n    //     const reqFile = uploadedDocs.find((each)=> {\r\n    //         const x = each?.file?.name === fileName\r\n    //         console.log(x, each?.file?.name, fileName );\r\n    //         return x\r\n    //     });\r\n    //     if(reqFile) {\r\n    //         //call upload file --\r\n    //         onUploadFile(reqFile.file);\r\n    //     }\r\n    // }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n    const updateSelectedOption = (option) => {\r\n        //update selected document type to the state\r\n        setSelectedDocType({...option})\r\n    }\r\n\r\n    const renderInvestorSignatory = () => {\r\n        return secI?.individual_details?.map((eachItem, arrIndex)=>{\r\n            const tempId = arrIndex+1\r\n            // const investorId = eachItem?.signatory_info_id || tempId\r\n            const investorId = eachItem?.index || tempId\r\n            const mandatory = arrIndex < SIGN_MANDATORY_I // //mandatory only till 2 directors/investors\r\n\r\n            return <InvestorSignatory key={investorId} investorId={investorId} investorFormId={investorFormId} investorDetails={eachItem} onChangeSignatory={onChangeSignatory} mandatory={mandatory} itemIndex={arrIndex}/> \r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className=\"section\">\r\n        <h2 className=\"section__heading\" title=\"Section I: Declarations & Signatures\">Section I: Declarations &amp; Signatures</h2>\r\n        <div className=\"section__container\">\r\n            <div>\r\n                <h4 className=\"section__container--subtitle u-padding-10y\">Please read the declarations below before signing this Application Form.</h4>\r\n\r\n                <div className=\"section__container--box\">\r\n                    <h5>Use of email</h5>\r\n                    <div>\r\n                        <div className=\"normal-text\">\r\n                        <p>If I/we submit my/our Application Form by email, the Trustee may rely on the emailed Application Form to process and accept my/our application. For each investment in the Fund, if the Trustee receives instructions by email in relation to my/our investment in the Fund, I/we:</p>\r\n                        </div>\r\n                        <ol className=\"normal-text\">\r\n                            <li>Will send the originals in the mail for the Trustee's records,</li>\r\n                            <li>Acknowledge that there is potentially a greater risk that fraudulent instructions can be given by someone who has access to my/our account number and a copy of my/our signature(s) and that I/we accept such risks,</li>\r\n                            <li>Acknowledge that the Trustee may assume that the instruction has been sent, and is authorised, by or on behalf of me/us, and</li>\r\n                            <li>Release the Trustee from, and indemnify the Trustee against, all losses and liabilities arising from any payment or action taken by the Trustee based on any instruction bearing my/our account number and a signature that purports to be mine/ours or that of an authorised signatory on the account, even if such instructions are not authorised (except to the extent that such losses and liabilities directly arise from the negligence or wilful default of the Trustee).</li>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"section__container--box\">\r\n                    <h5>Consent for Electronic ID Verification</h5>\r\n                    <div className=\"normal-text\">\r\n                        <p>I/We hereby consent and authority for Specialised Investment and Lending Corporation Pty Ltd and its related entity (SILC) to provide and use my personal information (including my passport details) for the purpose of meeting SILC’s obligations under Australian law in relation to identity verification (such as AML/CTF Laws) including checking my information with the document issuer or official record holder via third party systems.</p>\r\n                        <p>In the event that Electronic ID Verification is unable to be completed, we may be required to conduct the ID verification via video call.</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* {Array.from({ length: numOfInvestors }, (_, index) => <InvestorSignatory investorId={index} key={index}/>)} */}\r\n                {renderInvestorSignatory()}\r\n                <div className=\"section__container--box\">\r\n                    <h4 className=\"section__container--subtitle\">Ongoing Signatory Authority</h4>\r\n\r\n                    <div>\r\n                        <h5>Signing Authority <span>*</span></h5>\r\n                        <div>\r\n                            <CustomRadioInput \r\n                                name=\"signing_authority\" \r\n                                id=\"only-one-required-to-sign\"\r\n                                val={ONE_SIGNATORY}\r\n                                content=\"Only one required to sign\"\r\n                                checked={secI.signing_authority === ONE_SIGNATORY}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            <CustomRadioInput\r\n                                name=\"signing_authority\"\r\n                                id=\"two-signatories-must-sign\"\r\n                                val={TWO_SIGNATORY}\r\n                                content=\"Two signatories must sign\"\r\n                                checked={secI.signing_authority === TWO_SIGNATORY}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            <CustomRadioInput\r\n                                name=\"signing_authority\"\r\n                                id=\"all-signatories-must-sign\"\r\n                                val={ALL_SIGNATORY}\r\n                                content=\"All signatories must sign (joint accounts only)\"\r\n                                checked={secI.signing_authority === ALL_SIGNATORY}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                        </div>\r\n                        {invFormStatus.errors?.signing_authority? <div className=\"input__desc\">\r\n                            {renderErrorTxt(invFormStatus.errors?.signing_authority)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                    <div className=\"note__box u-padding-10y\">\r\n                        <p className=\"note__box--p\">Please indicate signing requirements for future instructions regarding your investment</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h6 className=\"u-padding-y u-margin-bottom-lg\">Upload other supporting documents (if any) before submitting the application</h6>\r\n                        <CustomDropdown\r\n                            dropdownOptions={SUPPORTING_DOCUMENTS}\r\n                            selectedOption={selectedDocType}\r\n                            updateSelectedOption={updateSelectedOption}\r\n                        />\r\n                        {selectedDocType?.value ?\r\n                            <div className='u-padding-y'>\r\n                                <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"sectionicontentdocs\"/>\r\n                            </div>: null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {secI?.documents?.length > 0? formatAndPrintDocs(secI?.documents, removeDocFromArr) : null} \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionIContent;"],"names":["_ref","optionsList","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","_jsx","className","concat","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","onClickVisible","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","_invFormStatus$errors4","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_errMsgs$signature_ur","_errMsgs$capacity","investorId","investorDetails","investorFormId","onChangeSignatory","mandatory","itemIndex","dateNow","moment","format","base64String","uploadedDocs","setUploadedDocs","_useState3","file","loader","_useState4","signCreate","setSignCreate","_useState5","_useState6","isSignCreateOrUp","setIsSignCreateOrUp","invFormStatus","useSelector","store","errMsgs","full_name","errors","signature_url","date_of_signature","capacity","onChangeSignRadio","convrtToNum","parseInt","onInputChange","_ref3","name","level","onChangeFn","_ref4","updateSignUrl","_ref5","onSaveSignature","_ref7","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref6","sign","_ref6$fileName","fileName","formData","_yield$uploadSignatur","success","url","wrap","_context","prev","next","FormData","append","uploadSignatureApiCall","sent","prevDocs","SUCCESS","FAILED","stop","_x","apply","arguments","onAddSignature","_ref8","cleanBase64","replace","LOADING","onAddFiles","files","uploaded","_toConsumableArray","some","findIndex","f","reader","FileReader","onload","result","readAsDataURL","convertBase64Upload","push","onClickRemove","newSetFiles","filter","src","alt","style","objectFit","maxWidth","_Fragment","CustomRadioInput","id","content","val","checked","ImageUploader","uniqId","multiple","accept","Signature","length","renderErrorTxt","CustomTextField","placeholder","inputType","type","asterisk","formErrors","maxDate","split","INIDIVIDUAL_I","JOINT_INVESTOR_I","SOLE_DIRECTOR_I","DIRECTOR_I","INDIVIDUAL_TRUSTEE_I","ATTORNEY_I","_secI$documents","onFormChange","removeDocFromArr","toast","useToast","secI","SUPPORTING_DOCUMENTS","selectedDocType","setSelectedDocType","investor_id","onUploadFile","_yield$uploadFiles","data","extradata","_args","undefined","uploadFiles","docUrl","resData","updateDocArray","removeDocFromArray","onClickDel","_callee2","docData","_yield$deleteFile","_context2","delLoader","deleteFile","error","_x2","title","_secI$individual_deta","individual_details","eachItem","arrIndex","tempId","index","SIGN_MANDATORY_I","InvestorSignatory","renderInvestorSignatory","ONE_SIGNATORY","signing_authority","TWO_SIGNATORY","ALL_SIGNATORY","CustomDropdown","_objectSpread","DocPlaceholder","addNewDocToArray","documents","formatAndPrintDocs"],"sourceRoot":""}