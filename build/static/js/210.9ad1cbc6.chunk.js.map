{"version":3,"file":"static/js/210.9ad1cbc6.chunk.js","mappings":"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","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Layout/CustomTextField.js","components/Forms/Layout/DocPlaceholder.js","components/Forms/Sections/SectionD/SubSections/PrincipalPlaceOfBusiness.js","components/Forms/Sections/SectionD/SubSections/AustralianCompanyDetails.js","components/Forms/Sections/SectionD/SubSections/RegulatoryDetails.js","components/Forms/Sections/SectionD/SubSections/CompanyType.js","components/Forms/Sections/SectionD/Directors.js","components/Forms/Sections/SectionD/MoreThanFourDirectors.js","components/Forms/Sections/SectionD/SubSections/DirectorsSection.js","components/Forms/Sections/SectionD/SubSections/IdentificationDocuments.js","components/Forms/Sections/SectionD/SectionDContent.js","utils/documentUploads/index.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst DropdownList = ({onSelectOption, dropdownOptions=[], addClass, renderLabel }) => {\r\n\r\n\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`}>\r\n        {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  } \r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList onSelectOption={onSelectOption} dropdownOptions={dropdownOptions} addClass={addClass} renderLabel={renderLabel}/>}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isArray } from '../../../utils/validations/helperFunc';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CustomTextField = ({ placeholder, id, label, type, asterisk, belowText, inputType, name, value, onChangeFn, formErrors={}, maxDate }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  const onChangeHandle = (e) =>{\r\n    const {name, value} = e.target;\r\n    onChangeFn({name, value}) \r\n  }\r\n\r\n  const renderErrors = () => {\r\n\r\n    \r\n\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        return renderErrorTxt(formErrors[name])\r\n      } else{\r\n        return renderErrorTxt([formErrors[name]])\r\n      }\r\n    }\r\n    return null\r\n\r\n    // return formErrors[name]? renderErrorTxt(formErrors[name]) : null\r\n  }\r\n\r\n  const isIncorrect = () => {\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        // return renderErrorTxt(formErrors[name])\r\n        return !!formErrors[name][0]?.length\r\n      } else{\r\n        return !!formErrors[name]?.length\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className={`form-input ${type? type : \"\"} ${isIncorrect()? 'incorrect':''}`}>\r\n        <label htmlFor={id}>{label} {asterisk !==\"\"? <span>*</span>: null}</label>\r\n        <input className=\"form-input-common\" type={inputType? inputType : \"text\"} placeholder={placeholder} id={id} required={asterisk !==\"\"? true: false} name={name} value={value || \"\"} onChange={onChangeHandle} disabled={!!invFormStatus.loader} max={maxDate || null}/>\r\n        \r\n        {belowText? <div className=\"input__desc\">\r\n          <p className=\"input__desc--p\">{belowText}</p>\r\n        </div>: null}\r\n\r\n        {renderErrors()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderOnConfirm } from '../../stylesheet/Loader';\r\nimport { LOADING , SUCCESS, FAILED } from '../../../constants';\r\n\r\nconst DocPlaceholder = ({uploadedDocs=[], onAddFiles, onClickRemove, onClickDel, multiple=true, accept=\"application/pdf, image/*\", uniqId}) => {\r\n\r\n  const allowedTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n\r\n  const manipulateUI = (e) => {\r\n    const chosenFiles = Array.prototype.slice.call(e.target.files) || []\r\n    const validFiles = chosenFiles.filter((file)=> allowedTypes.includes(file.type))\r\n\r\n    onAddFiles(validFiles);\r\n  }\r\n\r\n  const removeFileFromFileList = (fileName) => {\r\n    const dt = new DataTransfer();\r\n    const input = document.getElementById(`file-doc-in-${uniqId}`);\r\n    const { files } = input;\r\n    \r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (fileName !== file.name){\r\n        dt.items.add(file); // add the file back to input.\r\n      }\r\n    }\r\n    \r\n    input.files = dt.files // Assign the updates list\r\n  }\r\n\r\n  const onHandleClear = (fileName)=>{\r\n    onClickRemove(fileName);\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const onHandleDelete = ({fileName, fileData}) => {\r\n    onClickDel({fileName, docData: fileData})\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const renderDel = ({fileName, fileData}) => {\r\n    if(fileData?.delLoader) {\r\n      return <span style={{marginLeft:10}}> <LoaderOnConfirm /> </span>\r\n    }\r\n    return (<span\r\n              style={{marginLeft:10}}\r\n              onClick={()=>onHandleDelete({fileName, fileData})}\r\n            >\r\n              <FontAwesomeIcon className='docPreviewDelIcon' icon={faTrashAlt}/>\r\n            </span>)\r\n  }\r\n\r\n  const renderStatus = (status, fileName, fileData) => {\r\n    if(status === SUCCESS) {  //return success icon\r\n      return(\r\n        <>\r\n          <FontAwesomeIcon icon={faCheck}/>\r\n          {renderDel({fileName, fileData})}\r\n        </>\r\n      ) \r\n    }else if(status === FAILED) {\r\n      return <button className=\"link-button\" onClick={()=> onHandleClear(fileName)}>upload failed <FontAwesomeIcon icon={faTimes}/></button> //status is failed - user shall clear file from list & retry\r\n    }else if(status === LOADING){\r\n      return <LoaderOnConfirm /> //return loader icon\r\n    }\r\n  }\r\n\r\n  const renderFileLabel = (fileData) => {\r\n    \r\n    if(fileData?.type?.label && fileData?.extraDetails?.label){\r\n      return `(${fileData.type.label} - ${fileData?.extraDetails?.label})`\r\n    } else if(fileData?.type?.label){\r\n      return `(${fileData.type.label})`\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const mapUploadedDocs = () => {\r\n    return (\r\n      <div className=\"docPlaceholder__uploaded\">\r\n        {uploadedDocs.map((each)=> {\r\n          return (\r\n            <div className=\"docPlaceholder__uploaded--responses\" key={each.file.name}>\r\n              <a className=\"link-button\" target=\"_blank\" href={each?.docUrl? each?.docUrl: null} rel=\"noreferrer\">{each.file.name}</a><span className='uploaded-file-label'>{renderFileLabel(each)}</span>\r\n              <span style={{marginLeft:5}}>{renderStatus(each.loader, each.file.name, each)}</span>\r\n            </div>\r\n          )\r\n        })} \r\n      </div>\r\n    )\r\n  }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"docPlaceholder\">\r\n        <div className=\"docPlaceholder__container\">\r\n          <input type=\"file\" id={`file-doc-in-${uniqId}`} className={`docPlaceholder__container--input ${false? 'doc-opacity': ''}`} onChange={manipulateUI} multiple={multiple} accept={accept}/>\r\n          <label htmlFor={`file-doc-in-${uniqId}`} id=\"uploadDocLabel\" className=\"docPlaceholder__container--p\">Drag your documents here to start uploading</label>\r\n        </div>\r\n      </div>\r\n      {mapUploadedDocs()}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DocPlaceholder;","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { PRINICIPAL_OFFICE_ADDRESS } from '../../../../../constants'; \r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst PrincipalPlaceOfBusiness = ({ getValueAddressType, onChangeAddress, ausStateOptions, countryOptions }) => {\r\n    \r\n    const arr = ['unit_no', 'street_name', 'street_no', 'suburb', 'state', 'postcode', 'country'];\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgsPrinOffice = {\r\n        type : invFormStatus.errors?.type? invFormStatus.errors?.type[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        country : invFormStatus.errors?.country? invFormStatus.errors?.country[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            for(let i = 0; i < arr.length; i++){\r\n                onChangeAddress({ name: arr[i], value: '', addressType: PRINICIPAL_OFFICE_ADDRESS })\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const countryValue = () => {\r\n        const findCountry = getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"country\");\r\n        \r\n        const value = countryOptions.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const ausStateValue = () => {\r\n        const findState = getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"state\");\r\n        \r\n        const value = ausStateOptions().find((eachState) => {\r\n            if(findState){\r\n              return  eachState.value?.toLowerCase() === findState.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeAddress({ name:'country', value: value.label, addressType: PRINICIPAL_OFFICE_ADDRESS })\r\n    }\r\n\r\n    const onChangeAusStates = (value) => {\r\n        onChangeAddress({ name:'state', value: value.value, addressType: PRINICIPAL_OFFICE_ADDRESS })\r\n    }\r\n    \r\n    return (\r\n    <div>\r\n        <h6 className=\"u-padding-10y\">Full Postal Address</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Unit No./Level\"\r\n                    id=\"sec-d-business-unit-no\"\r\n                    label=\"Unit No./Level\"\r\n                    asterisk=\"\"\r\n                    name=\"unit_no\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"unit_no\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Number\"\r\n                    id=\"sec-d-business-street-number\"\r\n                    label=\"Street Number\"\r\n                    name=\"street_no\"\r\n                    asterisk=\"\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"street_no\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Name\"\r\n                    id=\"sec-d-business-street-name\"\r\n                    label=\"Street Name\"\r\n                    name=\"street_name\"\r\n                    asterisk=\"\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"street_name\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                />\r\n                \r\n                <CustomTextField\r\n                    placeholder=\"Suburb/Town\"\r\n                    id=\"sec-d-business-suburb\"\r\n                    label=\"Suburb/Town\"\r\n                    type=\"form-input\"\r\n                    asterisk=\"\"\r\n                    name=\"suburb\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"suburb\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                /> \r\n\r\n                <div className=\"form-input country__dropdown\">\r\n                    <label>State</label>\r\n                    <Select\r\n                        className={errMsgsPrinOffice?.state?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"state\"\r\n                        autoFocus={false}\r\n                        placeholder=\"Select a State\"\r\n                        options={ausStateOptions()}\r\n                        value={ausStateValue()}\r\n                        onChange={onChangeAusStates}                    />\r\n                    {errMsgsPrinOffice?.state?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(errMsgsPrinOffice?.state)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Postcode\"\r\n                    id=\"sec-d-business-postcode\"\r\n                    label=\"Postcode\"\r\n                    type=\"form-input\"\r\n                    asterisk=\"\"\r\n                    name=\"postcode\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"postcode\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                /> \r\n\r\n                <div className=\"country__dropdown u-margin-bottom\">\r\n                    <label>Country</label>\r\n                    <Select\r\n                        className={errMsgsPrinOffice?.country?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"country\"\r\n                        autoFocus={false}\r\n                        options={countryOptions}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {errMsgsPrinOffice?.country?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(errMsgsPrinOffice?.country)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrincipalPlaceOfBusiness;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport {\r\n    PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS,\r\n    PRINCIPAL_PLACE_NOT_SAME_REGISTERED_ADDRESS,\r\n    REGISTERED_OFFICE_ADDRESS,\r\n    AUSTRALIAN_STATES,\r\n} from '../../../../../constants';\r\nimport PrincipalPlaceOfBusiness from './PrincipalPlaceOfBusiness';\r\nimport CustomCheckbox from '../../../Layout/CustomCheckbox';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nconst AustralianCompanyDetails = ({ onFormChange }) => {\r\n\r\n    //secD reducer store\r\n    const secD = useSelector((store) => store.secD);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const countryOptions = [{id:1, value:'Australia', label:'Australia'}]\r\n\r\n    const ausStateOptions = () => {\r\n        const formattedOptions = AUSTRALIAN_STATES.map((each, index)=>{\r\n            return { id: index+1, label: each, value: each}\r\n        })\r\n        return formattedOptions\r\n    }\r\n\r\n    const errMsgsregOffice = {\r\n        type : invFormStatus.errors?.type? invFormStatus.errors?.type[REGISTERED_OFFICE_ADDRESS]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[REGISTERED_OFFICE_ADDRESS]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[REGISTERED_OFFICE_ADDRESS]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[REGISTERED_OFFICE_ADDRESS]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[REGISTERED_OFFICE_ADDRESS]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[REGISTERED_OFFICE_ADDRESS]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[REGISTERED_OFFICE_ADDRESS]: [],\r\n        country : invFormStatus.errors?.country? invFormStatus.errors?.country[REGISTERED_OFFICE_ADDRESS]: [],\r\n      }\r\n\r\n\r\n    const countryValue = () => {\r\n        const findCountry = getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"country\");\r\n        \r\n        const value = countryOptions.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const ausStateValue = () => {\r\n        const findState = getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"state\");\r\n        \r\n        const value = ausStateOptions().find((eachState) => {\r\n            if(findState){\r\n              return  eachState.value?.toLowerCase() === findState.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeAddress({ name:'country', value: value.label, addressType: REGISTERED_OFFICE_ADDRESS })\r\n    }\r\n\r\n    const onChangeAusStates = (value) => {\r\n        onChangeAddress({ name:'state', value: value.value, addressType: REGISTERED_OFFICE_ADDRESS })\r\n    }\r\n\r\n    //For text input fields\r\n    const onChangeHandler = ({ name, value }) => {\r\n        onFormChange({ name, value });\r\n    }\r\n\r\n    const onChangeACN = ({name, value}) => {\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeHandler({name, value:trimmedVal})\r\n    }\r\n\r\n    //FOR SOLO CHECKBOX\r\n    const handleChangeCheckbox = ({ name }) => { \r\n        // const convrtToNum = value && parseInt(value);\r\n        if(secD?.is_address_of_registered_place_same_as_primary !== PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS){\r\n            onFormChange({ name, value: PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS });\r\n            return;\r\n        }\r\n        onFormChange({ name, value: PRINCIPAL_PLACE_NOT_SAME_REGISTERED_ADDRESS });\r\n    }\r\n\r\n    const onChangeAddress = ({ name, value, addressType }) => {\r\n        onFormChange({ name, value, level: \"address_details\", type: addressType });\r\n    }\r\n\r\n    const getValueAddressType = (addressType, keyName) => { \r\n        // const address = secD?.address_details.find((each) => addressType === each?.address_type) || {};\r\n        const address = secD?.address_details.find((each) => addressType === each?.type) || {};\r\n        const val = address[keyName] || \"\";\r\n        return val;\r\n    }\r\n    \r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">D.1 Australian Company Details</h4>\r\n        {/* placeholder, id, label, type, asterisk, belowText, inputType */}\r\n        <div className=\"section__container--box\">\r\n            <div>\r\n                <CustomTextField\r\n                    placeholder=\"Full name as registered by ASIC\"\r\n                    id=\"sec-d-fullname-asic\"\r\n                    label=\"Full name as registered by ASIC\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"full_name\"\r\n                    value={secD?.full_name}\r\n                    onChangeFn={onChangeHandler}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"sub__form\">\r\n                <CustomTextField \r\n                    placeholder=\"ACN\"\r\n                    id=\"sec-d-acn\"\r\n                    label=\"ACN\"\r\n                    asterisk=\"*\"\r\n                    name=\"acn\"\r\n                    value={secD?.acn}\r\n                    onChangeFn={onChangeACN}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n                <CustomTextField \r\n                    placeholder=\"ABN\"\r\n                    id=\"sec-d-abn\"\r\n                    label=\"ABN\"\r\n                    asterisk=\"\"\r\n                    name=\"abn\"\r\n                    value={secD?.abn}\r\n                    onChangeFn={onChangeHandler}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n            </div>\r\n\r\n            {/* Full address of registered office (PO Box is not acceptable) */}\r\n            <div>\r\n                <h6 className=\"u-padding-10y\">Full address of registered office (PO Box is not acceptable)</h6>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-d-reg-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"unit_no\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-d-reg-street-number\"\r\n                        label=\"Street Number\"\r\n                        name=\"street_no\"\r\n                        asterisk=\"\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"street_no\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Street Name\"\r\n                        id=\"sec-d-reg-street-name\"\r\n                        label=\"Street Name\"\r\n                        asterisk=\"*\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"street_name\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    />\r\n            \r\n                    \r\n                    <CustomTextField\r\n                        placeholder=\"Suburb/Town\"\r\n                        id=\"sec-d-reg-suburb\"\r\n                        label=\"Suburb/Town\"\r\n                        type=\"form-input\"\r\n                        name=\"suburb\"\r\n                        asterisk=\"*\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"suburb\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    /> \r\n\r\n                    <div className=\"form-input country__dropdown\">\r\n                        <label>State <span>*</span></label>\r\n                        <Select\r\n                            className={errMsgsregOffice?.state?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"state\"\r\n                            autoFocus={false}\r\n                            placeholder=\"Select a State\"\r\n                            options={ausStateOptions()}\r\n                            value={ausStateValue()}\r\n                            onChange={onChangeAusStates}                    />\r\n                        {errMsgsregOffice?.state?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsregOffice?.state)}\r\n                        </div>: null}\r\n                    </div>\r\n                    \r\n                    <CustomTextField\r\n                        placeholder=\"Postcode\"\r\n                        id=\"sec-d-reg-postcode\"\r\n                        label=\"Postcode\"\r\n                        type=\"form-input\"\r\n                        name=\"postcode\"\r\n                        asterisk=\"*\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"postcode\")}\r\n                        onChangeFn={({  name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS})}\r\n                        formErrors={errMsgsregOffice}\r\n                    /> \r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country <span>*</span></label>\r\n                        <Select\r\n                            className={errMsgsregOffice?.country?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={countryOptions}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue()}\r\n                            onChange={onChangeSelectHandler}\r\n                        />\r\n\r\n                        {errMsgsregOffice?.country?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsregOffice?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Postal address is the same as the registered office */}\r\n                <div className=\"u-margin-bottom-m\">\r\n                    <CustomCheckbox \r\n                        name=\"is_address_of_registered_place_same_as_primary\"\r\n                        val={PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS}\r\n                        id=\"principal-place-same-registered-office\"\r\n                        styleType=\"dark\"\r\n                        content=\"Postal address is the same as the registered office\"\r\n                        onChangeFn={handleChangeCheckbox}\r\n                        checked={secD?.is_address_of_registered_place_same_as_primary === PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS}\r\n                    />\r\n                    {invFormStatus.errors?.is_address_of_registered_place_same_as_primary? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_address_of_registered_place_same_as_primary)}\r\n                    </div>: null} \r\n                </div>\r\n                \r\n                {/* Full Postal Address */}\r\n                {secD?.is_address_of_registered_place_same_as_primary !== PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS ?\r\n                <PrincipalPlaceOfBusiness getValueAddressType={getValueAddressType} onChangeAddress={onChangeAddress} ausStateOptions={ausStateOptions} countryOptions={countryOptions}/>: null}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AustralianCompanyDetails;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AUSTRALIAN_LISTED_COMPANY_D, MAJOR_OWNED_SUBSIDIARY_D, NOT_A_REGULATED_COMPANY_D, REGULATED_COMPANY_D } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst RegulatoryDetails = ({ onFormChange }) => {\r\n\r\n    //secD reducer store\r\n    const secD = useSelector((store) => store.secD);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeFn = ({ name, value }) =>{\r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">D.2 Regulatory / Listing Details</h4>\r\n      \r\n      <div className=\"section__container--box\">\r\n          <div>\r\n                <h6>Is the company regulated or listed?<span>*</span></h6>\r\n\r\n                <CustomRadioInput\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"company-not-regulated\"\r\n                    content=\"Company is not regulated or listed\"\r\n                    val={NOT_A_REGULATED_COMPANY_D} \r\n                    checked={secD?.company_regulation_detail === NOT_A_REGULATED_COMPANY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n\r\n                <CustomRadioInput\r\n                    type=\"row-input\"\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"company-regulated\"\r\n                    content=\"Regulated company - A company whose activities are subject to the oversight of a Commonwealth, State or Territory statutory regulator. In this context “Regulated” means subject to supervision beyond that provided by ASIC as a company registration body. For example, Australian Financial Services Licensee (AFSL), Australian Credit Licensee (ACL) or Registrable Superannuation Entity (RSE) Licensee\"\r\n                    val={REGULATED_COMPANY_D}\r\n                    checked={secD?.company_regulation_detail === REGULATED_COMPANY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n\r\n                <CustomRadioInput\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"australian-listed\"\r\n                    content=\"Australian listed company\"\r\n                    val={AUSTRALIAN_LISTED_COMPANY_D}\r\n                    checked={secD?.company_regulation_detail === AUSTRALIAN_LISTED_COMPANY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n\r\n                <CustomRadioInput\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"majority-owned-subsidiary\"\r\n                    content=\"Majority-owned subsidiary of an Australian listed company\"\r\n                    val={MAJOR_OWNED_SUBSIDIARY_D}\r\n                    checked={secD?.company_regulation_detail === MAJOR_OWNED_SUBSIDIARY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                {invFormStatus.errors?.company_regulation_detail? <div className=\"input__desc\">\r\n                    {renderErrorTxt(invFormStatus.errors?.company_regulation_detail)}\r\n                </div>: null} \r\n          </div>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RegulatoryDetails;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { PROPRIETARY_COMPANY_TYPE, PUBLIC_COMPANY_TYPE } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CompanyType = ({ onFormChange }) => {\r\n\r\n  const secD = useSelector((store) => store.secD);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const onChangeFn = ({ name, value }) => {\r\n    const convrtToNum = value && parseInt(value);\r\n    onFormChange({ name, value: convrtToNum });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">D.3 Company Type</h4>\r\n\r\n      <div className=\"section__container--box\">\r\n        <div>\r\n          <h6>Is the company type public or proprietary?<span>*</span></h6>\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-d-public-company\"\r\n            content=\"Public (companies whose name does NOT include the words “Pty Ltd” or “Proprietary Ltd”; generally listed companies)\"\r\n            val={PUBLIC_COMPANY_TYPE}\r\n            checked={secD?.company_type === PUBLIC_COMPANY_TYPE}\r\n            onChangeFn={onChangeFn}\r\n          />\r\n\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-d-proprietary\"\r\n            content=\"Proprietary (companies whose name ends with “Proprietary Ltd” or “Pty Ltd”; also known as private companies)\"\r\n            val={PROPRIETARY_COMPANY_TYPE}\r\n            checked={secD?.company_type === PROPRIETARY_COMPANY_TYPE}\r\n            onChangeFn={onChangeFn}\r\n          />\r\n          {invFormStatus.errors?.company_type? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.company_type)}\r\n          </div>: null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyType;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst Directors = ({ directorId, directorDetails, investorFormId, onChangeDirector, itemIndex }) => {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgs = {\r\n        name : invFormStatus.errors?.name? invFormStatus.errors?.name[itemIndex]: [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[itemIndex]: [],\r\n    }\r\n\r\n    const onChangeIn = ({ name, value }) => {\r\n        onChangeDirector({\r\n            name,\r\n            value,\r\n            directorId\r\n        });\r\n    }\r\n    \r\n    return (\r\n    <div key={directorId}>\r\n        <h6 className=\"u-padding-10y\">{`Director ${itemIndex + 1}`}</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-d-director${directorId}-given-name`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"name\"\r\n                    value={directorDetails?.name || \"\"}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={errMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Surname\"\r\n                    id={`sec-d-director${directorId}-surname`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    value={directorDetails?.surname || \"\"}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={errMsgs}\r\n                />    \r\n            </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Directors","import React, { useState } from 'react';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, MORE_THAN_FOUR_DIRECTORS_SEC_D_E } from '../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst MoreThanFourDirectors = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const docTypeValue = {label:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][1], value:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][0]}\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) =>{ \r\n        if(file){ //files && files.length -- to make it work for multiple files\r\n            //call api to upload files\r\n            const fileName = file.name;                 \r\n            const formData = new FormData();\r\n\r\n            formData.append('file', file); \r\n            formData.append('type', type.value);\r\n            formData.append('section', 'd');\r\n            formData.append('investor_form_id', investorFormId);\r\n\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...docTypeValue},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <DocPlaceholder\r\n            onAddFiles={onAddFiles}\r\n            uploadedDocs={uploadedDocs}\r\n            onClickRemove={onClickRemove}\r\n            uniqId=\"moredirectors\"\r\n            onClickDel={onClickDel}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoreThanFourDirectors","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { directorDetails } from '../../../../../reducers/Investor-Application-Form/secDReducer';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport Directors from '../Directors';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport MoreThanFourDirectors from '../MoreThanFourDirectors';\r\nimport { NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E } from '../../../../../constants';\r\n\r\nconst DirectorsSection = ({ onFormChange, investorFormId }) => {\r\n\r\n  const secD = useSelector((store) => store.secD);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const addDirectorDetails = (numOfDirectors) => {\r\n\r\n    let upd = [];\r\n    const prevDirLen = secD?.directors_details?.length || 0;\r\n    \r\n    if(prevDirLen > numOfDirectors){\r\n      upd = secD?.directors_details?.filter((each, index) => (index + 1) <= numOfDirectors);\r\n\r\n      onFormChange({\r\n        name:\"directors_details\",\r\n        value:[...upd]\r\n      });\r\n      return\r\n    }\r\n    else if(prevDirLen === numOfDirectors){\r\n      return\r\n    }\r\n    else{\r\n      const newLen = numOfDirectors - prevDirLen;\r\n      upd = [...secD?.directors_details];\r\n\r\n      const newArr = Array.from({ length: newLen }, () => ({\r\n        ...directorDetails\r\n      }))\r\n\r\n      onFormChange({\r\n        name:\"directors_details\",\r\n        value:[...upd, ...newArr]\r\n      })\r\n      return\r\n    }\r\n  }\r\n\r\n  const onChangeDirector = ({ name, value, directorId }) => {\r\n    \r\n    const updIndex = directorId - 1;\r\n    const upd = [...secD?.directors_details];\r\n    upd[updIndex][name] = value;\r\n\r\n    onFormChange({\r\n      name: \"directors_details\",\r\n      value: [...upd]\r\n    });\r\n    return\r\n  }\r\n\r\n  const renderDirectors = () => { \r\n    return secD?.directors_details?.map((item, index)=> {\r\n        const tempIndex = index + 1;\r\n        const uniqId = tempIndex //item?.id || tempIndex\r\n        if((index < secD?.number_of_directors) && (secD?.number_of_directors !== NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E)){ //phase1 fix. remove this condition in phase-2\r\n          return <Directors \r\n                      key={uniqId}\r\n                      directorId={uniqId}\r\n                      directorDetails={item}\r\n                      onChangeDirector={onChangeDirector}\r\n                      itemIndex={index}\r\n                    /> \r\n        }\r\n        return null\r\n    })\r\n  }\r\n\r\n  const onChangeRadioFn = ({ name, value }) => {\r\n    const convrtToNum = parseInt(value);\r\n    onFormChange({\r\n      name,\r\n      value: convrtToNum\r\n    })\r\n\r\n    if(convrtToNum > 0){\r\n      //update number if directors\r\n      addDirectorDetails(convrtToNum);\r\n    }\r\n    else if(convrtToNum === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E){\r\n      addDirectorDetails(0);\r\n    }\r\n\r\n  }\r\n    \r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">D.4 Directors (Proprietary Companies Only)</h4>\r\n\r\n      <div className=\"section__container--box\">\r\n          <h6>How many directors are there?<span>*</span></h6>\r\n          <div className=\"u-margin-bottom row-space-between\">\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-1\"\r\n                content=\"1\"\r\n                val=\"1\"\r\n                checked={secD?.number_of_directors === 1}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-2\"\r\n                content=\"2\"\r\n                val=\"2\"\r\n                checked={secD?.number_of_directors === 2}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-3\"\r\n                content=\"3\"\r\n                val=\"3\"\r\n                checked={secD?.number_of_directors === 3}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-4\"\r\n                content=\"4\"\r\n                val=\"4\"\r\n                checked={secD?.number_of_directors === 4}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-more\"\r\n                content=\"more than 4\"\r\n                val={`${NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}`}\r\n                checked={secD?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n          </div>\r\n          <React.Fragment>\r\n          {invFormStatus.errors?.number_of_directors? <div className=\"input__desc\">\r\n              {renderErrorTxt(invFormStatus.errors?.number_of_directors)}\r\n            </div>: null}\r\n\r\n            {secD?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E?\r\n            <>\r\n              <h6 className=\"u-padding-y\">If more than four directors, please provide full names of all the directors on a separate sheet and upload</h6>\r\n              <MoreThanFourDirectors investorFormId={investorFormId} />\r\n            </>\r\n            : null}\r\n          </React.Fragment>\r\n          \r\n          {renderDirectors()}\r\n\r\n          {/* {Array.from({ length: numOfDirectors }, (_, index) => <Directors directorId ={index} />)} */}\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default DirectorsSection;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DocPlaceholder from '../../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, IDENTIFICATION_DOCUMENTS_SEC_D, ASIC_EXTRACT_DOC, SEC_D_DOC_EXTRA_LABEL_MAIN } from '../../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport CustomDropdown from '../../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../../utils/documentUploads';\r\nimport { useToast } from '../../../../CustomToast';\r\n\r\nconst IdentificationDocuments = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const doNotShowExtraLabel = [ASIC_EXTRACT_DOC[0][0]]\r\n    const secD = useSelector((store) => store.secD);\r\n    const [selectedDocType, setSelectedDocType] = useState({label:\"Select type of document\", value:\"\"})\r\n    const [selectedDirectorNum, setSelectedDirectorNum] = useState({label:`${SEC_D_DOC_EXTRA_LABEL_MAIN} - 1`, value:1})\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async (file, type={label:'', value:''}, extraDetails={label:'', value:''}) => {\r\n        \r\n        if(file){ \r\n            const fileName = file.name;                  \r\n            const metadata = JSON.stringify([{\"owner\":`${SEC_D_DOC_EXTRA_LABEL_MAIN} ${extraDetails.value}`}])\r\n            \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            if(!doNotShowExtraLabel.includes(type.value)){\r\n                formData.append(\"metadata\", metadata)\r\n            }\r\n            formData.append('section', 'd');\r\n            formData.append('investor_form_id', investorFormId);\r\n            \r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            doNotShowExtraLabel,\r\n            selectedDocType:{...selectedDocType},\r\n            selectedEntityNum:{...selectedDirectorNum}\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const updateSelectedOption = (option) => {\r\n        //update selected document type to the state\r\n        setSelectedDocType({...option})\r\n    }\r\n\r\n    const updateSelectedDirectorNum = (option) => {\r\n        setSelectedDirectorNum({...option})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n    const inestorOptions = () => {\r\n        const tempOptionsArr = [];\r\n        const tempNoOfDirectors = secD?.number_of_directors === -1? 4 : secD?.number_of_directors || 1\r\n        for (let i = 1; i <= tempNoOfDirectors; i++) {\r\n            tempOptionsArr.push([i, `${SEC_D_DOC_EXTRA_LABEL_MAIN} - ${i}`])\r\n        }\r\n        return tempOptionsArr\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n    <h4 className=\"section__container--subtitle\">D.5 Identification Documents</h4>\r\n\r\n    <div className=\"section__container--box\">\r\n        <h6>Please provide a copy of the following Identification document:</h6>\r\n        <ul>\r\n            <li>Full ASIC company extract</li>\r\n        </ul>\r\n\r\n        <h6>For each Beneficial Owner, provide ONE of the following documents</h6>\r\n        <ul>\r\n            <li>Australian State / Territory driver's licence containing a photograph of the person</li>\r\n            <li>Australian passport (a passport that has expired within the preceding 2 years is acceptable)</li>\r\n            <li>Card issued under a State or Territory for the purpose of proving a person's age containing a photograph of the person</li>\r\n            <li>Foreign passport or similar travel document containing a photograph and the signature of the person*</li>\r\n            <li>Foreign driver's licence that contains a photograph of the person in whose name the document is issued*</li>\r\n            <li>* Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator</li>\r\n            <li>If you are unable to provide one of the above documents, please contact us at <a href=\"mailto:investors@silcgroup.com\">investors@silcgroup.com</a></li>\r\n        </ul>\r\n\r\n        <h6 className=\"u-padding-y\">Please attach documents</h6>\r\n        <div className=\"sub__form\" style={{gap:16}}>\r\n            <div style={{minWidth: 350}}>\r\n                <CustomDropdown \r\n                    dropdownOptions={inestorOptions()}\r\n                    selectedOption={selectedDirectorNum}\r\n                    updateSelectedOption={updateSelectedDirectorNum}\r\n                />\r\n            </div>\r\n            <div style={{minWidth: 375}}>\r\n                <CustomDropdown\r\n                    addClass='control-dropdown-height'\r\n                    dropdownOptions={IDENTIFICATION_DOCUMENTS_SEC_D}\r\n                    selectedOption={selectedDocType}\r\n                    updateSelectedOption={updateSelectedOption}\r\n                    extraLabel={`(${SEC_D_DOC_EXTRA_LABEL_MAIN} - ${selectedDirectorNum?.value})`}\r\n                    doNotShowExtraLabelSpecial={doNotShowExtraLabel}\r\n                />\r\n            </div>\r\n        </div>\r\n        {selectedDocType?.value ?\r\n            <div className='u-padding-y'>\r\n                <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"section-d\"/>\r\n            </div>: null\r\n        }\r\n        <div className=\"note__box\">\r\n            <p><span>Note:</span><br /> For definitions of Politically Exposed Person, Controlling Person and Beneficial Owner <a href=\"https://www.silcgroup.com/definitions/\">https://www.silcgroup.com/definitions/</a></p>\r\n        </div>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default IdentificationDocuments;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AustralianCompanyDetails from './SubSections/AustralianCompanyDetails';\r\nimport RegulatoryDetails from './SubSections/RegulatoryDetails';\r\nimport CompanyType from './SubSections/CompanyType';\r\nimport DirectorsSection from './SubSections/DirectorsSection';\r\nimport IdentificationDocuments from './SubSections/IdentificationDocuments';\r\nimport {formatAndPrintDocs} from '../../../../utils/validations/helperFunc';\r\n\r\nconst SectionDContent = ({ onFormChange, investorFormId, removeDocFromArr }) => {\r\n\r\n  const secD = useSelector((store) => store.secD);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n        <h2 className=\"section__heading\">Section D: Australian Company</h2>\r\n        <ul>\r\n            <li>Section D to be completed by Australian companies and Australian company trustee only.</li>\r\n        </ul>\r\n\r\n        <AustralianCompanyDetails onFormChange={onFormChange} />\r\n\r\n        <RegulatoryDetails onFormChange={onFormChange} />\r\n\r\n        <CompanyType onFormChange={onFormChange} />\r\n\r\n        <DirectorsSection onFormChange={onFormChange} investorFormId={investorFormId} />\r\n\r\n        <IdentificationDocuments investorFormId={investorFormId}/>\r\n\r\n        {secD?.documents?.length > 0? formatAndPrintDocs(secD?.documents, removeDocFromArr): null} \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionDContent;","import { LOADING } from \"../../constants\";\r\n\r\nexport const addNewDocToArray = ({files, uploadedDocs, setUploadedDocs, onUploadFile, selectedDocType, selectedEntityNum={}, doNotShowExtraLabel=[]}) => {\r\n    const uploaded = [...uploadedDocs];\r\n        \r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f) => f.file.name === file.name) === -1){\r\n                //call upload file --\r\n                onUploadFile(file, {...selectedDocType}, {...selectedEntityNum});\r\n                uploaded.push({ \r\n                    file,\r\n                    loader: LOADING,\r\n                    docUrl: \"\",\r\n                    type: {...selectedDocType},\r\n                    ...(doNotShowExtraLabel?.length ? !doNotShowExtraLabel.includes(selectedDocType.value) && {extraDetails: {...selectedEntityNum}} : false), //add extra details if array exists and value is not from array\r\n                });\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        \r\n        setUploadedDocs(uploaded);\r\n}\r\n\r\nexport const updateDocArray = ({setUploadedDocs, fileName, extradata={}}) => {\r\n    setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n        return prevDocs.map((each)=>{\r\n            if(each.file.name === fileName){ \r\n                return {\r\n                    ...each,\r\n                    ...extradata\r\n                }\r\n            }\r\n            return each\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeDocFromArray = ({fileName, uploadedDocs, setUploadedDocs}) => { \r\n    const allFiles = [...uploadedDocs];\r\n    const newSetFiles = allFiles.filter((each)=>{\r\n        return each.file.name !== fileName;\r\n    });\r\n    setUploadedDocs([...newSetFiles]);\r\n}"],"names":["_ref","optionsList","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","_jsx","className","concat","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","onClickVisible","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","placeholder","id","type","asterisk","belowText","inputType","name","onChangeFn","_ref$formErrors","formErrors","maxDate","invFormStatus","useSelector","store","_formErrors$name$","_formErrors$name","isArray","length","isIncorrect","htmlFor","required","onChange","e","_e$target","target","disabled","loader","max","renderErrorTxt","_ref$uploadedDocs","uploadedDocs","onAddFiles","onClickRemove","onClickDel","_ref$multiple","multiple","_ref$accept","accept","uniqId","allowedTypes","removeFileFromFileList","fileName","dt","DataTransfer","input","document","getElementById","files","i","file","items","add","renderDel","_ref3","fileData","delLoader","style","marginLeft","LoaderOnConfirm","docData","onHandleDelete","faTrashAlt","renderStatus","status","SUCCESS","_Fragment","faCheck","FAILED","onHandleClear","faTimes","LOADING","renderFileLabel","_fileData$type","_fileData$extraDetail","_fileData$type2","_fileData$extraDetail2","extraDetails","React","validFiles","Array","prototype","slice","call","filter","href","docUrl","rel","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","_invFormStatus$errors4","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_errMsgsPrinOffice$st","_errMsgsPrinOffice$st2","_errMsgsPrinOffice$co","_errMsgsPrinOffice$co2","getValueAddressType","onChangeAddress","ausStateOptions","countryOptions","arr","errMsgsPrinOffice","errors","PRINICIPAL_OFFICE_ADDRESS","unit_no","street_no","street_name","suburb","state","postcode","country","useEffect","addressType","CustomTextField","_ref4","_ref5","Select","autoFocus","options","findState","find","eachState","_eachState$value","toLowerCase","ausStateValue","_ref6","findCountry","_country$label","countryValue","_errMsgsregOffice$sta","_errMsgsregOffice$sta2","_errMsgsregOffice$cou","_errMsgsregOffice$cou2","_invFormStatus$errors17","_invFormStatus$errors18","onFormChange","secD","AUSTRALIAN_STATES","index","errMsgsregOffice","REGISTERED_OFFICE_ADDRESS","onChangeHandler","level","keyName","address_details","full_name","acn","trimmedVal","replaceAllWhiteSpaces","abn","_ref7","_ref8","_ref9","_ref10","CustomCheckbox","val","PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS","styleType","content","is_address_of_registered_place_same_as_primary","PRINCIPAL_PLACE_NOT_SAME_REGISTERED_ADDRESS","checked","PrincipalPlaceOfBusiness","convrtToNum","parseInt","CustomRadioInput","NOT_A_REGULATED_COMPANY_D","company_regulation_detail","REGULATED_COMPANY_D","AUSTRALIAN_LISTED_COMPANY_D","MAJOR_OWNED_SUBSIDIARY_D","PUBLIC_COMPANY_TYPE","company_type","PROPRIETARY_COMPANY_TYPE","directorId","directorDetails","onChangeDirector","investorFormId","itemIndex","errMsgs","surname","onChangeIn","toast","useToast","docTypeValue","MORE_THAN_FOUR_DIRECTORS_SEC_D_E","setUploadedDocs","onUploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","_yield$uploadFiles","success","url","data","extradata","_args","arguments","wrap","_context","prev","next","undefined","FormData","append","uploadFiles","sent","resData","updateDocArray","stop","_x","apply","removeDocFromArray","_callee2","_yield$deleteFile","_context2","deleteFile","error","_x2","DocPlaceholder","addNewDocToArray","selectedDocType","_objectSpread","addDirectorDetails","numOfDirectors","_secD$directors_detai","_secD$directors_detai2","upd","prevDirLen","directors_details","_toConsumableArray","newLen","newArr","from","updIndex","onChangeRadioFn","NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E","number_of_directors","MoreThanFourDirectors","_secD$directors_detai3","item","Directors","renderDirectors","doNotShowExtraLabel","ASIC_EXTRACT_DOC","setSelectedDocType","_useState3","SEC_D_DOC_EXTRA_LABEL_MAIN","_useState4","selectedDirectorNum","setSelectedDirectorNum","_useState5","_useState6","metadata","JSON","stringify","gap","minWidth","CustomDropdown","tempOptionsArr","tempNoOfDirectors","push","inestorOptions","IDENTIFICATION_DOCUMENTS_SEC_D","selectedEntityNum","_secD$documents","removeDocFromArr","AustralianCompanyDetails","RegulatoryDetails","CompanyType","DirectorsSection","IdentificationDocuments","documents","formatAndPrintDocs","_ref$selectedEntityNu","uploaded","some","findIndex","f","_ref2$extradata","prevDocs","newSetFiles"],"sourceRoot":""}