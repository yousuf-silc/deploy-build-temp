{"version":3,"file":"static/js/138.2e54a6ea.chunk.js","mappings":"qLAiBA,EAfqB,SAAHA,GAAsE,IAM1DC,EANPC,EAAcF,EAAdE,eAAcC,EAAAH,EAAEI,gBAAAA,OAAe,IAAAD,EAAC,GAAEA,EAAEE,EAAQL,EAARK,SAAUC,EAAWN,EAAXM,YAQnE,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,2BAAAC,OAA6BJ,GAAWK,UAH5BT,EAIFG,EAJkBH,EAAYU,KAAI,SAACC,GAAI,OAF5C,SAAHC,GAAA,IAAKC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAK,OAAMR,EAAAA,EAAAA,KAAA,KAAoBS,QAAS,kBAAId,EAAe,CAACY,MAAAA,EAAOC,MAAAA,GAAO,EAACL,SAAEJ,EAAY,CAACQ,MAAAA,EAAOC,MAAAA,KAAO,GAAAN,OAAlFM,GAAuF,CAEtEE,CAAa,CAACH,MAAMF,EAAK,GAAIG,MAAMH,EAAK,IAAI,MAOnH,ECwBA,EAlCuB,SAAHZ,GAA6H,IAAxHI,EAAeJ,EAAfI,gBAAiBc,EAAclB,EAAdkB,eAAgBC,EAAoBnB,EAApBmB,qBAAoBC,EAAApB,EAAEK,SAAAA,OAAQ,IAAAe,EAAC,GAAEA,EAAAC,EAAArB,EAAEsB,WAAAA,OAAU,IAAAD,EAAC,GAAEA,EAAAE,EAAAvB,EAAEwB,2BAAAA,OAA0B,IAAAD,EAAC,GAAEA,EAEvIE,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAEnBI,EAAiB,WAAH,OAASD,GAAW,SAAAE,GAAS,OAAKA,CAAS,GAAE,EAO3D1B,EAAc,SAAC2B,GACnB,IAAMC,GAAkB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQnB,QAAS,GAEnC,OAAGU,EAA2BW,SAAe,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQlB,OACtCmB,EACO,OAAND,QAAM,IAANA,GAAAA,EAAQnB,OAASQ,EACnB,GAANb,OAAUwB,EAAOnB,MAAK,KAAAL,OAAIa,GAErBY,CAET,EAEA,OACME,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,iBAAgBE,SAAA,EAC3B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,2BAA2BQ,QAASe,EAAerB,SAAA,EAC9DH,EAAAA,EAAAA,KAAA,SAAAG,SAAQJ,EAAYY,MACpBX,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMT,EAAQU,EAAAA,IAAYC,EAAAA,SAE9CX,IAAUtB,EAAAA,EAAAA,KAACkC,EAAY,CAACvC,eAvBZ,SAAHW,GAAwB,IAAnBC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAC9BI,EAAqB,CAACL,MAAAA,EAAOC,MAAAA,IAC7BgB,GACF,EAoBmE3B,gBAAiBA,EAAiBC,SAAUA,EAAUC,YAAaA,MAGxI,C,0ECkBA,IAlDwB,SAAHN,GAA2H,IAArH0C,EAAW1C,EAAX0C,YAAaC,EAAE3C,EAAF2C,GAAI7B,EAAKd,EAALc,MAAO8B,EAAI5C,EAAJ4C,KAAMC,EAAQ7C,EAAR6C,SAAUC,EAAS9C,EAAT8C,UAAWC,EAAS/C,EAAT+C,UAAWC,EAAIhD,EAAJgD,KAAMjC,EAAKf,EAALe,MAAOkC,EAAUjD,EAAViD,WAAUC,EAAAlD,EAAEmD,WAAAA,OAAU,IAAAD,EAAC,CAAC,EAACA,EAAEE,EAAOpD,EAAPoD,QACzHC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAmChE,OACEjB,EAAAA,EAAAA,MAAA,OAAK5B,UAAS,cAAAC,OAAgBmC,GAAa,GAAE,KAAAnC,OAb3B,WAEc,IAAD+C,EAGvBC,EAJR,QAAGN,EAAWH,MACTU,EAAAA,EAAAA,IAAQP,EAAWH,MAEQ,QAApBQ,EAACL,EAAWH,GAAM,UAAE,IAAAQ,IAAnBA,EAAqBG,UAEL,QAAjBF,EAACN,EAAWH,UAAK,IAAAS,IAAhBA,EAAkBE,QAIjC,CAGmDC,GAAe,YAAY,IAAKlD,SAAA,EAC7E0B,EAAAA,EAAAA,MAAA,SAAOyB,QAASlB,EAAGjC,SAAA,CAAEI,EAAM,IAAc,KAAZ+B,GAAgBtC,EAAAA,EAAAA,KAAA,QAAAG,SAAM,MAAU,SAC7DH,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oBAAoBoC,KAAMG,GAAuB,OAAQL,YAAaA,EAAaC,GAAIA,EAAImB,SAAsB,KAAZjB,EAA6BG,KAAMA,EAAMjC,MAAOA,GAAS,GAAIgD,SApClK,SAACC,GACtB,IAAAC,EAAsBD,EAAEE,OAAjBlB,EAAIiB,EAAJjB,KAAMjC,EAAKkD,EAALlD,MACbkC,EAAW,CAACD,KAAAA,EAAMjC,MAAAA,GACpB,EAiCmNoD,WAAYd,EAAce,OAAQC,IAAKjB,GAAW,OAE9PN,GAAWvC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACtCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBE,SAAEoC,MACzB,KA/BTK,EAAWH,IACTU,EAAAA,EAAAA,IAAQP,EAAWH,KACbsB,EAAAA,EAAAA,GAAenB,EAAWH,KAE1BsB,EAAAA,EAAAA,GAAe,CAACnB,EAAWH,KAG/B,OA6BX,C,+FCyDA,IAtGuB,SAAHhD,GAA4H,IAADuE,EAAAvE,EAAtHwE,aAAAA,OAAY,IAAAD,EAAC,GAAEA,EAAEE,EAAUzE,EAAVyE,WAAYC,EAAa1E,EAAb0E,cAAeC,EAAU3E,EAAV2E,WAAUC,EAAA5E,EAAE6E,SAAAA,OAAQ,IAAAD,GAAKA,EAAAE,EAAA9E,EAAE+E,OAAAA,OAAM,IAAAD,EAAC,2BAA0BA,EAAEE,EAAMhF,EAANgF,OAE3HC,EAAe,CAAC,YAAa,aAAc,YAAa,mBASxDC,EAAyB,SAACC,GAK9B,IAJA,IAAMC,EAAK,IAAIC,aACTC,EAAQC,SAASC,eAAe,eAAD/E,OAAgBuE,IAC7CS,EAAUH,EAAVG,MAECC,EAAI,EAAGA,EAAID,EAAM9B,OAAQ+B,IAAK,CACrC,IAAMC,EAAOF,EAAMC,GAEfP,IAAaQ,EAAK3C,MACpBoC,EAAGQ,MAAMC,IAAIF,EAEjB,CAEAL,EAAMG,MAAQL,EAAGK,KACnB,EAYMK,EAAY,SAAHC,GAA8B,IAAzBZ,EAAQY,EAARZ,SAAUa,EAAQD,EAARC,SAC5B,OAAW,OAARA,QAAQ,IAARA,GAAAA,EAAUC,WACJ7D,EAAAA,EAAAA,MAAA,QAAM8D,MAAO,CAACC,WAAW,IAAIzF,SAAA,CAAC,KAACH,EAAAA,EAAAA,KAAC6F,EAAAA,GAAe,IAAG,QAEnD7F,EAAAA,EAAAA,KAAA,QACE2F,MAAO,CAACC,WAAW,IACnBnF,QAAS,kBAXE,SAAHH,GAA8B,IAAzBsE,EAAQtE,EAARsE,SAAUa,EAAQnF,EAARmF,SACjCrB,EAAW,CAACQ,SAAAA,EAAUkB,QAASL,IAC/Bd,EAAuBC,EACzB,CAQyBmB,CAAe,CAACnB,SAAAA,EAAUa,SAAAA,GAAU,EAACtF,UAElDH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAAC7B,UAAU,oBAAoB8B,KAAMiE,EAAAA,OAEjE,EAEMC,EAAe,SAACC,EAAQtB,EAAUa,GACtC,OAAGS,IAAWC,EAAAA,IAEVtE,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAAjG,SAAA,EACEH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMsE,EAAAA,MACtBd,EAAU,CAACX,SAAAA,EAAUa,SAAAA,OAGnBS,IAAWI,EAAAA,IACXzE,EAAAA,EAAAA,MAAA,UAAQ5B,UAAU,cAAcQ,QAAS,kBA/B9B,SAACmE,GACrBT,EAAcS,GACdD,EAAuBC,EACzB,CA4ByD2B,CAAc3B,EAAS,EAACzE,SAAA,CAAC,kBAAcH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMyE,EAAAA,SAC5GN,IAAWO,EAAAA,IACXzG,EAAAA,EAAAA,KAAC6F,EAAAA,GAAe,SADnB,CAGR,EAEMa,EAAkB,SAACjB,GAAc,IAADkB,EAAAC,EAAAC,EAEsBC,EAA1D,OAAW,OAARrB,QAAQ,IAARA,GAAc,QAANkB,EAARlB,EAAUpD,YAAI,IAAAsE,GAAdA,EAAgBpG,OAAiB,OAARkF,QAAQ,IAARA,GAAsB,QAAdmB,EAARnB,EAAUsB,oBAAY,IAAAH,GAAtBA,EAAwBrG,MAC5C,IAANL,OAAWuF,EAASpD,KAAK9B,MAAK,OAAAL,OAAc,OAARuF,QAAQ,IAARA,GAAsB,QAAdqB,EAARrB,EAAUsB,oBAAY,IAAAD,OAAd,EAARA,EAAwBvG,MAAK,KACjD,OAARkF,QAAQ,IAARA,GAAc,QAANoB,EAARpB,EAAUpD,YAAI,IAAAwE,GAAdA,EAAgBtG,MAClB,IAANL,OAAWuF,EAASpD,KAAK9B,MAAK,KAEzB,EACT,EAiBA,OACEsB,EAAAA,EAAAA,MAACmF,EAAAA,SAAc,CAAA7G,SAAA,EACbH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBE,UAC7B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,4BAA2BE,SAAA,EACxCH,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,OAAOD,GAAE,eAAAlC,OAAiBuE,GAAUxE,UAAS,oCAAAC,OAA4D,IAAMsD,SAzF9G,SAACC,GACpB,IACMwD,GADcC,MAAMC,UAAUC,MAAMC,KAAK5D,EAAEE,OAAOuB,QAAU,IACnCoC,QAAO,SAAClC,GAAI,OAAIV,EAAa9C,SAASwD,EAAK/C,KAAK,IAE/E6B,EAAW+C,EACb,EAoF2J3C,SAAUA,EAAUE,OAAQA,KAC/KxE,EAAAA,EAAAA,KAAA,SAAOsD,QAAO,eAAApD,OAAiBuE,GAAUrC,GAAG,iBAAiBnC,UAAU,+BAA8BE,SAAC,sDAlB1GH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BE,SACtC8D,EAAa7D,KAAI,SAACC,GACjB,OACEwB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,sCAAqCE,SAAA,EAClDH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAc0D,OAAO,SAAS4D,KAAU,OAAJlH,QAAI,IAAJA,GAAAA,EAAMmH,OAAY,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAMmH,OAAQ,KAAMC,IAAI,aAAYtH,SAAEE,EAAK+E,KAAK3C,QAASzC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBE,SAAEuG,EAAgBrG,MAC/KL,EAAAA,EAAAA,KAAA,QAAM2F,MAAO,CAACC,WAAW,GAAGzF,SAAE8F,EAAa5F,EAAKwD,OAAQxD,EAAK+E,KAAK3C,KAAMpC,OAFhBA,EAAK+E,KAAK3C,KAKxE,QAgBR,C,gKCvCA,MA9DA,SAAyBhD,GAAwB,IAADiI,EAAAC,EAAAC,EAAAC,EAApBC,EAAIrI,EAAJqI,KAAMpF,EAAUjD,EAAViD,WAExBI,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1DiF,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,MAAcC,SAAS,GAAE,IAuBzD,OArBEC,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHzF,EAAW,CAACD,KAAK,6BAA8BjC,MAAM,KACrDkC,EAAW,CAACD,KAAK,yBAA0BjC,MAAM,IACrD,CACJ,GAAE,KAiBFqB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,wBAAuBE,SAAA,EAClCH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,4BACZC,GAAG,2BACH7B,MAAM,4BACN+B,SAAS,IACTG,KAAK,6BACLjC,OAA6B,QAAtBkH,EAAAI,EAAKO,yBAAiB,IAAAX,OAAA,EAAtBA,EAAwBY,6BAA8B,GAC7D5F,WAAYA,EACZE,WAAYE,EAAcyF,UAG9B1G,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,oBAAmBE,SAAA,EAC9B0B,EAAAA,EAAAA,MAAA,SAAA1B,SAAA,CAAO,YAAQH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UACrBH,EAAAA,EAAAA,KAACwI,EAAAA,GAAM,CACHvI,WAA+B,QAApB0H,EAAA7E,EAAcyF,cAAM,IAAAZ,OAAA,EAApBA,EAAsBc,yBAA0B,YAC3DrG,GAAG,0BACHK,KAAK,yBACLiG,WAAW,EACXX,QAASA,EACT5F,YAAY,mBACZ3B,MAnCMuH,EAAQY,MAAK,SAACC,GAAa,IAADC,EACeC,EAAAC,EAAnD,QAAO,OAAJjB,QAAI,IAAJA,GAAuB,QAAnBe,EAAJf,EAAMO,yBAAiB,IAAAQ,IAAvBA,EAAyBJ,0BACL,QAAbK,EAAAF,EAAQrI,aAAK,IAAAuI,OAAA,EAAbA,EAAeE,kBAAsB,OAAJlB,QAAI,IAAJA,GAAuB,QAAnBiB,EAAJjB,EAAMO,yBAAiB,IAAAU,OAAnB,EAAJA,EAAyBN,uBAAuBO,cAG/F,KACgB,KA8BRxF,SA3BkB,SAAChD,GAC3BkC,EAAW,CAAED,KAAM,yBAA0BjC,MAAOA,EAAMD,OAC9D,IA4B6B,QAApBqH,EAAA9E,EAAcyF,cAAM,IAAAX,GAApBA,EAAsBa,wBACvBzI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACvB4D,EAAAA,EAAAA,GAAmC,QAArB8D,EAAC/E,EAAcyF,cAAM,IAAAV,OAAA,EAApBA,EAAsBY,0BAClC,UAIpB,ECgBA,MA5EA,SAAwBhJ,GAAwB,IAADiI,EAAAuB,EAAAtB,EAAAC,EAAAC,EAApBC,EAAIrI,EAAJqI,KAAMpF,EAAUjD,EAAViD,WAEvBI,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1DiF,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,MAAcC,SAAS,GAAE,IAwBvD,OAtBAC,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHzF,EAAW,CAACD,KAAK,qCAAsCjC,MAAM,KAC7DkC,EAAW,CAACD,KAAK,gCAAiCjC,MAAM,KACxDkC,EAAW,CAACD,KAAK,yBAA0BjC,MAAM,IACrD,CACJ,GAAE,KAiBFqB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,cAAaE,SAAA,EACpBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,sBACZC,GAAG,0BACH7B,MAAM,sBACN8B,KAAK,wBACLC,SAAS,IACTG,KAAK,qCACLjC,OAA6B,QAAtBkH,EAAAI,EAAKO,yBAAiB,IAAAX,OAAA,EAAtBA,EAAwBwB,qCAAsC,GACrExG,WAAYA,EACZE,WAAYE,EAAcyF,UAE9B1G,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAWE,SAAA,EACtBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,4BACZC,GAAG,yBACH7B,MAAM,4BACN+B,SAAS,IACTG,KAAK,gCACLjC,OAA6B,QAAtByI,EAAAnB,EAAKO,yBAAiB,IAAAY,OAAA,EAAtBA,EAAwBE,gCAAiC,GAChEzG,WAAYA,EACZE,WAAYE,EAAcyF,UAG9B1G,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,oBAAmBE,SAAA,EAC9B0B,EAAAA,EAAAA,MAAA,SAAA1B,SAAA,CAAO,YAAQH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UACrBH,EAAAA,EAAAA,KAACwI,EAAAA,GAAM,CACHvI,WAA+B,QAApB0H,EAAA7E,EAAcyF,cAAM,IAAAZ,OAAA,EAApBA,EAAsByB,yBAA0B,YAC3DhH,GAAG,0BACHK,KAAK,yBACLiG,WAAW,EACXX,QAASA,EACT5F,YAAY,mBACZ3B,MA/CFuH,EAAQY,MAAK,SAACC,GAAa,IAADC,EACeC,EAAAC,EAAnD,QAAO,OAAJjB,QAAI,IAAJA,GAAuB,QAAnBe,EAAJf,EAAMO,yBAAiB,IAAAQ,IAAvBA,EAAyBO,0BACL,QAAbN,EAAAF,EAAQrI,aAAK,IAAAuI,OAAA,EAAbA,EAAeE,kBAAsB,OAAJlB,QAAI,IAAJA,GAAuB,QAAnBiB,EAAJjB,EAAMO,yBAAiB,IAAAU,OAAnB,EAAJA,EAAyBK,uBAAuBJ,cAG/F,KACgB,KA0CAxF,SAvCU,SAAChD,GAC3BkC,EAAW,CAAED,KAAM,yBAA0BjC,MAAOA,EAAMD,OAC9D,IAwCqC,QAApBqH,EAAA9E,EAAcyF,cAAM,IAAAX,GAApBA,EAAsBwB,wBACvBpJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACvB4D,EAAAA,EAAAA,GAAmC,QAArB8D,EAAC/E,EAAcyF,cAAM,IAAAV,OAAA,EAApBA,EAAsBuB,0BAClC,aAK5B,ECzCA,MApCA,SAAsB3J,GAAsB,IAADoJ,EAAAE,EAAnBjB,EAAIrI,EAAJqI,KAAMpF,EAAUjD,EAAViD,WACpBI,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAShE,OAPAqF,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHzF,EAAW,CAACD,KAAK,iBAAkBjC,MAAM,KACzCkC,EAAW,CAACD,KAAK,4BAA6BjC,MAAM,IACxD,CACJ,GAAE,KAGFqB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,wBAAuBE,SAAA,EAClCH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,iBACZC,GAAG,uBACH7B,MAAM,iBACN+B,SAAS,IACTG,KAAK,iBACLjC,OAA6B,QAAtBqI,EAAAf,EAAKO,yBAAiB,IAAAQ,OAAA,EAAtBA,EAAwBQ,iBAAkB,GACjD3G,WAAYA,EACZE,WAAYE,EAAcyF,UAE9BvI,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,yCACZC,GAAG,0BACH7B,MAAM,wCACN+B,SAAS,IACTG,KAAK,4BACLjC,OAA6B,QAAtBuI,EAAAjB,EAAKO,yBAAiB,IAAAU,OAAA,EAAtBA,EAAwBO,4BAA6B,GAC5D5G,WAAYA,EACZE,WAAYE,EAAcyF,WAItC,E,SC4CA,EA1E0B,SAAH9I,GAAwB,IAADoJ,EAAAE,EAAArB,EAAAuB,EAAAM,EAAAC,EAAAC,EAAA9B,EAAAC,EAAlB8B,EAAYjK,EAAZiK,aAClB5B,GAAO/E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAIA,EAAM8E,IAAI,IACvChF,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1DJ,EAAa,SAAHpC,GAAuB,IAAlBmC,EAAInC,EAAJmC,KAAMjC,EAAKF,EAALE,MACvBkJ,EAAa,CAACjH,KAAAA,EAAMjC,MAAAA,EAAOmJ,MAAM,qBACrC,EAEMC,EAAkB,SAAHpE,GAAsB,IAAjB/C,EAAI+C,EAAJ/C,KAAMjC,EAAKgF,EAALhF,MACtBqJ,EAAcC,SAAStJ,GAC7BkJ,EAAa,CAACjH,KAAAA,EAAMjC,MAAMqJ,EAAaF,MAAM,qBACjD,EAEF,OACE9H,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BE,SAAC,kEAE7C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpC0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,CAAI,uCAAmCH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UAE7C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,GAAEE,SAAA,EACbH,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,uBACLL,GAAG,8BACH4H,QAAQ,qCACRC,IAAKC,EAAAA,GACLxH,WAAYkH,EACZO,SAA+B,QAAtBtB,EAAAf,EAAKO,yBAAiB,IAAAQ,OAAA,EAAtBA,EAAwBuB,wBAAyBF,EAAAA,MAE9DlK,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,uBACLL,GAAG,sBACH4H,QAAQ,wBACRC,IAAKI,EAAAA,GACL3H,WAAYkH,EACZO,SAA+B,QAAtBpB,EAAAjB,EAAKO,yBAAiB,IAAAU,OAAA,EAAtBA,EAAwBqB,wBAAyBC,EAAAA,MAIvC,QAAtB3C,EAAAI,EAAKO,yBAAiB,IAAAX,OAAA,EAAtBA,EAAwB0C,wBAAyBC,EAAAA,IAAyBrK,EAAAA,EAAAA,KAACsK,EAAgB,CAACxC,KAAMA,EAAMpF,WAAYA,IAAe,MAEpI1C,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACjBtH,KAAK,uBACLL,GAAG,+BACH4H,QAAQ,gDACRC,IAAKM,EAAAA,GACL7H,WAAYkH,EACZO,SAA+B,QAAtBlB,EAAAnB,EAAKO,yBAAiB,IAAAY,OAAA,EAAtBA,EAAwBmB,wBAAyBG,EAAAA,MAInC,QAAtBhB,EAAAzB,EAAKO,yBAAiB,IAAAkB,OAAA,EAAtBA,EAAwBa,wBAAyBG,EAAAA,IAAiDvK,EAAAA,EAAAA,KAACwK,EAAe,CAAC1C,KAAMA,EAAMpF,WAAYA,IAAe,MAE3J1C,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACjBtH,KAAK,uBACLL,GAAG,0BACH4H,QAAQ,0ZACR3H,KAAK,YACL4H,IAAKQ,EAAAA,GACL/H,WAAYkH,EACZO,SAA+B,QAAtBX,EAAA1B,EAAKO,yBAAiB,IAAAmB,OAAA,EAAtBA,EAAwBY,wBAAyBK,EAAAA,MAInC,QAAtBhB,EAAA3B,EAAKO,yBAAiB,IAAAoB,OAAA,EAAtBA,EAAwBW,wBAAyBK,EAAAA,IAAqBzK,EAAAA,EAAAA,KAAC0K,EAAa,CAAC5C,KAAMA,EAAMpF,WAAYA,IAAgB,QAE7G,QAApBiF,EAAA7E,EAAcyF,cAAM,IAAAZ,GAApBA,EAAsByC,sBAAsBpK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACxE4D,EAAAA,EAAAA,GAAmC,QAArB6D,EAAC9E,EAAcyF,cAAM,IAAAX,OAAA,EAApBA,EAAsBwC,wBAClC,UAIhB,ECtDA,MAvBA,SAA4B3K,GAAkC,IAAhCiD,EAAUjD,EAAViD,WAAYoF,EAAIrI,EAAJqI,KAAMlF,EAAUnD,EAAVmD,WAa9C,OAXEuF,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHzF,EAAW,CAACD,KAAK,qCAAsCjC,MAAM,IACjE,CACJ,GAAE,KAQFqB,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAAjG,SAAA,EACAH,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oBAAoBoC,KAAK,OAAOF,YAAY,4BAA4BC,GAAG,sBAAsBK,KAAK,qCAAqCjC,OAAW,OAAJsH,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,qCAAsC,GAAInH,SAPhM,SAACC,GAChB,IAAAC,EAAsBD,EAAEE,OAAjBlB,EAAIiB,EAAJjB,KAAMjC,EAAKkD,EAALlD,MACbkC,EAAW,CAACD,KAAAA,EAAMjC,MAAAA,GACtB,IAKW,OAAVoC,QAAU,IAAVA,GAAAA,EAAY+H,oCAAoC3K,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACxE4D,EAAAA,EAAAA,GAAyB,OAAVnB,QAAU,IAAVA,OAAU,EAAVA,EAAY+H,sCACxB,OAGZ,ECOA,MA5BA,SAAwBlL,GAAkC,IAAhCqI,EAAIrI,EAAJqI,KAAMpF,EAAUjD,EAAViD,WAAYE,EAAUnD,EAAVmD,WAa1C,OAXEuF,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHzF,EAAW,CAACD,KAAK,2CAA4CjC,MAAM,IACvE,CACJ,GAAE,KAQFqB,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAAjG,SAAA,EACIH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBE,UACnCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBE,SAAC,gLAElCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCE,UAC7CH,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oBAAoBoC,KAAK,OAAOF,YAAY,gCAAgCC,GAAG,mBAAmBK,KAAK,2CAA2CjC,OAAW,OAAJsH,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,2CAA4C,GAAIpH,SAXrN,SAACC,GAChB,IAAAC,EAAsBD,EAAEE,OAAjBlB,EAAIiB,EAAJjB,KAAMjC,EAAKkD,EAALlD,MACbkC,EAAW,CAACD,KAAAA,EAAMjC,MAAAA,GACtB,MAUe,OAAVoC,QAAU,IAAVA,GAAAA,EAAYgI,0CAA0C5K,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UAC9E4D,EAAAA,EAAAA,GAAyB,OAAVnB,QAAU,IAAVA,OAAU,EAAVA,EAAYgI,4CACxB,OAGhB,E,UCwdA,EAze8B,SAAHnL,GAA0B,IAADkI,EAAAC,EAAAC,EAAAgD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAnBzE,GAAYjK,EAAZiK,aAEvB5B,IAAO/E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAIA,EAAM8E,IAAI,IACvChF,IAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1DiF,IAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,MAAcC,SAAS,GAAE,IAEjDkG,GAAa,CACfC,qBAA2C,QAApB1G,EAAA7E,GAAcyF,cAAM,IAAAZ,GAApBA,EAAsB0G,qBAA0C,QAAtBzG,EAAE9E,GAAcyF,cAAM,IAAAX,OAAA,EAApBA,EAAsByG,qBAAqBC,EAAAA,IAA4B,GAC1IC,QAA8B,QAApB1G,EAAA/E,GAAcyF,cAAM,IAAAV,GAApBA,EAAsB0G,QAA6B,QAAtB1D,EAAE/H,GAAcyF,cAAM,IAAAsC,OAAA,EAApBA,EAAsB0D,QAAQD,EAAAA,IAA4B,GACnGE,UAAgC,QAApB1D,EAAAhI,GAAcyF,cAAM,IAAAuC,GAApBA,EAAsB0D,UAA+B,QAAtBzD,EAAEjI,GAAcyF,cAAM,IAAAwC,OAAA,EAApBA,EAAsByD,UAAUF,EAAAA,IAA4B,GACzGG,YAAkC,QAApBzD,EAAAlI,GAAcyF,cAAM,IAAAyC,GAApBA,EAAsByD,YAAiC,QAAtBxD,EAAEnI,GAAcyF,cAAM,IAAA0C,OAAA,EAApBA,EAAsBwD,YAAYH,EAAAA,IAA4B,GAC/GI,OAA6B,QAApBxD,EAAApI,GAAcyF,cAAM,IAAA2C,GAApBA,EAAsBwD,OAA4B,QAAtBvD,EAAErI,GAAcyF,cAAM,IAAA4C,OAAA,EAApBA,EAAsBuD,OAAOJ,EAAAA,IAA4B,GAChGK,MAA4B,QAApBvD,EAAAtI,GAAcyF,cAAM,IAAA6C,GAApBA,EAAsBuD,MAA2B,QAAtBtD,EAAEvI,GAAcyF,cAAM,IAAA8C,OAAA,EAApBA,EAAsBsD,MAAML,EAAAA,IAA4B,GAC7FM,SAA+B,QAApBtD,EAAAxI,GAAcyF,cAAM,IAAA+C,GAApBA,EAAsBsD,SAA8B,QAAtBrD,EAAEzI,GAAcyF,cAAM,IAAAgD,OAAA,EAApBA,EAAsBqD,SAASN,EAAAA,IAA4B,GACtGO,WAAiC,QAApBrD,EAAA1I,GAAcyF,cAAM,IAAAiD,GAApBA,EAAsBqD,WAAgC,QAAtBpD,EAAE3I,GAAcyF,cAAM,IAAAkD,OAAA,EAApBA,EAAsBoD,WAAWP,EAAAA,IAA4B,IAE1GQ,GAAc,CAChBT,qBAA2C,QAApB3C,EAAA5I,GAAcyF,cAAM,IAAAmD,GAApBA,EAAsB2C,qBAA0C,QAAtB1C,EAAE7I,GAAcyF,cAAM,IAAAoD,OAAA,EAApBA,EAAsB0C,qBAAqBU,EAAAA,IAAiC,GAC/IR,QAA8B,QAApB3C,EAAA9I,GAAcyF,cAAM,IAAAqD,GAApBA,EAAsB2C,QAA6B,QAAtB1C,EAAE/I,GAAcyF,cAAM,IAAAsD,OAAA,EAApBA,EAAsB0C,QAAQQ,EAAAA,IAAiC,GACxGP,UAAgC,QAApB1C,EAAAhJ,GAAcyF,cAAM,IAAAuD,GAApBA,EAAsB0C,UAA+B,QAAtBzC,EAAEjJ,GAAcyF,cAAM,IAAAwD,OAAA,EAApBA,EAAsByC,UAAUO,EAAAA,IAAiC,GAC9GN,YAAkC,QAApBzC,EAAAlJ,GAAcyF,cAAM,IAAAyD,GAApBA,EAAsByC,YAAiC,QAAtBxC,EAAEnJ,GAAcyF,cAAM,IAAA0D,OAAA,EAApBA,EAAsBwC,YAAYM,EAAAA,IAAiC,GACpHL,OAA6B,QAApBxC,EAAApJ,GAAcyF,cAAM,IAAA2D,GAApBA,EAAsBwC,OAA4B,QAAtBvC,EAAErJ,GAAcyF,cAAM,IAAA4D,OAAA,EAApBA,EAAsBuC,OAAOK,EAAAA,IAAiC,GACrGJ,MAA4B,QAApBvC,EAAAtJ,GAAcyF,cAAM,IAAA6D,GAApBA,EAAsBuC,MAA2B,QAAtBtC,EAAEvJ,GAAcyF,cAAM,IAAA8D,OAAA,EAApBA,EAAsBsC,MAAMI,EAAAA,IAAiC,GAClGH,SAA+B,QAApBtC,EAAAxJ,GAAcyF,cAAM,IAAA+D,GAApBA,EAAsBsC,SAA8B,QAAtBrC,EAAEzJ,GAAcyF,cAAM,IAAAgE,OAAA,EAApBA,EAAsBqC,SAASG,EAAAA,IAAiC,GAC3GF,WAAiC,QAApBrC,EAAA1J,GAAcyF,cAAM,IAAAiE,GAApBA,EAAsBqC,WAAgC,QAAtBpC,EAAE3J,GAAcyF,cAAM,IAAAkE,OAAA,EAApBA,EAAsBoC,WAAWE,EAAAA,IAAiC,IAE/GC,GAAiB,CACnBX,qBAA2C,QAApB3B,EAAA5J,GAAcyF,cAAM,IAAAmE,GAApBA,EAAsB2B,qBAA0C,QAAtB1B,EAAE7J,GAAcyF,cAAM,IAAAoE,OAAA,EAApBA,EAAsB0B,qBAAqBY,EAAAA,IAAqC,GACnJV,QAA8B,QAApB3B,EAAA9J,GAAcyF,cAAM,IAAAqE,GAApBA,EAAsB2B,QAA6B,QAAtB1B,EAAE/J,GAAcyF,cAAM,IAAAsE,OAAA,EAApBA,EAAsB0B,QAAQU,EAAAA,IAAqC,GAC5GT,UAAgC,QAApB1B,EAAAhK,GAAcyF,cAAM,IAAAuE,GAApBA,EAAsB0B,UAA+B,QAAtBzB,EAAEjK,GAAcyF,cAAM,IAAAwE,OAAA,EAApBA,EAAsByB,UAAUS,EAAAA,IAAqC,GAClHR,YAAkC,QAApBzB,EAAAlK,GAAcyF,cAAM,IAAAyE,GAApBA,EAAsByB,YAAiC,QAAtBxB,EAAEnK,GAAcyF,cAAM,IAAA0E,OAAA,EAApBA,EAAsBwB,YAAYQ,EAAAA,IAAqC,GACxHP,OAA6B,QAApBxB,EAAApK,GAAcyF,cAAM,IAAA2E,GAApBA,EAAsBwB,OAA4B,QAAtBvB,GAAErK,GAAcyF,cAAM,IAAA4E,QAAA,EAApBA,GAAsBuB,OAAOO,EAAAA,IAAqC,GACzGN,MAA4B,QAApBvB,GAAAtK,GAAcyF,cAAM,IAAA6E,IAApBA,GAAsBuB,MAA2B,QAAtBtB,GAAEvK,GAAcyF,cAAM,IAAA8E,QAAA,EAApBA,GAAsBsB,MAAMM,EAAAA,IAAqC,GACtGL,SAA+B,QAApBtB,GAAAxK,GAAcyF,cAAM,IAAA+E,IAApBA,GAAsBsB,SAA8B,QAAtBrB,GAAEzK,GAAcyF,cAAM,IAAAgF,QAAA,EAApBA,GAAsBqB,SAASK,EAAAA,IAAqC,GAC/GJ,WAAiC,QAApBrB,GAAA1K,GAAcyF,cAAM,IAAAiF,IAApBA,GAAsBqB,WAAgC,QAAtBpB,GAAE3K,GAAcyF,cAAM,IAAAkF,QAAA,EAApBA,GAAsBoB,WAAWI,EAAAA,IAAqC,IAGnHrF,GAAkB,SAAHtJ,GAAsB,IAAjBmC,EAAInC,EAAJmC,KAAMjC,EAAKF,EAALE,MACtBqJ,EAAcC,SAAStJ,GAC7BkJ,GAAa,CAACjH,KAAAA,EAAMjC,MAAMqJ,GAC9B,EAEMnH,GAAa,SAAH8C,GAAsB,IAAjB/C,EAAI+C,EAAJ/C,KAAMjC,EAAKgF,EAALhF,MACvBkJ,GAAa,CAACjH,KAAAA,EAAMjC,MAAAA,GACxB,EAOM0O,GAAkB,SAAHC,GAAmC,IAA9B1M,EAAI0M,EAAJ1M,KAAMjC,EAAK2O,EAAL3O,MAAO4O,EAAWD,EAAXC,YACnC1F,GAAa,CAACjH,KAAAA,EAAMjC,MAAAA,EAAOmJ,MAAM,kBAAmB0F,aAAaD,GACrE,EAEME,GAAsB,SAACF,EAAaG,GAGtC,OAFgBzH,GAAK0H,gBAAgB7G,MAAK,SAACtI,GAAI,OAAI+O,KAAkB,OAAJ/O,QAAI,IAAJA,OAAI,EAAJA,EAAMgP,aAAY,KAAK,CAAC,GACrEE,IAAY,EAEpC,EAEME,GAAe,SAACpN,GAElB,IAAMqN,EAAcJ,GAAoBjN,EAAM,WAQ9C,OANc0F,GAAQY,MAAK,SAACC,GACR,IAADE,EAAf,QAAG4G,IACoB,QAAb5G,EAAAF,EAAQrI,aAAK,IAAAuI,OAAA,EAAbA,EAAeE,kBAA6B,OAAX0G,QAAW,IAAXA,OAAW,EAAXA,EAAa1G,cAG5D,KACgB,IACpB,EAGF,OACEnH,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BE,SAAC,iCAE7C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpC0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,mCACZC,GAAG,oBACH7B,MAAM,mCACN8B,KAAK,wBACLC,SAAS,IACTG,KAAK,YACLjC,MAAW,OAAJsH,SAAI,IAAJA,QAAI,EAAJA,GAAM6H,UACbjN,WAAYA,GACZE,WAAYE,GAAcyF,UAE9BvI,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,sDACZC,GAAG,6BACH7B,MAAM,sDACN8B,KAAK,wBACLC,SAAS,IACTG,KAAK,UACLjC,MAAW,OAAJsH,SAAI,IAAJA,QAAI,EAAJA,GAAMc,QACblG,WAAYA,GACZE,WAAYE,GAAcyF,aAKlC1G,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeE,SAAC,kEAC9B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAWE,SAAA,EACtBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,OACZC,GAAG,aACH7B,MAAM,OACN+B,SAAS,GACTG,KAAK,OACLjC,MAAW,OAAJsH,SAAI,IAAJA,QAAI,EAAJA,GAAM8H,KACblN,WAtEC,SAAHmN,GAAsB,IAAjBpN,EAAIoN,EAAJpN,KAAMjC,EAAKqP,EAALrP,MACnBsP,GAAaC,EAAAA,EAAAA,IAAsBvP,GACzCkC,GAAW,CAACD,KAAAA,EAAMjC,MAAMsP,GAC5B,EAoEoBlN,WAAYE,GAAcyF,UAE9BvI,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,wBACZC,GAAG,uBACH7B,MAAM,wCACN+B,SAAS,GACTG,KAAK,wBACLjC,MAAW,OAAJsH,SAAI,IAAJA,QAAI,EAAJA,GAAMkI,sBACbtN,WAAYA,GACZE,WAAYE,GAAcyF,aAGlCvI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeE,UAC1BH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,+EACZC,GAAG,0BACH7B,MAAM,sGACN+B,SAAS,GACTD,KAAK,wBACLI,KAAK,uBACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,wBACtD5L,WAAY,SAAAuN,GAAA,IAAExN,EAAIwN,EAAJxN,KAAMjC,EAAKyP,EAALzP,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,QAGpBvM,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAWE,SAAA,EACtBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,iBACZC,GAAG,gBACH7B,MAAM,iBACN+B,SAAS,GACTG,KAAK,UACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,WACtD5L,WAAY,SAAAwN,GAAA,IAAEzN,EAAIyN,EAAJzN,KAAMjC,EAAK0P,EAAL1P,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,MAEhBpO,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,gBACZC,GAAG,kBACH7B,MAAM,gBACN+B,SAAS,GACTG,KAAK,YACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,aACtD5L,WAAY,SAAAyN,GAAA,IAAE1N,EAAI0N,EAAJ1N,KAAMjC,EAAK2P,EAAL3P,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,MAEhBpO,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,cACZC,GAAG,oBACH7B,MAAM,cACN+B,SAAS,GACTG,KAAK,cACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,eACtD5L,WAAY,SAAA0N,GAAA,IAAE3N,EAAI2N,EAAJ3N,KAAMjC,EAAK4P,EAAL5P,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,MAEhBpO,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,eACHD,YAAY,cACZ5B,MAAM,cACN+B,SAAS,GACTG,KAAK,SACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,UACtD5L,WAAY,SAAA2N,GAAA,IAAE5N,EAAI4N,EAAJ5N,KAAMjC,EAAK6P,EAAL7P,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,MAEhBpO,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,cACHD,YAAY,QACZ5B,MAAM,QACN+B,SAAS,GACTG,KAAK,QACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,SACtD5L,WAAY,SAAA4N,GAAA,IAAE7N,EAAI6N,EAAJ7N,KAAMjC,EAAK8P,EAAL9P,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,MAEhBpO,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,iBACHD,YAAY,WACZ5B,MAAM,WACN+B,SAAS,GACTG,KAAK,WACLjC,MAAO8O,GAAoBhB,EAAAA,GAA2B,YACtD5L,WAAY,SAAA6N,GAAA,IAAE9N,EAAI8N,EAAJ9N,KAAMjC,EAAK+P,EAAL/P,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYd,EAAAA,IAA2B,EAClG1L,WAAYwL,MAGhBvM,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,sCAAqCE,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,aACPH,EAAAA,EAAAA,KAACwI,EAAAA,GAAM,CACHvI,WAAqB,OAAVmO,SAAU,IAAVA,IAAsB,QAAZV,GAAVU,GAAYS,kBAAU,IAAAnB,QAAZ,EAAVA,GAAwBtK,SAAU,YAC7ChB,GAAG,0BACHK,KAAK,aACLiG,WAAW,EACXX,QAASA,GACT5F,YAAY,mBACZ3B,MAAOiP,GAAanB,EAAAA,IACpB9K,SAAU,SAAChD,GAAK,OAAK0O,GAAgB,CAAEzM,KAAK,UAAWjC,MAAOA,EAAMD,MAAO6O,YAAad,EAAAA,IAA4B,IAG7G,OAAVF,SAAU,IAAVA,IAAsB,QAAZT,GAAVS,GAAYS,kBAAU,IAAAlB,IAAtBA,GAAwBvK,QACzBpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACvB4D,EAAAA,EAAAA,GAAyB,OAAVqK,SAAU,IAAVA,QAAU,EAAVA,GAAYS,cACxB,YAIhB7O,EAAAA,EAAAA,KAAA,OAAMC,UAAU,gBAAeE,UAC3BH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,2BACH7B,MAAM,4BACN4B,YAAY,4BACZG,SAAS,GACTD,KAAK,wBACLI,KAAK,uBACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,wBAC3DrM,WAAY,SAAA8N,GAAA,IAAE/N,EAAI+N,EAAJ/N,KAAMjC,EAAKgQ,EAALhQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,QAGpBjN,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAWE,SAAA,EACtBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,oBACH7B,MAAM,iBACN4B,YAAY,iBACZG,SAAS,GACTG,KAAK,UACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,WAC3DrM,WAAY,SAAA+N,GAAA,IAAEhO,EAAIgO,EAAJhO,KAAMjC,EAAKiQ,EAALjQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,MAEhB9O,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,sBACH7B,MAAM,gBACN4B,YAAY,gBACZG,SAAS,GACTG,KAAK,YACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,aAC3DrM,WAAY,SAAAgO,GAAA,IAAEjO,EAAIiO,EAAJjO,KAAMjC,EAAKkQ,EAALlQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,MAEhB9O,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,wBACH7B,MAAM,cACN4B,YAAY,cACZG,SAAS,GACTG,KAAK,cACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,eAC3DrM,WAAY,SAAAiO,GAAA,IAAElO,EAAIkO,EAAJlO,KAAMjC,EAAKmQ,EAALnQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,MAEhB9O,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,mBACH7B,MAAM,cACN4B,YAAY,cACZG,SAAS,GACTG,KAAK,SACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,UAC3DrM,WAAY,SAAAkO,GAAA,IAAEnO,EAAImO,EAAJnO,KAAMjC,EAAKoQ,EAALpQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,MAEhB9O,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,kBACH7B,MAAM,QACN4B,YAAY,QACZG,SAAS,GACTG,KAAK,QACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,SAC3DrM,WAAY,SAAAmO,GAAA,IAAEpO,EAAIoO,EAAJpO,KAAMjC,EAAKqQ,EAALrQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,MAEhB9O,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZhG,GAAG,qBACH7B,MAAM,WACN4B,YAAY,WACZG,SAAS,GACTG,KAAK,WACLjC,MAAO8O,GAAoBP,EAAAA,GAAgC,YAC3DrM,WAAY,SAAAoO,GAAA,IAAErO,EAAIqO,EAAJrO,KAAMjC,EAAKsQ,EAALtQ,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYL,EAAAA,IAAgC,EACvGnM,WAAYkM,MAGhBjN,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,sCAAqCE,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,aACPH,EAAAA,EAAAA,KAACwI,EAAAA,GAAM,CACHvI,WAAsB,OAAX6O,SAAW,IAAXA,IAAuB,QAAZlB,GAAXkB,GAAaD,kBAAU,IAAAjB,QAAZ,EAAXA,GAAyBxK,SAAU,YAC9ChB,GAAG,0BACHK,KAAK,aACLiG,WAAW,EACXX,QAASA,GACT5F,YAAY,mBACZ3B,MAAOiP,GAAaV,EAAAA,IACpBvL,SAAU,SAAChD,GAAK,OAAK0O,GAAgB,CAAEzM,KAAK,UAAWjC,MAAOA,EAAMD,MAAO6O,YAAaL,EAAAA,IAAiC,IAGjH,OAAXD,SAAW,IAAXA,IAAuB,QAAZjB,GAAXiB,GAAaD,kBAAU,IAAAhB,IAAvBA,GAAyBzK,QAC1BpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACvB4D,EAAAA,EAAAA,GAA0B,OAAX+K,SAAW,IAAXA,QAAW,EAAXA,GAAaD,cACzB,eAMpBhN,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,gBAAeE,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,+EACJ0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACI0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,mBAAkBE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,SACIqC,KAAK,QACLI,KAAK,wDACLL,GAAG,6BACH5B,MAAOuQ,EAAAA,GACP5G,SAAa,OAAJrC,SAAI,IAAJA,QAAI,EAAJA,GAAMkJ,yDAA0DD,EAAAA,GACzEvN,SAAU,SAACC,GAAC,OAAGmG,GAAgB,CAACnH,KAAKgB,EAAEE,OAAOlB,KAAMjC,MAAMiD,EAAEE,OAAOnD,OAAO,KAE9ER,EAAAA,EAAAA,KAAA,SAAOsD,QAAQ,6BAA4BnD,SAAC,SACvC,OAAJ2H,SAAI,IAAJA,QAAI,EAAJA,GAAMkJ,yDAA0DD,EAAAA,IAAO/Q,EAAAA,EAAAA,KAACiR,EAAmB,CAACvO,WAAYA,GAAYoF,KAAMA,GAAMlF,WAAYE,GAAcyF,SAAW,SAE1KvI,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,wDACLL,GAAG,4BACH4H,QAAQ,KACRC,IAAKiH,EAAAA,GACL/G,SAAa,OAAJrC,SAAI,IAAJA,QAAI,EAAJA,GAAMkJ,yDAA0DE,EAAAA,GACzExO,WAAYkH,KAEK,QAApBkE,GAAAhL,GAAcyF,cAAM,IAAAuF,IAApBA,GAAsBkD,uDAAuDhR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACrG4D,EAAAA,EAAAA,GAAmC,QAArBgK,GAACjL,GAAcyF,cAAM,IAAAwF,QAAA,EAApBA,GAAsBiD,yDAClC,YAKhBnP,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,gBAAeE,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAC,sEAE5B0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,kBAAiBE,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0EAEJ0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,mBAAkBE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,SACIqC,KAAK,QACLI,KAAK,gEACLL,GAAG,6BACH5B,MAAOuQ,EAAAA,GACP5G,SAAa,OAAJrC,SAAI,IAAJA,QAAI,EAAJA,GAAMqJ,iEAAkEJ,EAAAA,GACjFvN,SAAU,SAACC,GAAC,OAAGmG,GAAgB,CAACnH,KAAKgB,EAAEE,OAAOlB,KAAMjC,MAAMiD,EAAEE,OAAOnD,OAAO,KAG9ER,EAAAA,EAAAA,KAAA,SAAOsD,QAAQ,6BAA4BnD,SAAC,SAEvC,OAAJ2H,SAAI,IAAJA,QAAI,EAAJA,GAAMqJ,iEAAkEJ,EAAAA,IAAO/Q,EAAAA,EAAAA,KAACoR,EAAe,CAACtJ,KAAMA,GAAMpF,WAAYA,GAAYE,WAAYE,GAAcyF,SAAW,SAG9KvI,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,gEACLL,GAAG,4BACH4H,QAAQ,KACRC,IAAKiH,EAAAA,GACL/G,SAAa,OAAJrC,SAAI,IAAJA,QAAI,EAAJA,GAAMqJ,iEAAkED,EAAAA,GACjFxO,WAAYkH,KAGK,QAApBoE,GAAAlL,GAAcyF,cAAM,IAAAyF,IAApBA,GAAsBmD,+DAA+DnR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UAC7G4D,EAAAA,EAAAA,GAAmC,QAArBkK,GAACnL,GAAcyF,cAAM,IAAA0F,QAAA,EAApBA,GAAsBkD,iEAClC,SAGZnR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACxBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,6EACZC,GAAG,8BACH7B,MAAM,+JACN8B,KAAK,wBACLC,SAAS,GACTG,KAAK,uBACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,wBAC/DvM,WAAY,SAAA2O,GAAA,IAAE5O,EAAI4O,EAAJ5O,KAAMjC,EAAK6Q,EAAL7Q,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,QAGpBnN,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAWE,SAAA,EACtBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,iBACZC,GAAG,sBACH7B,MAAM,iBACN+B,SAAS,GACTG,KAAK,UACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,WAC/DvM,WAAY,SAAA4O,GAAA,IAAE7O,EAAI6O,EAAJ7O,KAAMjC,EAAK8Q,EAAL9Q,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,MAEhBhP,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,gBACZC,GAAG,2BACH7B,MAAM,gBACN+B,SAAS,GACTG,KAAK,YACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,aAC/DvM,WAAY,SAAA6O,GAAA,IAAE9O,EAAI8O,EAAJ9O,KAAMjC,EAAK+Q,EAAL/Q,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,MAEhBhP,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,cACZC,GAAG,wBACH7B,MAAM,cACN+B,SAAS,GACTG,KAAK,cACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,eAC/DvM,WAAY,SAAA8O,GAAA,IAAE/O,EAAI+O,EAAJ/O,KAAMjC,EAAKgR,EAALhR,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,MAGhBhP,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,cACZC,GAAG,wBACH7B,MAAM,cACN+B,SAAS,GACTG,KAAK,SACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,UAC/DvM,WAAY,SAAA+O,GAAA,IAAEhP,EAAIgP,EAAJhP,KAAMjC,EAAKiR,EAALjR,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,MAEhBhP,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,QACZC,GAAG,uBACH7B,MAAM,QACN+B,SAAS,GACTG,KAAK,QACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,SAC/DvM,WAAY,SAAAgP,GAAA,IAAEjP,EAAIiP,EAAJjP,KAAMjC,EAAKkR,EAALlR,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,MAEhBhP,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,WACZC,GAAG,0BACH7B,MAAM,WACN+B,SAAS,GACTG,KAAK,WACLjC,MAAO8O,GAAoBL,EAAAA,GAAoC,YAC/DvM,WAAY,SAAAiP,GAAA,IAAElP,EAAIkP,EAAJlP,KAAMjC,EAAKmR,EAALnR,MAAK,OAAI0O,GAAgB,CAACzM,KAAAA,EAAMjC,MAAAA,EAAO4O,YAAYH,EAAAA,IAAoC,EAC3GrM,WAAYoM,MAGhBnN,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,oBAAmBE,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,aACPH,EAAAA,EAAAA,KAACwI,EAAAA,GAAM,CACHvI,WAAyB,OAAd+O,SAAc,IAAdA,IAA0B,QAAZd,GAAdc,GAAgBH,kBAAU,IAAAX,QAAZ,EAAdA,GAA4B9K,SAAU,YACjDhB,GAAG,0BACHK,KAAK,aACLiG,WAAW,EACXX,QAASA,GACT5F,YAAY,mBACZ3B,MAAOiP,GAAaR,EAAAA,IACpBzL,SAAU,SAAChD,GAAK,OAAK0O,GAAgB,CAAEzM,KAAK,UAAWjC,MAAOA,EAAMD,MAAO6O,YAAaH,EAAAA,IAAqC,IAGlH,OAAdD,SAAc,IAAdA,IAA0B,QAAZb,GAAda,GAAgBH,kBAAU,IAAAV,IAA1BA,GAA4B/K,QAC7BpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACvB4D,EAAAA,EAAAA,GAA6B,OAAdiL,SAAc,IAAdA,QAAc,EAAdA,GAAgBH,cAC5B,mBAOhC,E,yFC3SA,EA9L2B,SAAHpP,GAA0B,IAArBmS,EAAcnS,EAAdmS,eAEnBC,GAAQC,EAAAA,EAAAA,KACRC,EAAsB,CAACC,EAAAA,GAAAA,GAAAA,GAAwBC,EAAAA,GAAAA,GAAAA,IAE/CnK,GAAO/E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM8E,IAAI,IAC9C5G,GAA8CC,EAAAA,EAAAA,UAAS,CAACZ,MAAM,0BAA2BC,MAAM,KAAIY,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5FgR,EAAe9Q,EAAA,GAAE+Q,EAAkB/Q,EAAA,GAC1CgR,GAAsDjR,EAAAA,EAAAA,UAAS,CAACZ,MAAM,GAADL,OAAImS,EAAAA,GAA0B,QAAQ7R,MAAM,IAAG8R,GAAAjR,EAAAA,EAAAA,GAAA+Q,EAAA,GAA7GG,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,GAAwCtR,EAAAA,EAAAA,UAAS,IAAGuR,GAAArR,EAAAA,EAAAA,GAAAoR,EAAA,GAA7CxO,EAAYyO,EAAA,GAAEC,EAAeD,EAAA,GAE9BE,EAAY,eAAAtS,GAAAuS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAM5N,GAAI,IAAA/C,EAAA0E,EAAAnC,EAAAqO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAX,EAAAA,EAAAA,KAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA8D,GAA5DxR,EAAImR,EAAApQ,OAAA,QAAA0Q,IAAAN,EAAA,GAAAA,EAAA,GAAC,CAACjT,MAAM,GAAIC,MAAM,IAAKuG,EAAYyM,EAAApQ,OAAA,QAAA0Q,IAAAN,EAAA,GAAAA,EAAA,GAAC,CAACjT,MAAM,GAAIC,MAAM,KACnF4E,EAAK,CAADuO,EAAAE,KAAA,SAWiD,OAV9CjP,EAAWQ,EAAK3C,KAChBwQ,EAAWc,KAAKC,UAAU,CAAC,CAAC,MAAQ,GAAD9T,OAAImS,EAAAA,GAA0B,KAAAnS,OAAI6G,EAAavG,WAElF0S,EAAW,IAAIe,UACZC,OAAO,OAAQ9O,GACxB8N,EAASgB,OAAO,OAAQ7R,EAAK7B,OACzBuR,EAAoBnQ,SAASS,EAAK7B,QAClC0S,EAASgB,OAAO,WAAYjB,GAEhCC,EAASgB,OAAO,UAAW,KAC3BhB,EAASgB,OAAO,mBAAoBtC,GAAgB+B,EAAAE,KAAA,IACfM,EAAAA,EAAAA,IAAYjB,GAAU,KAAD,GAAAC,EAAAQ,EAAAS,KAAlDhB,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAAKC,EAAIH,EAAJG,KAChBC,EAAY,CACd1P,OAAQuP,EAASjN,EAAAA,GAAUG,EAAAA,GAC3BkB,OAAQ6L,EACRgB,QAASf,IAEbgB,EAAAA,EAAAA,IAAe,CAAC3B,gBAAAA,EAAiB/N,SAAAA,EAAU2O,UAAAA,IAAW,yBAAAI,EAAAY,OAAA,GAAAvB,EAAA,KAE7D,gBArBiBwB,GAAA,OAAAlU,EAAAmU,MAAA,KAAAhB,UAAA,KAoCZtP,EAAgB,SAACS,IAEnB8P,EAAAA,EAAAA,IAAmB,CAAC9P,SAAAA,EAAUX,aAAAA,EAAc0O,gBAAAA,GAChD,EAWMvO,EAAU,eAAAyL,GAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4B,EAAAnP,GAAA,IAAAZ,EAAAkB,EAAA8O,EAAAxB,EAAA,OAAAN,EAAAA,EAAAA,KAAAY,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAE0D,OAFnDjP,EAAQY,EAARZ,SAAUkB,EAAON,EAAPM,SAEhCwO,EAAAA,EAAAA,IAAe,CAAC3B,gBAAAA,EAAiB/N,SAAAA,EAAU2O,UAAW,CAAC7N,WAAW,KAAOmP,EAAAhB,KAAA,GAC/CiB,EAAAA,EAAAA,IAAkB,OAAPhP,QAAO,IAAPA,OAAO,EAAPA,EAASuO,SAAS,KAAD,EAAAO,EAAAC,EAAAT,MAA9ChB,EAAOwB,EAAPxB,UACGjP,EAAcS,GACzBwO,GAAWvB,EAAMuB,QAAQ,yBACzBA,IAAWkB,EAAAA,EAAAA,IAAe,CAAC3B,gBAAAA,EAAiB/N,SAAAA,EAAU2O,UAAW,CAAC7N,WAAW,KAC7E0N,GAAWvB,EAAMkD,MAAM,qBAAoB,yBAAAF,EAAAN,OAAA,GAAAI,EAAA,KAC9C,gBAReK,GAAA,OAAAnF,EAAA4E,MAAA,KAAAhB,UAAA,KAmBpB,OACI5R,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BE,SAAC,kCAG7C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,4CAEJ0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,8DACJ0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,uEACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0DACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,4MAMhB0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,gDAEJ0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,8DACJ0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0DACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,4LAMhB0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kGAEJ0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,kBAAiBE,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,6DACJ0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,+BACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,yDACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,gHACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mDAIZH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBE,UAClCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcE,SAAC,oRAKpC0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,uDAGJ0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,cAAaE,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,wGACJ0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,yFACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kGACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kIAIZH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAGf4B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,gBAAeE,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,wGACJ0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0GACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,6GACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,iJAERH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBE,UACpCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcE,SAAC,qRAIpC0B,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8BAA6BE,SAAC,6BAC5C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAY0F,MAAO,CAACsP,IAAI,IAAI9U,SAAA,EACvCH,EAAAA,EAAAA,KAAA,OAAK2F,MAAO,CAACuP,SAAU,KAAK/U,UACxBH,EAAAA,EAAAA,KAACmV,EAAAA,EAAc,CACXtV,gBA7FD,WAGnB,IAFA,IAAMuV,EAAiB,GACjBC,GAAmD,KAA3B,OAAJvN,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,qBAA4B,GAAQ,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,sBAAuB,EACpFnQ,EAAI,EAAGA,GAAKkQ,EAAmBlQ,IACpCiQ,EAAeG,KAAK,CAACpQ,EAAE,GAADjF,OAAKmS,EAAAA,GAA0B,OAAAnS,OAAMiF,KAE/D,OAAOiQ,CACX,CAsFyCI,GACjB7U,eAAgB4R,EAChB3R,qBA7GU,SAACc,GAC/B8Q,GAAsBiD,EAAAA,EAAAA,GAAC,CAAC,EAAG/T,GAC/B,OA8GgB1B,EAAAA,EAAAA,KAAA,OAAK2F,MAAO,CAACuP,SAAU,KAAK/U,UACxBH,EAAAA,EAAAA,KAACmV,EAAAA,EAAc,CACXrV,SAAS,0BACTD,gBAAiB6V,EAAAA,GACjB/U,eAAgBuR,EAChBtR,qBA1HK,SAACc,GAE1ByQ,GAAkBsD,EAAAA,EAAAA,GAAC,CAAC,EAAG/T,GAC3B,EAwHwBX,WAAU,IAAAb,OAAMmS,EAAAA,GAA0B,OAAAnS,OAAyB,OAAnBqS,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB/R,MAAK,KAC1ES,2BAA4B8Q,SAIxB,OAAfG,QAAe,IAAfA,GAAAA,EAAiB1R,OACdR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UACxBH,EAAAA,EAAAA,KAAC2V,EAAAA,EAAc,CAACzR,WApJjB,SAACgB,IAEhB0Q,EAAAA,EAAAA,IAAiB,CACb1Q,MAAAA,EACAjB,aAAAA,EACA0O,gBAAAA,EACAC,aAAAA,EACAb,oBAAAA,EACAG,iBAAeuD,EAAAA,EAAAA,GAAA,GAAKvD,GACpB2D,mBAAiBJ,EAAAA,EAAAA,GAAA,GAAKlD,IAE9B,EAyI4DtO,aAAcA,EAAcE,cAAeA,EAAeC,WAAYA,EAAYK,OAAO,2BAC7H,aAM5B,E,UCxJA,EA3CkB,SAAHhF,GAAqE,IAADkI,EAAAC,EAAAC,EAAAgD,EAAAC,EAAAC,EAA9D+K,EAAUrW,EAAVqW,WAAYC,EAAOtW,EAAPsW,QAASC,EAAuBvW,EAAvBuW,wBAAyBC,EAASxW,EAATwW,UACzDnT,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1DoT,EAAU,CACZC,WAAiC,QAApBxO,EAAA7E,EAAcyF,cAAM,IAAAZ,GAApBA,EAAsBwO,WAAgC,QAAtBvO,EAAE9E,EAAcyF,cAAM,IAAAX,OAAA,EAApBA,EAAsBuO,WAAWF,GAAY,GAC5FG,QAA8B,QAApBvO,EAAA/E,EAAcyF,cAAM,IAAAV,GAApBA,EAAsBuO,QAA6B,QAAtBvL,EAAE/H,EAAcyF,cAAM,IAAAsC,OAAA,EAApBA,EAAsBuL,QAAQH,GAAY,GACnFI,YAAkC,QAApBvL,EAAAhI,EAAcyF,cAAM,IAAAuC,GAApBA,EAAsBuL,YAAiC,QAAtBtL,EAAEjI,EAAcyF,cAAM,IAAAwC,OAAA,EAApBA,EAAsBsL,YAAYJ,GAAY,IAG7FvT,EAAa,SAAHpC,GAAuB,IAAlBmC,EAAInC,EAAJmC,KAAMjC,EAAKF,EAALE,MACvBwV,EAAwB,CAACvT,KAAAA,EAAMjC,MAAAA,EAAOsV,WAAAA,GAC1C,EAEA,OACAjU,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeE,SAAA,YAAAD,OAAc+V,EAAU,MACjDpU,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,YAAWE,SAAA,EACtBH,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,aACZC,GAAE,iBAAAlC,OAAmB4V,EAAU,eAC/BvV,MAAM,aACN+B,SAAS,IACTG,KAAK,aACLjC,OAAc,OAAPuV,QAAO,IAAPA,OAAO,EAAPA,EAASI,aAAc,GAC9BzT,WAAYA,EACZE,WAAYsT,KAEhBlW,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CACZjG,YAAY,UACZC,GAAE,iBAAAlC,OAAmB4V,EAAU,YAC/BvV,MAAM,UACN+B,SAAS,IACTG,KAAK,UACLjC,OAAc,OAAPuV,QAAO,IAAPA,OAAO,EAAPA,EAASK,UAAW,GAC3B1T,WAAYA,EACZE,WAAYsT,SArBlBJ,EA2Bd,E,UC4BA,EAjE8B,SAAHrW,GAA4B,IAAtBmS,EAAcnS,EAAdmS,eACvBC,GAAQC,EAAAA,EAAAA,KACRwE,EAAe,CAAC/V,MAAMgW,EAAAA,GAAAA,GAAAA,GAAwC/V,MAAM+V,EAAAA,GAAAA,GAAAA,IAC1ErV,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C+C,EAAY7C,EAAA,GAAEuR,EAAevR,EAAA,GAE/BwR,EAAY,eAAAtS,GAAAuS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAM5N,GAAI,IAAA/C,EAAAuC,EAAAsO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAX,EAAAA,EAAAA,KAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,GAAzBxR,EAAImR,EAAApQ,OAAA,QAAA0Q,IAAAN,EAAA,GAAAA,EAAA,GAAC,CAACjT,MAAM,GAAIC,MAAM,KAChD4E,EAAK,CAADuO,EAAAE,KAAA,SAQiD,OAN9CjP,EAAWQ,EAAK3C,MAChByQ,EAAW,IAAIe,UAEZC,OAAO,OAAQ9O,GACxB8N,EAASgB,OAAO,OAAQ7R,EAAK7B,OAC7B0S,EAASgB,OAAO,UAAW,KAC3BhB,EAASgB,OAAO,mBAAoBtC,GAAgB+B,EAAAE,KAAA,IAEfM,EAAAA,EAAAA,IAAYjB,GAAU,KAAD,GAAAC,EAAAQ,EAAAS,KAAlDhB,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAAKC,EAAIH,EAAJG,KAChBC,EAAY,CACd1P,OAAQuP,EAASjN,EAAAA,GAAUG,EAAAA,GAC3BkB,OAAQ6L,EACRgB,QAASf,IAEbgB,EAAAA,EAAAA,IAAe,CAAC3B,gBAAAA,EAAiB/N,SAAAA,EAAU2O,UAAAA,IAAW,yBAAAI,EAAAY,OAAA,GAAAvB,EAAA,KAE7D,gBAnBiBwB,GAAA,OAAAlU,EAAAmU,MAAA,KAAAhB,UAAA,KAgCZtP,EAAgB,SAACS,IAEnB8P,EAAAA,EAAAA,IAAmB,CAAC9P,SAAAA,EAAUX,aAAAA,EAAc0O,gBAAAA,GAChD,EAEMvO,EAAU,eAAAyL,GAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4B,EAAAnP,GAAA,IAAAZ,EAAAkB,EAAA8O,EAAAxB,EAAA,OAAAN,EAAAA,EAAAA,KAAAY,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAE0D,OAFnDjP,EAAQY,EAARZ,SAAUkB,EAAON,EAAPM,SAEhCwO,EAAAA,EAAAA,IAAe,CAAC3B,gBAAAA,EAAiB/N,SAAAA,EAAU2O,UAAW,CAAC7N,WAAW,KAAOmP,EAAAhB,KAAA,GAC/CiB,EAAAA,EAAAA,IAAkB,OAAPhP,QAAO,IAAPA,OAAO,EAAPA,EAASuO,SAAS,KAAD,EAAAO,EAAAC,EAAAT,MAA9ChB,EAAOwB,EAAPxB,UACGjP,EAAcS,GACzBwO,GAAWvB,EAAMuB,QAAQ,yBACzBA,IAAWkB,EAAAA,EAAAA,IAAe,CAAC3B,gBAAAA,EAAiB/N,SAAAA,EAAU2O,UAAW,CAAC7N,WAAW,KAC7E0N,GAAWvB,EAAMkD,MAAM,qBAAoB,yBAAAF,EAAAN,OAAA,GAAAI,EAAA,KAC9C,gBAReK,GAAA,OAAAnF,EAAA4E,MAAA,KAAAhB,UAAA,KAUlB,OACEzT,EAAAA,EAAAA,KAAAoG,EAAAA,SAAA,CAAAjG,UACIH,EAAAA,EAAAA,KAAC2V,EAAAA,EAAc,CACXzR,WA7BW,SAACgB,IAEhB0Q,EAAAA,EAAAA,IAAiB,CACb1Q,MAAAA,EACAjB,aAAAA,EACA0O,gBAAAA,EACAC,aAAAA,EACAV,iBAAeuD,EAAAA,EAAAA,GAAA,GAAKa,IAE5B,EAqBQrS,aAAcA,EACdE,cAAeA,EACfM,OAAO,gBACPL,WAAYA,KAIxB,EC8DA,EA3HyB,SAAH3E,GAA0C,IAADkI,EAAAC,EAAnC8B,EAAYjK,EAAZiK,aAAckI,EAAcnS,EAAdmS,eAChC9J,GAAO/E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAIA,EAAM8E,IAAI,IACvChF,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1D0T,EAAqB,SAACC,GAAmB,IAADC,EAGZC,EAF1BC,EAAM,GACJC,GAAiB,OAAJ/O,QAAI,IAAJA,GAAuB,QAAnB4O,EAAJ5O,EAAMgP,yBAAiB,IAAAJ,OAAnB,EAAJA,EAAyBtT,SAAU,EACtD,GAAGyT,EAAaJ,EAGZ,OAFAG,EAAU,OAAJ9O,QAAI,IAAJA,GAAuB,QAAnB6O,EAAJ7O,EAAMgP,yBAAiB,IAAAH,OAAnB,EAAJA,EAAyBrP,QAAO,SAACjH,EAAM0W,GAAK,OAAKA,EAAM,GAAIN,CAAa,SAC9E/M,EAAa,CAACjH,KAAK,oBAAqBjC,OAAKwW,EAAAA,EAAAA,GAAKJ,KAE/C,GAAGC,IAAeJ,EAAlB,CAGH,IAAMQ,EAASR,EAAcI,EAC7BD,GAAGI,EAAAA,EAAAA,GAAW,OAAJlP,QAAI,IAAJA,OAAI,EAAJA,EAAMgP,mBAChB,IAAMI,EAAShQ,MAAMiQ,KAAK,CAAC/T,OAAO6T,IAAS,kBAAAxB,EAAAA,EAAAA,GAAC,CAAD,EAAS2B,EAAAA,EAAoB,IACxE1N,EAAa,CAACjH,KAAK,oBAAqBjC,MAAM,GAADN,QAAA8W,EAAAA,EAAAA,GAAKJ,GAAQM,IAE9D,CACJ,EAEMtN,EAAkB,SAAHtJ,GAAsB,IAAjBmC,EAAInC,EAAJmC,KAAMjC,EAAKF,EAALE,MACtBqJ,EAAcC,SAAStJ,GAC7BkJ,EAAa,CACTjH,KAAAA,EACAjC,MAAOqJ,IAGRA,EAAc,EAEb2M,EAAmB3M,GAEfA,IAAgBwN,EAAAA,IACpBb,EAAmB,EAG3B,EAEMR,EAA0B,SAAHxQ,GAAmC,IAA9BsQ,EAAUtQ,EAAVsQ,WAAYrT,EAAI+C,EAAJ/C,KAAMjC,EAAKgF,EAALhF,MAC1C8W,EAAWxB,EAAa,EACxBc,GAAGI,EAAAA,EAAAA,GAAW,OAAJlP,QAAI,IAAJA,OAAI,EAAJA,EAAMgP,mBACtBF,EAAIU,GAAU7U,GAAQjC,EACtBkJ,EAAa,CAACjH,KAAK,oBAAqBjC,OAAKwW,EAAAA,EAAAA,GAAKJ,IAEtD,EAaF,OACE/U,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BE,SAAC,gDAC7C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACpC0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,CAAI,iCAA6BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UACvC0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,oCAAmCE,SAAA,EAC9CH,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,sBACLL,GAAG,mBACH4H,QAAQ,IACRC,IAAI,IACJE,QAAuC,KAA1B,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,qBACf5S,WAAYkH,KAEhB5J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,sBACLL,GAAG,mBACH4H,QAAQ,IACRC,IAAI,IACJE,QAAuC,KAA1B,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,qBACf5S,WAAYkH,KAEhB5J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,sBACLL,GAAG,mBACH4H,QAAQ,IACRC,IAAI,IACJE,QAAuC,KAA1B,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,qBACf5S,WAAYkH,KAEhB5J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,sBACLL,GAAG,mBACH4H,QAAQ,IACRC,IAAI,IACJE,QAAuC,KAA1B,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,qBACf5S,WAAYkH,KAEhB5J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACbtH,KAAK,sBACLL,GAAG,mBACH4H,QAAQ,cACRC,IAAG,GAAA/J,OAAKmX,EAAAA,IACRlN,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,uBAAwB+B,EAAAA,GACvC3U,WAAYkH,QAGpB/H,EAAAA,EAAAA,MAACmF,EAAAA,SAAc,CAAA7G,SAAA,CACU,QAApBwH,EAAA7E,EAAcyF,cAAM,IAAAZ,GAApBA,EAAsB2N,qBAAqBtV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UAC/D4D,EAAAA,EAAAA,GAAmC,QAArB6D,EAAC9E,EAAcyF,cAAM,IAAAX,OAAA,EAApBA,EAAsB0N,uBAClC,MAEH,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,uBAAwB+B,EAAAA,IAC3BxV,EAAAA,EAAAA,MAAAuE,EAAAA,SAAA,CAAAjG,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAC,sFAC5BH,EAAAA,EAAAA,KAACuX,EAAqB,CAAC3F,eAAgBA,OAE7C,QApEM,WAAO,IAAD4F,EAC1B,OAAW,OAAJ1P,QAAI,IAAJA,GAAuB,QAAnB0P,EAAJ1P,EAAMgP,yBAAiB,IAAAU,OAAnB,EAAJA,EAAyBpX,KAAI,SAACC,EAAM0W,GACvC,IACMtS,EADSsS,EAAM,EAErB,OAAIA,GAAY,OAAJjP,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,uBAA6B,OAAJxN,QAAI,IAAJA,OAAI,EAAJA,EAAMwN,uBAAwB+B,EAAAA,IAC9DrX,EAAAA,EAAAA,KAACyX,EAAS,CAAc3B,WAAYrR,EAAQsR,QAAS1V,EAAM2V,wBAAyBA,EAAyBC,UAAWc,GAAxGtS,GAEpB,IACX,GACJ,CA6DSiT,QAIb,ECrFA,EAxCoB,SAAHjY,GAAwB,IAADkI,EAAAC,EAAlB8B,EAAYjK,EAAZiK,aACd5B,GAAO/E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAIA,EAAM8E,IAAI,IACvChF,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAE1D8G,EAAkB,SAAHtJ,GAAsB,IAAjBmC,EAAInC,EAAJmC,KAAMjC,EAAKF,EAALE,MACxBqJ,EAAcC,SAAStJ,GAC7BkJ,EAAa,CAACjH,KAAAA,EAAMjC,MAAMqJ,GAC5B,EAEA,OACEhI,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBE,SAAA,EACjCH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BE,SAAC,sBAC3C0B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBE,SAAA,EACxC0B,EAAAA,EAAAA,MAAA,MAAA1B,SAAA,CAAI,8CAA0CH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UAClDH,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACftH,KAAK,eACLL,GAAG,4BACH4H,QAAQ,4JACR3H,KAAK,YACL4H,IAAK0N,EAAAA,GACLxN,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM8P,gBAAiBD,EAAAA,GAChCjV,WAAYkH,KAEd5J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAgB,CACftH,KAAK,eACLL,GAAG,iCACH4H,QAAQ,gIACR3H,KAAK,GACL4H,IAAK4N,EAAAA,GACL1N,SAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAM8P,gBAAiBC,EAAAA,GAChCnV,WAAYkH,IAEO,QAApBjC,EAAA7E,EAAcyF,cAAM,IAAAZ,GAApBA,EAAsBiQ,cAAc5X,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,UAC9D4D,EAAAA,EAAAA,GAAmC,QAArB6D,EAAC9E,EAAcyF,cAAM,IAAAX,OAAA,EAApBA,EAAsBgQ,gBAChC,UAIlB,E,UCLA,EA5BwB,SAAHnY,GAA4D,IAADqY,EAArDpO,EAAYjK,EAAZiK,aAAckI,EAAcnS,EAAdmS,eAAgBmG,EAAgBtY,EAAhBsY,iBAEjDjQ,GAAO/E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM8E,IAAI,IAE9C,OACEjG,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,UAASE,SAAA,EACpBH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBE,SAAC,gCACjCH,EAAAA,EAAAA,KAAA,MAAAG,UACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,0KAGRH,EAAAA,EAAAA,KAACgY,EAAqB,CAACtO,aAAcA,KAErC1J,EAAAA,EAAAA,KAACiY,EAAW,CAACvO,aAAcA,KAE3B1J,EAAAA,EAAAA,KAACkY,EAAgB,CAACxO,aAAcA,EAAckI,eAAgBA,KAE9D5R,EAAAA,EAAAA,KAACmY,EAAiB,CAACzO,aAAcA,KAIjC1J,EAAAA,EAAAA,KAACoY,EAAkB,CAACxG,eAAgBA,KAE/B,OAAJ9J,QAAI,IAAJA,GAAe,QAAXgQ,EAAJhQ,EAAMuQ,iBAAS,IAAAP,OAAX,EAAJA,EAAiB1U,QAAS,GAAGkV,EAAAA,EAAAA,IAAuB,OAAJxQ,QAAI,IAAJA,OAAI,EAAJA,EAAMuQ,UAAWN,GAAmB,OAG7F,C,yIClCanC,EAAmB,SAAHnW,GAA6H,IAAxHyF,EAAKzF,EAALyF,MAAOjB,EAAYxE,EAAZwE,aAAc0O,EAAelT,EAAfkT,gBAAiBC,EAAYnT,EAAZmT,aAAcV,EAAezS,EAAfyS,gBAAeqG,EAAA9Y,EAAEoW,kBAAAA,OAAiB,IAAA0C,EAAC,CAAC,EAACA,EAAAvX,EAAAvB,EAAEsS,oBAAAA,OAAmB,IAAA/Q,EAAC,GAAEA,EACzIwX,GAAQxB,EAAAA,EAAAA,GAAO/S,GAEjBiB,EAAMuT,MAAK,SAACrT,IACqD,IAA1DoT,EAASE,WAAU,SAACC,GAAC,OAAKA,EAAEvT,KAAK3C,OAAS2C,EAAK3C,IAAI,MAElDmQ,EAAaxN,GAAIqQ,EAAAA,EAAAA,GAAA,GAAMvD,IAAeuD,EAAAA,EAAAA,GAAA,GAAOI,IAC7C2C,EAASjD,MAAIE,EAAAA,EAAAA,GAAC,CACVrQ,KAAAA,EACAvB,OAAQ4C,EAAAA,GACRe,OAAQ,GACRnF,MAAIoT,EAAAA,EAAAA,GAAA,GAAMvD,MACa,OAAnBH,QAAmB,IAAnBA,IAAAA,EAAqB3O,WAAU2O,EAAoBnQ,SAASsQ,EAAgB1R,QAAU,CAACuG,cAAY0O,EAAAA,EAAAA,GAAA,GAAMI,OAIzH,IAEAlD,EAAgB6F,EACxB,EAEalE,EAAiB,SAAHhU,GAAmD,IAA9CqS,EAAerS,EAAfqS,gBAAiB/N,EAAQtE,EAARsE,SAAQgU,EAAAtY,EAAEiT,UAAAA,OAAS,IAAAqF,EAAC,CAAC,EAACA,EACnEjG,GAAgB,SAACkG,GACb,OAAOA,EAASzY,KAAI,SAACC,GACjB,OAAGA,EAAK+E,KAAK3C,OAASmC,GAClB6Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOpV,GACAkT,GAGJlT,CACX,GACJ,GACJ,EAEaqU,EAAqB,SAAHlP,GAAmD,IAA9CZ,EAAQY,EAARZ,SAAUX,EAAYuB,EAAZvB,aAAc0O,EAAenN,EAAfmN,gBAElDmG,GADQ9B,EAAAA,EAAAA,GAAO/S,GACQqD,QAAO,SAACjH,GACjC,OAAOA,EAAK+E,KAAK3C,OAASmC,CAC9B,IACA+N,GAAeqE,EAAAA,EAAAA,GAAK8B,GACxB,C","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Layout/CustomTextField.js","components/Forms/Layout/DocPlaceholder.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/PublicListedComp.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/OwnedListedComp.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/RegulatedComp.js","components/Forms/Sections/SectionE/SubSections/RegulatoryDetails.js","components/Forms/Sections/SectionE/RegistrationBodyInp.js","components/Forms/Sections/SectionE/NonAsicIdentNum.js","components/Forms/Sections/SectionE/SubSections/ForeignCompanyDetails.js","components/Forms/Sections/SectionE/SubSections/IdentificationDocs.js","components/Forms/Sections/SectionE/Directors.js","components/Forms/Sections/SectionE/MoreThanFourDirectors.js","components/Forms/Sections/SectionE/SubSections/DirectorsSection.js","components/Forms/Sections/SectionE/SubSections/CompanyType.js","components/Forms/Sections/SectionE/SectionEContent.js","utils/documentUploads/index.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst DropdownList = ({onSelectOption, dropdownOptions=[], addClass, renderLabel }) => {\r\n\r\n\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`}>\r\n        {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  } \r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList onSelectOption={onSelectOption} dropdownOptions={dropdownOptions} addClass={addClass} renderLabel={renderLabel}/>}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isArray } from '../../../utils/validations/helperFunc';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CustomTextField = ({ placeholder, id, label, type, asterisk, belowText, inputType, name, value, onChangeFn, formErrors={}, maxDate }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  const onChangeHandle = (e) =>{\r\n    const {name, value} = e.target;\r\n    onChangeFn({name, value}) \r\n  }\r\n\r\n  const renderErrors = () => {\r\n\r\n    \r\n\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        return renderErrorTxt(formErrors[name])\r\n      } else{\r\n        return renderErrorTxt([formErrors[name]])\r\n      }\r\n    }\r\n    return null\r\n\r\n    // return formErrors[name]? renderErrorTxt(formErrors[name]) : null\r\n  }\r\n\r\n  const isIncorrect = () => {\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        // return renderErrorTxt(formErrors[name])\r\n        return !!formErrors[name][0]?.length\r\n      } else{\r\n        return !!formErrors[name]?.length\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className={`form-input ${type? type : \"\"} ${isIncorrect()? 'incorrect':''}`}>\r\n        <label htmlFor={id}>{label} {asterisk !==\"\"? <span>*</span>: null}</label>\r\n        <input className=\"form-input-common\" type={inputType? inputType : \"text\"} placeholder={placeholder} id={id} required={asterisk !==\"\"? true: false} name={name} value={value || \"\"} onChange={onChangeHandle} disabled={!!invFormStatus.loader} max={maxDate || null}/>\r\n        \r\n        {belowText? <div className=\"input__desc\">\r\n          <p className=\"input__desc--p\">{belowText}</p>\r\n        </div>: null}\r\n\r\n        {renderErrors()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderOnConfirm } from '../../stylesheet/Loader';\r\nimport { LOADING , SUCCESS, FAILED } from '../../../constants';\r\n\r\nconst DocPlaceholder = ({uploadedDocs=[], onAddFiles, onClickRemove, onClickDel, multiple=true, accept=\"application/pdf, image/*\", uniqId}) => {\r\n\r\n  const allowedTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n\r\n  const manipulateUI = (e) => {\r\n    const chosenFiles = Array.prototype.slice.call(e.target.files) || []\r\n    const validFiles = chosenFiles.filter((file)=> allowedTypes.includes(file.type))\r\n\r\n    onAddFiles(validFiles);\r\n  }\r\n\r\n  const removeFileFromFileList = (fileName) => {\r\n    const dt = new DataTransfer();\r\n    const input = document.getElementById(`file-doc-in-${uniqId}`);\r\n    const { files } = input;\r\n    \r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (fileName !== file.name){\r\n        dt.items.add(file); // add the file back to input.\r\n      }\r\n    }\r\n    \r\n    input.files = dt.files // Assign the updates list\r\n  }\r\n\r\n  const onHandleClear = (fileName)=>{\r\n    onClickRemove(fileName);\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const onHandleDelete = ({fileName, fileData}) => {\r\n    onClickDel({fileName, docData: fileData})\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const renderDel = ({fileName, fileData}) => {\r\n    if(fileData?.delLoader) {\r\n      return <span style={{marginLeft:10}}> <LoaderOnConfirm /> </span>\r\n    }\r\n    return (<span\r\n              style={{marginLeft:10}}\r\n              onClick={()=>onHandleDelete({fileName, fileData})}\r\n            >\r\n              <FontAwesomeIcon className='docPreviewDelIcon' icon={faTrashAlt}/>\r\n            </span>)\r\n  }\r\n\r\n  const renderStatus = (status, fileName, fileData) => {\r\n    if(status === SUCCESS) {  //return success icon\r\n      return(\r\n        <>\r\n          <FontAwesomeIcon icon={faCheck}/>\r\n          {renderDel({fileName, fileData})}\r\n        </>\r\n      ) \r\n    }else if(status === FAILED) {\r\n      return <button className=\"link-button\" onClick={()=> onHandleClear(fileName)}>upload failed <FontAwesomeIcon icon={faTimes}/></button> //status is failed - user shall clear file from list & retry\r\n    }else if(status === LOADING){\r\n      return <LoaderOnConfirm /> //return loader icon\r\n    }\r\n  }\r\n\r\n  const renderFileLabel = (fileData) => {\r\n    \r\n    if(fileData?.type?.label && fileData?.extraDetails?.label){\r\n      return `(${fileData.type.label} - ${fileData?.extraDetails?.label})`\r\n    } else if(fileData?.type?.label){\r\n      return `(${fileData.type.label})`\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const mapUploadedDocs = () => {\r\n    return (\r\n      <div className=\"docPlaceholder__uploaded\">\r\n        {uploadedDocs.map((each)=> {\r\n          return (\r\n            <div className=\"docPlaceholder__uploaded--responses\" key={each.file.name}>\r\n              <a className=\"link-button\" target=\"_blank\" href={each?.docUrl? each?.docUrl: null} rel=\"noreferrer\">{each.file.name}</a><span className='uploaded-file-label'>{renderFileLabel(each)}</span>\r\n              <span style={{marginLeft:5}}>{renderStatus(each.loader, each.file.name, each)}</span>\r\n            </div>\r\n          )\r\n        })} \r\n      </div>\r\n    )\r\n  }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"docPlaceholder\">\r\n        <div className=\"docPlaceholder__container\">\r\n          <input type=\"file\" id={`file-doc-in-${uniqId}`} className={`docPlaceholder__container--input ${false? 'doc-opacity': ''}`} onChange={manipulateUI} multiple={multiple} accept={accept}/>\r\n          <label htmlFor={`file-doc-in-${uniqId}`} id=\"uploadDocLabel\" className=\"docPlaceholder__container--p\">Drag your documents here to start uploading</label>\r\n        </div>\r\n      </div>\r\n      {mapUploadedDocs()}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DocPlaceholder;","import React, { useEffect, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction PublicListedComp({ secE, onChangeFn }) {\r\n\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'public_company_market_name', value:''})\r\n            onChangeFn({name:'public_company_country', value:''})\r\n        }\r\n    },[]);\r\n\r\n    const countryValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.regulatory_detail?.public_company_country){\r\n              return  country.label?.toLowerCase() === secE?.regulatory_detail?.public_company_country.toLowerCase()\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeFn({ name: 'public_company_country', value: value.label })\r\n    }\r\n\r\n  return (\r\n    <div className=\"sub__form u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Name of market / exchange\"\r\n            id=\"sec-e-public-listed-name\"\r\n            label=\"Name of market / exchange\"\r\n            asterisk=\"*\"\r\n            name=\"public_company_market_name\"\r\n            value={secE.regulatory_detail?.public_company_market_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n\r\n        <div className=\"country__dropdown\">\r\n            <label>Country <span>*</span></label>\r\n            <Select\r\n                className={invFormStatus.errors?.public_company_country && 'incorrect'}\r\n                id=\"select-dropdown-country\"\r\n                name=\"public_company_country\"\r\n                autoFocus={false}\r\n                options={options}\r\n                placeholder=\"Select a Country\"\r\n                value={countryValue()}\r\n                onChange={onChangeSelectHandler}\r\n            />\r\n\r\n            {invFormStatus.errors?.public_company_country?\r\n            <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus.errors?.public_company_country)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PublicListedComp","import React, { useEffect, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction OwnedListedComp({ secE, onChangeFn }) {\r\n\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'majority_owned_listed_company_name', value:''})\r\n            onChangeFn({name:'majority_owned_name_of_market', value:''})\r\n            onChangeFn({name:'majority_owned_country', value:''})\r\n        }\r\n    },[]);\r\n\r\n    const countryValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.regulatory_detail?.majority_owned_country){\r\n              return  country.label?.toLowerCase() === secE?.regulatory_detail?.majority_owned_country.toLowerCase()\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeFn({ name: 'majority_owned_country', value: value.label })\r\n    }\r\n\r\n    return (\r\n    <div className=\"u-padding-y\">\r\n            <CustomTextField \r\n                placeholder=\"Listed company name\"\r\n                id=\"sec-e-major-listed-name\"\r\n                label=\"Listed company name\"\r\n                type=\"form-input-full-width\"\r\n                asterisk=\"*\"\r\n                name=\"majority_owned_listed_company_name\"\r\n                value={secE.regulatory_detail?.majority_owned_listed_company_name || \"\"}\r\n                onChangeFn={onChangeFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name of market / exchange\"\r\n                    id=\"sec-e-major-owned-name\"\r\n                    label=\"Name of market / exchange\"\r\n                    asterisk=\"*\"\r\n                    name=\"majority_owned_name_of_market\"\r\n                    value={secE.regulatory_detail?.majority_owned_name_of_market || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n\r\n                <div className=\"country__dropdown\">\r\n                    <label>Country <span>*</span></label>\r\n                    <Select\r\n                        className={invFormStatus.errors?.majority_owned_country && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"majority_owned_country\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {invFormStatus.errors?.majority_owned_country?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.majority_owned_country)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default OwnedListedComp","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction RegulatedComp({secE, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'regulator_name', value:''})\r\n            onChangeFn({name:'regulator_licence_details', value:''})\r\n        }\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"sub__form u-padding-y\">\r\n        <CustomTextField \r\n            placeholder=\"Regulator name\"\r\n            id=\"sec-e-regulator-name\"\r\n            label=\"Regulator name\"\r\n            asterisk=\"*\"\r\n            name=\"regulator_name\"\r\n            value={secE.regulatory_detail?.regulator_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n        <CustomTextField \r\n            placeholder=\"Licence details (e.g. AFSL, ACL, RSE)e\"\r\n            id=\"sec-e-regulator-licence\"\r\n            label=\"Licence details (e.g. AFSL, ACL, RSE)\"\r\n            asterisk=\"*\"\r\n            name=\"regulator_licence_details\"\r\n            value={secE.regulatory_detail?.regulator_licence_details || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegulatedComp","import { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport PublicListedComp from './subRegulatory/PublicListedComp';\r\nimport OwnedListedComp from './subRegulatory/OwnedListedComp';\r\nimport RegulatedComp from './subRegulatory/RegulatedComp';\r\nimport { COMPANY_IS_NOT_REGULATED_OR_LISTED_E, PUBLIC_LISTED_COMPANY_E, MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E, REGULATED_COMPANY_E } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst RegulatoryDetails = ({onFormChange}) => {\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeFn = ({name, value}) => {\r\n        onFormChange({name, value, level:\"regulatory_detail\"})\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"regulatory_detail\"});\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.4 Regulatory / Listing Details (All Companies To Complete)</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h6>Is the company regulated or listed?<span>*</span></h6>\r\n\r\n            <div className=\"\">\r\n                <CustomRadioInput\r\n                    name=\"is_company_regulated\"\r\n                    id=\"sec-e-company-not-regulated\"\r\n                    content=\"Company is not regulated or listed\"\r\n                    val={COMPANY_IS_NOT_REGULATED_OR_LISTED_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                    checked={secE.regulatory_detail?.is_company_regulated === COMPANY_IS_NOT_REGULATED_OR_LISTED_E}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_company_regulated\"\r\n                    id=\"sec-e-public-listed\"\r\n                    content=\"Public listed company\"\r\n                    val={PUBLIC_LISTED_COMPANY_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                    checked={secE.regulatory_detail?.is_company_regulated === PUBLIC_LISTED_COMPANY_E}\r\n                />\r\n\r\n                {/* public listed input fields  */}\r\n                {secE.regulatory_detail?.is_company_regulated === PUBLIC_LISTED_COMPANY_E? <PublicListedComp secE={secE} onChangeFn={onChangeFn}/>: null }\r\n\r\n                <CustomRadioInput\r\n                name=\"is_company_regulated\"\r\n                id=\"sec-e-major-owned-subsidiary\"\r\n                content=\"Majority-owned subsidiary of a listed company\"\r\n                val={MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E}\r\n                onChangeFn={onChangeRadioFn}\r\n                checked={secE.regulatory_detail?.is_company_regulated === MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E}\r\n                />\r\n\r\n                {/* major owned subsidiary inputs */}\r\n                {secE.regulatory_detail?.is_company_regulated === MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E? <OwnedListedComp secE={secE} onChangeFn={onChangeFn}/>: null }\r\n\r\n                <CustomRadioInput\r\n                name=\"is_company_regulated\"\r\n                id=\"sec-e-company-regulated\"\r\n                content=\"Regulated company - A company whose activities are subject to the oversight of a Commonwealth, State or Territory statutory regulator. In this context “Regulated” means subject to supervision beyond that provided by ASIC as a company registration body. For example, Australian Financial Services Licensee (AFSL), Australian Credit Licensee (ACL) or Registrable Superannuation Entity (RSE) Licensee\"\r\n                type=\"row-input\"\r\n                val={REGULATED_COMPANY_E}\r\n                onChangeFn={onChangeRadioFn}\r\n                checked={secE.regulatory_detail?.is_company_regulated === REGULATED_COMPANY_E}\r\n                />\r\n\r\n                {/* regulated company input fields */}\r\n                {secE.regulatory_detail?.is_company_regulated === REGULATED_COMPANY_E? <RegulatedComp secE={secE} onChangeFn={onChangeFn}/> : null }\r\n            </div>\r\n            {invFormStatus.errors?.is_company_regulated? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.is_company_regulated)}\r\n        </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegulatoryDetails;","import React, {useEffect} from 'react';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction RegistrationBodyInp({onChangeFn, secE, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"relevant_foreign_registration_body\", value:\"\"})    \r\n        }\r\n    },[])\r\n\r\n    const onChangeIn = (e) => {\r\n        const {name, value} = e.target;\r\n        onChangeFn({name, value})\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <input className=\"form-input-common\" type=\"text\" placeholder=\"Name of registration body\" id=\"sec-e-name-reg-body\" name=\"relevant_foreign_registration_body\" value={secE?.relevant_foreign_registration_body || \"\"} onChange={onChangeIn} />\r\n    {formErrors?.relevant_foreign_registration_body? <div className=\"input__desc\">\r\n        {renderErrorTxt(formErrors?.relevant_foreign_registration_body)}\r\n    </div>: null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegistrationBodyInp","import React,{useEffect}  from 'react'\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction NonAsicIdentNum({secE, onChangeFn, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"foreign_registration_body_identification\", value:\"\"})    \r\n        }\r\n    },[])\r\n\r\n    const onChangeIn = (e) => {\r\n        const {name, value} = e.target;\r\n        onChangeFn({name, value})\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"input__desc full-width\">\r\n            <p className=\"input__desc--p\">If Yes, please provide the company identification number (if any) that was issued by the relevant foreign body upon the company's formation, incorporation or regulation</p>\r\n        </div>\r\n        <div className=\"form-input form-input-full-width\">\r\n            <input className=\"form-input-common\" type=\"text\" placeholder=\"Company identification number\" id=\"sec-e-company-id\" name=\"foreign_registration_body_identification\" value={secE?.foreign_registration_body_identification || \"\"} onChange={onChangeIn}/>\r\n        </div>\r\n        {formErrors?.foreign_registration_body_identification? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.foreign_registration_body_identification)}\r\n        </div>: null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NonAsicIdentNum","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport RegistrationBodyInp from '../RegistrationBodyInp';\r\nimport NonAsicIdentNum from '../NonAsicIdentNum';\r\nimport { ADDRESS_TYPE_AUSTRALIAN_E, ADDRESS_TYPE_ASIC_REGISTERED_E, ADDRESS_TYPE_NON_ASIC_REGISTERED_E, YES_E, NO_E } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport countryList from 'react-select-country-list';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nconst ForeignCompanyDetails = ({ onFormChange }) => {\r\n\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const errMsgsAus = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n    }\r\n    const errMsgsAsic = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n    }\r\n    const errMsgsNonAsic = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const onChangeARBN = ({name, value}) =>{\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeFn({name, value:trimmedVal})\r\n    }\r\n\r\n    const onChangeAddress = ({name, value, addressType}) =>{\r\n        onFormChange({name, value, level:\"address_details\", address_type:addressType})\r\n    }\r\n\r\n    const getValueAddressType = (addressType, keyName) =>{\r\n        const address = secE.address_details.find((each)=> addressType===each?.address_type) || {};\r\n        const val = address[keyName] || \"\"\r\n        return val\r\n    }\r\n\r\n    const countryValue = (type) => {\r\n        \r\n        const findCountry = getValueAddressType(type, \"country\");\r\n\r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.1 Foreign Company Details</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <div>\r\n                <CustomTextField \r\n                    placeholder=\"Full name of the foreign company\"\r\n                    id=\"sec-e-fullname-fc\"\r\n                    label=\"Full name of the foreign company\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"full_name\"\r\n                    value={secE?.full_name}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Country of formation / incorporation / registration\"\r\n                    id=\"sec-e-country-of-formation\"\r\n                    label=\"Country of formation / incorporation / registration\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"country\"\r\n                    value={secE?.country}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n            </div>\r\n\r\n            {/* Complete this section if the company is registered with ASIC */}\r\n            <div>\r\n                <h5 className=\"u-padding-10y\">Complete this section if the company is registered with ASIC</h5>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"ARBN\"\r\n                        id=\"sec-e-arbn\"\r\n                        label=\"ARBN\"\r\n                        asterisk=\"\"\r\n                        name=\"arbn\"\r\n                        value={secE?.arbn}\r\n                        onChangeFn={onChangeARBN}\r\n                        formErrors={invFormStatus.errors}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Australian agent name\"\r\n                        id=\"sec-e-name-aus-agent\"\r\n                        label=\"Australian agent name (if applicable)\"\r\n                        asterisk=\"\"\r\n                        name=\"australian_agent_name\"\r\n                        value={secE?.australian_agent_name}\r\n                        onChangeFn={onChangeFn}\r\n                        formErrors={invFormStatus.errors}\r\n                    />\r\n                </div>\r\n                <div className=\"u-padding-10y\">\r\n                    <CustomTextField\r\n                        placeholder=\"Principal place of business in Australia or Australian agent address details\"\r\n                        id=\"sec-e-place-of-business\"\r\n                        label=\"Principal place of business in Australia or Australian agent address details (PO Box not permitted)\"\r\n                        asterisk=\"\"\r\n                        type=\"form-input-full-width\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-e-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-e-street-no\"\r\n                        label=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street name\"\r\n                        id=\"sec-e-street-name\"\r\n                        label=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField \r\n                        id=\"sec-e-suburb\"\r\n                        placeholder=\"Suburb/Town\"\r\n                        label=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-state\"\r\n                        placeholder=\"State\"\r\n                        label=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        label=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsAus?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_AUSTRALIAN_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_AUSTRALIAN_E })}\r\n                        />\r\n\r\n                        {errMsgsAus?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsAus?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                </div>\r\n                <div  className=\"u-padding-10y\">\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-office-address\"\r\n                        label=\"Registered office address\"\r\n                        placeholder=\"Registered office address\"\r\n                        asterisk=\"\"\r\n                        type=\"form-input-full-width\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        placeholder=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-street-no\"\r\n                        label=\"Street Number\"\r\n                        placeholder=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-street-name\"\r\n                        label=\"Street name\"\r\n                        placeholder=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-suburb\"\r\n                        label=\"Suburb/Town\"\r\n                        placeholder=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-state\"\r\n                        label=\"State\"\r\n                        placeholder=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-postcode\"\r\n                        label=\"Postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsAsic?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_ASIC_REGISTERED_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_ASIC_REGISTERED_E })}\r\n                        />\r\n\r\n                        {errMsgsAsic?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsAsic?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Is the company also registered with a relevant foreign registration body? */}\r\n            <div className=\"u-padding-10y\">\r\n                <h6>Is the company also registered with a relevant foreign registration body?</h6>\r\n                <div>\r\n                    <div className=\"form-input-radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"is_registered_with_relevant_foreign_registration_body\"\r\n                            id=\"sec-e-reg-foreign-body-yes\"\r\n                            value={YES_E}\r\n                            checked={secE?.is_registered_with_relevant_foreign_registration_body === YES_E}\r\n                            onChange={(e)=>onChangeRadioFn({name:e.target.name, value:e.target.value})}\r\n                        />\r\n                        <label htmlFor=\"sec-e-reg-foreign-body-yes\">Yes</label>\r\n                        {secE?.is_registered_with_relevant_foreign_registration_body === YES_E? <RegistrationBodyInp onChangeFn={onChangeFn} secE={secE} formErrors={invFormStatus.errors}/>: null}\r\n                    </div>\r\n                    <CustomRadioInput\r\n                        name=\"is_registered_with_relevant_foreign_registration_body\"\r\n                        id=\"sec-e-reg-foreign-body-no\"\r\n                        content=\"No\"\r\n                        val={NO_E}\r\n                        checked={secE?.is_registered_with_relevant_foreign_registration_body === NO_E}\r\n                        onChangeFn={onChangeRadioFn}\r\n                    />\r\n                    {invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body)}\r\n                    </div>: null} \r\n                </div>\r\n            </div>\r\n\r\n            {/* Complete this section if the company is NOT registered with ASIC */}\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-y\">Complete this section if the company is NOT registered with ASIC</h5>\r\n\r\n                <div className=\"u-margin-bottom\">\r\n                    <h6>Is the company registered with a relevant foreign registration body?</h6>\r\n\r\n                    <div className=\"form-input-radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"is_registered_with_relevant_foreign_registration_body_no_asic\"\r\n                            id=\"sec-e-not-asic-foreign-yes\"\r\n                            value={YES_E}\r\n                            checked={secE?.is_registered_with_relevant_foreign_registration_body_no_asic === YES_E}\r\n                            onChange={(e)=>onChangeRadioFn({name:e.target.name, value:e.target.value})}\r\n                            // onChange={(e)=>onChangeRadioFn({name:\"is_registered_with_relevant_foreign_registration_body\", value:e.target.value})}\r\n                        />\r\n                        <label htmlFor=\"sec-e-not-asic-foreign-yes\">Yes</label>\r\n\r\n                        {secE?.is_registered_with_relevant_foreign_registration_body_no_asic === YES_E? <NonAsicIdentNum secE={secE} onChangeFn={onChangeFn} formErrors={invFormStatus.errors}/>: null}\r\n                    </div>\r\n\r\n                    <CustomRadioInput\r\n                        name=\"is_registered_with_relevant_foreign_registration_body_no_asic\"\r\n                        id=\"sec-e-not-asic-foreign-no\"\r\n                        content=\"No\"\r\n                        val={NO_E}\r\n                        checked={secE?.is_registered_with_relevant_foreign_registration_body_no_asic === NO_E}\r\n                        onChangeFn={onChangeRadioFn}\r\n                        // onChangeFn={({name, value})=>onChangeRadioFn({name:\"is_registered_with_relevant_foreign_registration_body\", value})}\r\n                    />\r\n                    {invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body_no_asic? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body_no_asic)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                <div className=\"u-padding-y\">\r\n                    <CustomTextField\r\n                        placeholder=\"Full address of the company as registered by the foreign registration body\"\r\n                        id=\"sec-e-full-address-not-asic\"\r\n                        label=\"Full address of the company in the country of formation, incorporation or registration as registered by the foreign registration body (PO Box not permitted)\"\r\n                        type=\"form-input-full-width\"\r\n                        asterisk=\"\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                        />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-e-unit-not-asic\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-e-street-no-not-asic\"\r\n                        label=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street name\"\r\n                        id=\"sec-e-street-not-asic\"\r\n                        label=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Suburb/Town\"\r\n                        id=\"sec-e-suburb-not-asic\"\r\n                        label=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"State\"\r\n                        id=\"sec-e-state-not-asic\"\r\n                        label=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Postcode\"\r\n                        id=\"sec-e-postcode-not-asic\"\r\n                        label=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsNonAsic?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_NON_ASIC_REGISTERED_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_NON_ASIC_REGISTERED_E })}\r\n                        />\r\n\r\n                        {errMsgsNonAsic?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsNonAsic?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForeignCompanyDetails;","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport DocPlaceholder from '../../../Layout/DocPlaceholder';\r\nimport { uploadFiles, deleteFile } from '../../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { LOADING, SUCCESS, FAILED, IDENTIFICATION_DOCUMENTS_SEC_E, ASIC_EXTRACT_DOC, COMPANY_OR_FOREIGN_BODY_EXTRACT, SEC_E_DOC_EXTRA_LABEL_MAIN } from '../../../../../constants';\r\nimport CustomDropdown from '../../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../../utils/documentUploads';\r\nimport { useToast } from '../../../../CustomToast';\r\n\r\nconst IdentificationDocs = ({investorFormId}) => {\r\n    const dummyFn = () => {}\r\n    const toast = useToast();\r\n    const doNotShowExtraLabel = [ASIC_EXTRACT_DOC[0][0], COMPANY_OR_FOREIGN_BODY_EXTRACT[0][0]]\r\n    \r\n    const secE = useSelector((store) => store.secE);\r\n    const [selectedDocType, setSelectedDocType] = useState({label:\"Select type of document\", value:\"\"})\r\n    const [selectedDirectorNum, setSelectedDirectorNum] = useState({label:`${SEC_E_DOC_EXTRA_LABEL_MAIN} - 1`, value:1})\r\n    const [uploadedDocs, setUploadedDocs] = useState([])\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}, extraDetails={label:'', value:''}) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name\r\n            const metadata = JSON.stringify([{\"owner\":`${SEC_E_DOC_EXTRA_LABEL_MAIN} ${extraDetails.value}`}])\r\n\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            if(!doNotShowExtraLabel.includes(type.value)){\r\n                formData.append(\"metadata\", metadata)\r\n            }\r\n            formData.append('section', 'e');\r\n            formData.append('investor_form_id', investorFormId);\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            doNotShowExtraLabel,\r\n            selectedDocType:{...selectedDocType},\r\n            selectedEntityNum:{...selectedDirectorNum},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const updateSelectedOption = (option) => {\r\n        //update selected document type to the state\r\n        setSelectedDocType({...option})\r\n    }\r\n\r\n    const updateSelectedDirectorNum = (option) => {\r\n        setSelectedDirectorNum({...option})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n    const inestorOptions = () => {\r\n        const tempOptionsArr = [];\r\n        const tempNoOfDirectors = secE?.number_of_directors === -1? 4 : secE?.number_of_directors || 1\r\n        for (let i = 1; i <= tempNoOfDirectors; i++) {\r\n            tempOptionsArr.push([i, `${SEC_E_DOC_EXTRA_LABEL_MAIN} - ${i}`])\r\n        }\r\n        return tempOptionsArr\r\n    }\r\n\r\nreturn (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.5 Identification Documents</h4>\r\n\r\n        {/* Registered with ASIC */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is registered with ASIC</h5>\r\n\r\n            <div>\r\n                <h6>Please provide a copy of ONE of the following documents.</h6>\r\n                <ul>\r\n                    <li>Full ASIC company extract (if company is registered in Australia)</li>\r\n                    <li>Full company extract from relevant registration body</li>\r\n                    <li>If the ASIC or foreign registration body database is not reasonably available, an original certified copy of the certificate of registration issued by ASIC or the relevant registration body</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        {/* NOT Registered with ASIC */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is NOT registered with ASIC</h5>\r\n\r\n            <div>\r\n                <h6>Please provide a copy of ONE of the following documents.</h6>\r\n                <ul>\r\n                    <li>Full company extract from relevant registration body</li>\r\n                    <li>If the foreign registration body database is not reasonably available, an original certified copy of the certificate of registration issued by the relevant registration body</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        {/* majority subsidiary */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is regulated, listed or a majority subsidiary of an Australian listed company</h5>\r\n\r\n            <div className=\"u-margin-bottom\">\r\n                <h6>Please provide a copy of ONE of the following documents</h6>\r\n                <ul>\r\n                    <li>Full ASIC company extract</li>\r\n                    <li>Full company extract from relevant financial market</li>\r\n                    <li>Evidence of the company's full name from the relevant Commonwealth, State or Territory statutory regulator</li>\r\n                    <li>A public document issued by the company</li>\r\n                </ul>\r\n            </div>\r\n            \r\n            <div className=\"note__box u-padding-y\">\r\n                <p className=\"note__box--p\">*Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator.\r\n    If you are unable to provide one of the above documents, please contact SS&amp;C on 02 8115 9924 or ISTradedesk@sscinc.com</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h5>For each Beneficial Owner (as defined in Page 19)</h5>\r\n            \r\n            {/* Copy of ONE beneficial owner */}\r\n            <div className=\"u-padding-y\">\r\n                <h6>1. Provide an ORIGINAL CERTIFIED COPY of ONE of the following documents for each Beneficial Owner:</h6>\r\n                <ul>\r\n                    <li>Australian State / Territory driver's licence containing a photograph of the person</li>\r\n                    <li>Australian passport (a passport that has expired within the preceding 2 years is acceptable)</li>\r\n                    <li>Card issued under a State or Territory for the purpose of proving a person's age containing a photograph of the person</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"divider-or u-margin-bottom\"></div>\r\n\r\n            {/* Copy of TWO beneficial owner */}\r\n            <div className=\"u-padding-10y\">\r\n                <h6>2. Provide an ORIGINAL CERTIFIED COPY of TWO of the following documents for each Beneficial Owner:</h6>\r\n                <ul>\r\n                    <li>Foreign passport or similar travel document containing a photograph and the signature of the person*</li>\r\n                    <li>Foreign driver's licence that contains a photograph of the person in whose name the document is issued*</li>\r\n                    <li>National ID card issued by a foreign government containing a photograph and a signature of the person in whose name the card was issued*</li>\r\n                </ul>\r\n                <div className=\"note__box u-padding-10y\">\r\n                    <p className=\"note__box--p\">*Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator. If you are unable to provide one of the above documents, please contact SS&amp;C on 02 8115 9924 or ISTradedesk@ sscinc.com</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h6 className=\"u-margin-bottom u-padding-y\">Please attach documents</h6>\r\n                <div className=\"sub__form\" style={{gap:16}}>\r\n                    <div style={{minWidth: 350}}>\r\n                        <CustomDropdown \r\n                            dropdownOptions={inestorOptions()}\r\n                            selectedOption={selectedDirectorNum}\r\n                            updateSelectedOption={updateSelectedDirectorNum}\r\n                        />\r\n                    </div>\r\n                    <div style={{minWidth: 375}}>\r\n                        <CustomDropdown\r\n                            addClass='control-dropdown-height'\r\n                            dropdownOptions={IDENTIFICATION_DOCUMENTS_SEC_E}\r\n                            selectedOption={selectedDocType}\r\n                            updateSelectedOption={updateSelectedOption}\r\n                            extraLabel={`(${SEC_E_DOC_EXTRA_LABEL_MAIN} - ${selectedDirectorNum?.value})`}\r\n                            doNotShowExtraLabelSpecial={doNotShowExtraLabel}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {selectedDocType?.value ?\r\n                    <div className='u-padding-y'>\r\n                        <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"identificationdocs_e\"/>\r\n                    </div>: null\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IdentificationDocs;","import { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst Directors = ({ directorId, details, onChangeDirectorDetails, itemIndex }) => {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgs = {\r\n        given_name : invFormStatus.errors?.given_name? invFormStatus.errors?.given_name[itemIndex]: [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[itemIndex]: [],\r\n        middle_name : invFormStatus.errors?.middle_name? invFormStatus.errors?.middle_name[itemIndex]: [],\r\n    }\r\n    \r\n    const onChangeFn = ({name, value}) => {\r\n        onChangeDirectorDetails({name, value, directorId})\r\n    }\r\n\r\n    return (\r\n    <div key={directorId}>\r\n        <h6 className=\"u-padding-10y\">{`Director ${itemIndex+1}`}</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-e-director${directorId}-given-name`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"given_name\"\r\n                    value={details?.given_name || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={errMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Surname\"\r\n                    id={`sec-e-director${directorId}-surname`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    value={details?.surname || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={errMsgs}\r\n                /> \r\n            </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Directors;","import React, { useState } from 'react';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, MORE_THAN_FOUR_DIRECTORS_SEC_D_E } from '../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst MoreThanFourDirectors = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const docTypeValue = {label:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][1], value:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][0]}\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) => {\r\n        if(file){ //files && files.length -- to make it work for multiple files\r\n            //call api to upload files\r\n            const fileName = file.name;\r\n            const formData = new FormData();\r\n\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            formData.append('section', 'e');\r\n            formData.append('investor_form_id', investorFormId);\r\n\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...docTypeValue},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <DocPlaceholder\r\n            onAddFiles={onAddFiles}\r\n            uploadedDocs={uploadedDocs}\r\n            onClickRemove={onClickRemove}\r\n            uniqId=\"moredirectors\"\r\n            onClickDel={onClickDel}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoreThanFourDirectors;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport Directors from '../Directors';\r\nimport { singleDirectorDetail } from '../../../../../reducers/Investor-Application-Form/secEReducer';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport MoreThanFourDirectors from '../MoreThanFourDirectors';\r\nimport { NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E } from '../../../../../constants';\r\n\r\nconst DirectorsSection = ({ onFormChange, investorFormId }) => {\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const addDirectorDetails = (noOfDirectors) => {\r\n        let upd = []\r\n        const prevDirLen = secE?.directors_details?.length || 0\r\n        if(prevDirLen > noOfDirectors){\r\n            upd = secE?.directors_details?.filter((each, index)=> (index+1)<=noOfDirectors);\r\n            onFormChange({name:\"directors_details\", value:[...upd]});\r\n            return\r\n        } else if(prevDirLen === noOfDirectors) {\r\n            return\r\n        } else {\r\n            const newLen = noOfDirectors-prevDirLen\r\n            upd = [...secE?.directors_details]\r\n            const newArr = Array.from({length:newLen}, ()=>({...singleDirectorDetail}))\r\n            onFormChange({name:\"directors_details\", value:[...upd, ...newArr]})\r\n            return\r\n        }\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({\r\n            name,\r\n            value: convrtToNum\r\n        });\r\n\r\n        if(convrtToNum > 0){\r\n            //update no.of directors\r\n            addDirectorDetails(convrtToNum);\r\n        }\r\n        else if(convrtToNum === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E){\r\n            addDirectorDetails(0);\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeDirectorDetails = ({directorId, name, value}) => {\r\n        const updIndex = directorId - 1;\r\n        const upd = [...secE?.directors_details];\r\n        upd[updIndex][name] = value\r\n        onFormChange({name:\"directors_details\", value:[...upd]});\r\n        return\r\n    }\r\n\r\n    const renderDirectors = () => {\r\n        return secE?.directors_details?.map((each, index)=> {\r\n            const tempId = index+1\r\n            const uniqId = tempId //each?.id || tempId\r\n            if((index < secE?.number_of_directors) && (secE?.number_of_directors !== NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E)){ //phase1 fix. remove this condition in phase-2\r\n                return <Directors key={uniqId} directorId={uniqId} details={each} onChangeDirectorDetails={onChangeDirectorDetails} itemIndex={index}/>\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.3 Directors (Proprietary Companies Only)</h4>\r\n        <div className=\"section__container--box\">\r\n            <h6>How many directors are there?<span>*</span></h6>\r\n            <div className=\"u-margin-bottom row-space-between\">\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-1\"\r\n                    content=\"1\"\r\n                    val=\"1\"\r\n                    checked={secE?.number_of_directors === 1}\r\n                    onChangeFn={onChangeRadioFn}            \r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-2\"\r\n                    content=\"2\"\r\n                    val=\"2\"\r\n                    checked={secE?.number_of_directors === 2}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-3\"\r\n                    content=\"3\"\r\n                    val=\"3\"\r\n                    checked={secE?.number_of_directors === 3}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-4\"\r\n                    content=\"4\"\r\n                    val=\"4\"\r\n                    checked={secE?.number_of_directors === 4}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-5\"\r\n                    content=\"more than 4\" \r\n                    val={`${NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}`}\r\n                    checked={secE?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n            </div>\r\n            <React.Fragment>\r\n                {invFormStatus.errors?.number_of_directors? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.number_of_directors)}\r\n                    </div>: null}\r\n\r\n                    {secE?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E?\r\n                        <>\r\n                            <h6 className=\"u-padding-y\">If there are more directors, please provide details on separate sheet and upload</h6>\r\n                            <MoreThanFourDirectors investorFormId={investorFormId}/>\r\n                        </>\r\n                    : null}\r\n            </React.Fragment>\r\n            {renderDirectors()}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DirectorsSection;","import { useSelector } from 'react-redux';\r\nimport { COMPANY_TYPE_PUBLIC_E, COMPANY_TYPE_PROPRIETARY_E } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CompanyType = ({onFormChange}) => {\r\n  const secE = useSelector((store)=> store.secE);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const onChangeRadioFn = ({name, value}) =>{ \r\n    const convrtToNum = parseInt(value);\r\n    onFormChange({name, value:convrtToNum});\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">E.2 Company Type</h4>\r\n        <div className=\"section__container--box\">\r\n        <h6>Is the company type public or proprietary?<span>*</span></h6>\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-e-company-type-public\"\r\n            content=\"Public (companies whose name does NOT include the words “Pty Ltd” or “Proprietary Ltd”; generally listed companies) Go to Section E.4\"\r\n            type=\"row-input\"\r\n            val={COMPANY_TYPE_PUBLIC_E}\r\n            checked={secE?.company_type === COMPANY_TYPE_PUBLIC_E}\r\n            onChangeFn={onChangeRadioFn}\r\n          />\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-e-company-type-proprietary\"\r\n            content=\"Proprietary (companies whose name ends with “Proprietary Ltd” or “Pty Ltd”; also known as private company\"\r\n            type=\"\"\r\n            val={COMPANY_TYPE_PROPRIETARY_E}\r\n            checked={secE?.company_type === COMPANY_TYPE_PROPRIETARY_E}\r\n            onChangeFn={onChangeRadioFn}\r\n          />\r\n          {invFormStatus.errors?.company_type? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.company_type)}\r\n          </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyType;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TaxInformation from './SubSections/TaxInformation';\r\nimport RegulatoryDetails from './SubSections/RegulatoryDetails';\r\nimport ForeignCompanyDetails from './SubSections/ForeignCompanyDetails';\r\nimport IdentificationDocs from './SubSections/IdentificationDocs';\r\nimport DirectorsSection from './SubSections/DirectorsSection';\r\nimport CompanyType from './SubSections/CompanyType';\r\nimport {formatAndPrintDocs} from '../../../../utils/validations/helperFunc';\r\n\r\nconst SectionEContent = ({ onFormChange, investorFormId, removeDocFromArr }) => {\r\n\r\n  const secE = useSelector((store) => store.secE);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n        <h2 className=\"section__heading\">Section E: Foreign Company</h2>\r\n        <ul>\r\n            <li>Section E is to be completed by foreign companies. Please complete Section D for Australian companies. Please use BLOCK letters to complete this Application Form.</li>\r\n        </ul>\r\n\r\n        <ForeignCompanyDetails onFormChange={onFormChange}/>\r\n\r\n        <CompanyType onFormChange={onFormChange}/>\r\n\r\n        <DirectorsSection onFormChange={onFormChange} investorFormId={investorFormId} />\r\n\r\n        <RegulatoryDetails onFormChange={onFormChange}/>\r\n\r\n        {/* <TaxInformation /> */}\r\n\r\n        <IdentificationDocs investorFormId={investorFormId}/>\r\n\r\n        {secE?.documents?.length > 0? formatAndPrintDocs(secE?.documents, removeDocFromArr): null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionEContent;","import { LOADING } from \"../../constants\";\r\n\r\nexport const addNewDocToArray = ({files, uploadedDocs, setUploadedDocs, onUploadFile, selectedDocType, selectedEntityNum={}, doNotShowExtraLabel=[]}) => {\r\n    const uploaded = [...uploadedDocs];\r\n        \r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f) => f.file.name === file.name) === -1){\r\n                //call upload file --\r\n                onUploadFile(file, {...selectedDocType}, {...selectedEntityNum});\r\n                uploaded.push({ \r\n                    file,\r\n                    loader: LOADING,\r\n                    docUrl: \"\",\r\n                    type: {...selectedDocType},\r\n                    ...(doNotShowExtraLabel?.length ? !doNotShowExtraLabel.includes(selectedDocType.value) && {extraDetails: {...selectedEntityNum}} : false), //add extra details if array exists and value is not from array\r\n                });\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        \r\n        setUploadedDocs(uploaded);\r\n}\r\n\r\nexport const updateDocArray = ({setUploadedDocs, fileName, extradata={}}) => {\r\n    setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n        return prevDocs.map((each)=>{\r\n            if(each.file.name === fileName){ \r\n                return {\r\n                    ...each,\r\n                    ...extradata\r\n                }\r\n            }\r\n            return each\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeDocFromArray = ({fileName, uploadedDocs, setUploadedDocs}) => { \r\n    const allFiles = [...uploadedDocs];\r\n    const newSetFiles = allFiles.filter((each)=>{\r\n        return each.file.name !== fileName;\r\n    });\r\n    setUploadedDocs([...newSetFiles]);\r\n}"],"names":["_ref","optionsList","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","_jsx","className","concat","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","onClickVisible","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","placeholder","id","type","asterisk","belowText","inputType","name","onChangeFn","_ref$formErrors","formErrors","maxDate","invFormStatus","useSelector","store","_formErrors$name$","_formErrors$name","isArray","length","isIncorrect","htmlFor","required","onChange","e","_e$target","target","disabled","loader","max","renderErrorTxt","_ref$uploadedDocs","uploadedDocs","onAddFiles","onClickRemove","onClickDel","_ref$multiple","multiple","_ref$accept","accept","uniqId","allowedTypes","removeFileFromFileList","fileName","dt","DataTransfer","input","document","getElementById","files","i","file","items","add","renderDel","_ref3","fileData","delLoader","style","marginLeft","LoaderOnConfirm","docData","onHandleDelete","faTrashAlt","renderStatus","status","SUCCESS","_Fragment","faCheck","FAILED","onHandleClear","faTimes","LOADING","renderFileLabel","_fileData$type","_fileData$extraDetail","_fileData$type2","_fileData$extraDetail2","extraDetails","React","validFiles","Array","prototype","slice","call","filter","href","docUrl","rel","_secE$regulatory_deta3","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","secE","options","useMemo","countryList","getData","useEffect","CustomTextField","regulatory_detail","public_company_market_name","errors","Select","public_company_country","autoFocus","find","country","_secE$regulatory_deta","_country$label","_secE$regulatory_deta2","toLowerCase","_secE$regulatory_deta4","majority_owned_listed_company_name","majority_owned_name_of_market","majority_owned_country","regulator_name","regulator_licence_details","_secE$regulatory_deta5","_secE$regulatory_deta6","_secE$regulatory_deta7","onFormChange","level","onChangeRadioFn","convrtToNum","parseInt","CustomRadioInput","content","val","COMPANY_IS_NOT_REGULATED_OR_LISTED_E","checked","is_company_regulated","PUBLIC_LISTED_COMPANY_E","PublicListedComp","MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E","OwnedListedComp","REGULATED_COMPANY_E","RegulatedComp","relevant_foreign_registration_body","foreign_registration_body_identification","_invFormStatus$errors4","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_invFormStatus$errors17","_invFormStatus$errors18","_invFormStatus$errors19","_invFormStatus$errors20","_invFormStatus$errors21","_invFormStatus$errors22","_invFormStatus$errors23","_invFormStatus$errors24","_invFormStatus$errors25","_invFormStatus$errors26","_invFormStatus$errors27","_invFormStatus$errors28","_invFormStatus$errors29","_invFormStatus$errors30","_invFormStatus$errors31","_invFormStatus$errors32","_invFormStatus$errors33","_invFormStatus$errors34","_invFormStatus$errors35","_invFormStatus$errors36","_invFormStatus$errors37","_invFormStatus$errors38","_invFormStatus$errors39","_invFormStatus$errors40","_invFormStatus$errors41","_invFormStatus$errors42","_invFormStatus$errors43","_invFormStatus$errors44","_invFormStatus$errors45","_invFormStatus$errors46","_invFormStatus$errors47","_invFormStatus$errors48","_errMsgsAus$countrySu","_errMsgsAus$countrySu2","_errMsgsAsic$countryS","_errMsgsAsic$countryS2","_invFormStatus$errors49","_invFormStatus$errors50","_invFormStatus$errors51","_invFormStatus$errors52","_errMsgsNonAsic$count","_errMsgsNonAsic$count2","errMsgsAus","full_company_address","ADDRESS_TYPE_AUSTRALIAN_E","unit_no","street_no","street_name","suburb","state","postcode","countrySub","errMsgsAsic","ADDRESS_TYPE_ASIC_REGISTERED_E","errMsgsNonAsic","ADDRESS_TYPE_NON_ASIC_REGISTERED_E","onChangeAddress","_ref5","addressType","address_type","getValueAddressType","keyName","address_details","countryValue","findCountry","full_name","arbn","_ref4","trimmedVal","replaceAllWhiteSpaces","australian_agent_name","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","YES_E","is_registered_with_relevant_foreign_registration_body","RegistrationBodyInp","NO_E","is_registered_with_relevant_foreign_registration_body_no_asic","NonAsicIdentNum","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","investorFormId","toast","useToast","doNotShowExtraLabel","ASIC_EXTRACT_DOC","COMPANY_OR_FOREIGN_BODY_EXTRACT","selectedDocType","setSelectedDocType","_useState3","SEC_E_DOC_EXTRA_LABEL_MAIN","_useState4","selectedDirectorNum","setSelectedDirectorNum","_useState5","_useState6","setUploadedDocs","onUploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","metadata","formData","_yield$uploadFiles","success","url","data","extradata","_args","arguments","wrap","_context","prev","next","undefined","JSON","stringify","FormData","append","uploadFiles","sent","resData","updateDocArray","stop","_x","apply","removeDocFromArray","_callee2","_yield$deleteFile","_context2","deleteFile","error","_x2","gap","minWidth","CustomDropdown","tempOptionsArr","tempNoOfDirectors","number_of_directors","push","inestorOptions","_objectSpread","IDENTIFICATION_DOCUMENTS_SEC_E","DocPlaceholder","addNewDocToArray","selectedEntityNum","directorId","details","onChangeDirectorDetails","itemIndex","errMsgs","given_name","surname","middle_name","docTypeValue","MORE_THAN_FOUR_DIRECTORS_SEC_D_E","addDirectorDetails","noOfDirectors","_secE$directors_detai","_secE$directors_detai2","upd","prevDirLen","directors_details","index","_toConsumableArray","newLen","newArr","from","singleDirectorDetail","NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E","updIndex","MoreThanFourDirectors","_secE$directors_detai3","Directors","renderDirectors","COMPANY_TYPE_PUBLIC_E","company_type","COMPANY_TYPE_PROPRIETARY_E","_secE$documents","removeDocFromArr","ForeignCompanyDetails","CompanyType","DirectorsSection","RegulatoryDetails","IdentificationDocs","documents","formatAndPrintDocs","_ref$selectedEntityNu","uploaded","some","findIndex","f","_ref2$extradata","prevDocs","newSetFiles"],"sourceRoot":""}