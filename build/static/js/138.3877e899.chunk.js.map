{"version":3,"file":"static/js/138.3877e899.chunk.js","mappings":"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","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/PublicListedComp.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/OwnedListedComp.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/RegulatedComp.js","components/Forms/Sections/SectionE/SubSections/RegulatoryDetails.js","components/Forms/Sections/SectionE/RegistrationBodyInp.js","components/Forms/Sections/SectionE/NonAsicIdentNum.js","components/Forms/Sections/SectionE/SubSections/ForeignCompanyDetails.js","components/Forms/Sections/SectionE/SubSections/IdentificationDocs.js","components/Forms/Sections/SectionE/Directors.js","components/Forms/Sections/SectionE/MoreThanFourDirectors.js","components/Forms/Sections/SectionE/SubSections/DirectorsSection.js","components/Forms/Sections/SectionE/SubSections/CompanyType.js","components/Forms/Sections/SectionE/SectionEContent.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst DropdownList = ({onSelectOption, dropdownOptions=[], addClass, renderLabel }) => {\r\n\r\n\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`}>\r\n        {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  } \r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList onSelectOption={onSelectOption} dropdownOptions={dropdownOptions} addClass={addClass} renderLabel={renderLabel}/>}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React, { useEffect, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction PublicListedComp({ secE, onChangeFn }) {\r\n\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'public_company_market_name', value:''})\r\n            onChangeFn({name:'public_company_country', value:''})\r\n        }\r\n    },[]);\r\n\r\n    const countryValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.regulatory_detail?.public_company_country){\r\n              return  country.label?.toLowerCase() === secE?.regulatory_detail?.public_company_country.toLowerCase()\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeFn({ name: 'public_company_country', value: value.label })\r\n    }\r\n\r\n  return (\r\n    <div className=\"sub__form u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Name of market / exchange\"\r\n            id=\"sec-e-public-listed-name\"\r\n            label=\"Name of market / exchange\"\r\n            asterisk=\"*\"\r\n            name=\"public_company_market_name\"\r\n            value={secE.regulatory_detail?.public_company_market_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n\r\n        <div className=\"country__dropdown\">\r\n            <label>Country <span>*</span></label>\r\n            <Select\r\n                className={invFormStatus.errors?.public_company_country && 'incorrect'}\r\n                id=\"select-dropdown-country\"\r\n                name=\"public_company_country\"\r\n                autoFocus={false}\r\n                options={options}\r\n                placeholder=\"Select a Country\"\r\n                value={countryValue()}\r\n                onChange={onChangeSelectHandler}\r\n            />\r\n\r\n            {invFormStatus.errors?.public_company_country?\r\n            <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus.errors?.public_company_country)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PublicListedComp","import React, { useEffect, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction OwnedListedComp({ secE, onChangeFn }) {\r\n\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'majority_owned_listed_company_name', value:''})\r\n            onChangeFn({name:'majority_owned_name_of_market', value:''})\r\n            onChangeFn({name:'majority_owned_country', value:''})\r\n        }\r\n    },[]);\r\n\r\n    const countryValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.regulatory_detail?.majority_owned_country){\r\n              return  country.label?.toLowerCase() === secE?.regulatory_detail?.majority_owned_country.toLowerCase()\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeFn({ name: 'majority_owned_country', value: value.label })\r\n    }\r\n\r\n    return (\r\n    <div className=\"u-padding-y\">\r\n            <CustomTextField \r\n                placeholder=\"Listed company name\"\r\n                id=\"sec-e-major-listed-name\"\r\n                label=\"Listed company name\"\r\n                type=\"form-input-full-width\"\r\n                asterisk=\"*\"\r\n                name=\"majority_owned_listed_company_name\"\r\n                value={secE.regulatory_detail?.majority_owned_listed_company_name || \"\"}\r\n                onChangeFn={onChangeFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name of market / exchange\"\r\n                    id=\"sec-e-major-owned-name\"\r\n                    label=\"Name of market / exchange\"\r\n                    asterisk=\"*\"\r\n                    name=\"majority_owned_name_of_market\"\r\n                    value={secE.regulatory_detail?.majority_owned_name_of_market || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n\r\n                <div className=\"country__dropdown\">\r\n                    <label>Country <span>*</span></label>\r\n                    <Select\r\n                        className={invFormStatus.errors?.majority_owned_country && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"majority_owned_country\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {invFormStatus.errors?.majority_owned_country?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.majority_owned_country)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default OwnedListedComp","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction RegulatedComp({secE, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'regulator_name', value:''})\r\n            onChangeFn({name:'regulator_licence_details', value:''})\r\n        }\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"sub__form u-padding-y\">\r\n        <CustomTextField \r\n            placeholder=\"Regulator name\"\r\n            id=\"sec-e-regulator-name\"\r\n            label=\"Regulator name\"\r\n            asterisk=\"*\"\r\n            name=\"regulator_name\"\r\n            value={secE.regulatory_detail?.regulator_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n        <CustomTextField \r\n            placeholder=\"Licence details (e.g. AFSL, ACL, RSE)e\"\r\n            id=\"sec-e-regulator-licence\"\r\n            label=\"Licence details (e.g. AFSL, ACL, RSE)\"\r\n            asterisk=\"*\"\r\n            name=\"regulator_licence_details\"\r\n            value={secE.regulatory_detail?.regulator_licence_details || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegulatedComp","import { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport PublicListedComp from './subRegulatory/PublicListedComp';\r\nimport OwnedListedComp from './subRegulatory/OwnedListedComp';\r\nimport RegulatedComp from './subRegulatory/RegulatedComp';\r\nimport { COMPANY_IS_NOT_REGULATED_OR_LISTED_E, PUBLIC_LISTED_COMPANY_E, MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E, REGULATED_COMPANY_E } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst RegulatoryDetails = ({onFormChange}) => {\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeFn = ({name, value}) => {\r\n        onFormChange({name, value, level:\"regulatory_detail\"})\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"regulatory_detail\"});\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.4 Regulatory / Listing Details (All Companies To Complete)</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h6>Is the company regulated or listed?<span>*</span></h6>\r\n\r\n            <div className=\"\">\r\n                <CustomRadioInput\r\n                    name=\"is_company_regulated\"\r\n                    id=\"sec-e-company-not-regulated\"\r\n                    content=\"Company is not regulated or listed\"\r\n                    val={COMPANY_IS_NOT_REGULATED_OR_LISTED_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                    checked={secE.regulatory_detail?.is_company_regulated === COMPANY_IS_NOT_REGULATED_OR_LISTED_E}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_company_regulated\"\r\n                    id=\"sec-e-public-listed\"\r\n                    content=\"Public listed company\"\r\n                    val={PUBLIC_LISTED_COMPANY_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                    checked={secE.regulatory_detail?.is_company_regulated === PUBLIC_LISTED_COMPANY_E}\r\n                />\r\n\r\n                {/* public listed input fields  */}\r\n                {secE.regulatory_detail?.is_company_regulated === PUBLIC_LISTED_COMPANY_E? <PublicListedComp secE={secE} onChangeFn={onChangeFn}/>: null }\r\n\r\n                <CustomRadioInput\r\n                name=\"is_company_regulated\"\r\n                id=\"sec-e-major-owned-subsidiary\"\r\n                content=\"Majority-owned subsidiary of a listed company\"\r\n                val={MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E}\r\n                onChangeFn={onChangeRadioFn}\r\n                checked={secE.regulatory_detail?.is_company_regulated === MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E}\r\n                />\r\n\r\n                {/* major owned subsidiary inputs */}\r\n                {secE.regulatory_detail?.is_company_regulated === MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E? <OwnedListedComp secE={secE} onChangeFn={onChangeFn}/>: null }\r\n\r\n                <CustomRadioInput\r\n                name=\"is_company_regulated\"\r\n                id=\"sec-e-company-regulated\"\r\n                content=\"Regulated company - A company whose activities are subject to the oversight of a Commonwealth, State or Territory statutory regulator. In this context “Regulated” means subject to supervision beyond that provided by ASIC as a company registration body. For example, Australian Financial Services Licensee (AFSL), Australian Credit Licensee (ACL) or Registrable Superannuation Entity (RSE) Licensee\"\r\n                type=\"row-input\"\r\n                val={REGULATED_COMPANY_E}\r\n                onChangeFn={onChangeRadioFn}\r\n                checked={secE.regulatory_detail?.is_company_regulated === REGULATED_COMPANY_E}\r\n                />\r\n\r\n                {/* regulated company input fields */}\r\n                {secE.regulatory_detail?.is_company_regulated === REGULATED_COMPANY_E? <RegulatedComp secE={secE} onChangeFn={onChangeFn}/> : null }\r\n            </div>\r\n            {invFormStatus.errors?.is_company_regulated? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.is_company_regulated)}\r\n        </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegulatoryDetails;","import React, {useEffect} from 'react';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction RegistrationBodyInp({onChangeFn, secE, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"relevant_foreign_registration_body\", value:\"\"})    \r\n        }\r\n    },[])\r\n\r\n    const onChangeIn = (e) => {\r\n        const {name, value} = e.target;\r\n        onChangeFn({name, value})\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <input className=\"form-input-common\" type=\"text\" placeholder=\"Name of registration body\" id=\"sec-e-name-reg-body\" name=\"relevant_foreign_registration_body\" value={secE?.relevant_foreign_registration_body || \"\"} onChange={onChangeIn} />\r\n    {formErrors?.relevant_foreign_registration_body? <div className=\"input__desc\">\r\n        {renderErrorTxt(formErrors?.relevant_foreign_registration_body)}\r\n    </div>: null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegistrationBodyInp","import React,{useEffect}  from 'react'\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction NonAsicIdentNum({secE, onChangeFn, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"foreign_registration_body_identification\", value:\"\"})    \r\n        }\r\n    },[])\r\n\r\n    const onChangeIn = (e) => {\r\n        const {name, value} = e.target;\r\n        onChangeFn({name, value})\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"input__desc full-width\">\r\n            <p className=\"input__desc--p\">If Yes, please provide the company identification number (if any) that was issued by the relevant foreign body upon the company's formation, incorporation or regulation</p>\r\n        </div>\r\n        <div className=\"form-input form-input-full-width\">\r\n            <input className=\"form-input-common\" type=\"text\" placeholder=\"Company identification number\" id=\"sec-e-company-id\" name=\"foreign_registration_body_identification\" value={secE?.foreign_registration_body_identification || \"\"} onChange={onChangeIn}/>\r\n        </div>\r\n        {formErrors?.foreign_registration_body_identification? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.foreign_registration_body_identification)}\r\n        </div>: null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NonAsicIdentNum","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport RegistrationBodyInp from '../RegistrationBodyInp';\r\nimport NonAsicIdentNum from '../NonAsicIdentNum';\r\nimport { ADDRESS_TYPE_AUSTRALIAN_E, ADDRESS_TYPE_ASIC_REGISTERED_E, ADDRESS_TYPE_NON_ASIC_REGISTERED_E, YES_E, NO_E } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport countryList from 'react-select-country-list';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nconst ForeignCompanyDetails = ({ onFormChange }) => {\r\n\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const errMsgsAus = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n    }\r\n    const errMsgsAsic = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n    }\r\n    const errMsgsNonAsic = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const onChangeARBN = ({name, value}) =>{\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeFn({name, value:trimmedVal})\r\n    }\r\n\r\n    const onChangeAddress = ({name, value, addressType}) =>{\r\n        onFormChange({name, value, level:\"address_details\", address_type:addressType})\r\n    }\r\n\r\n    const getValueAddressType = (addressType, keyName) =>{\r\n        const address = secE.address_details.find((each)=> addressType===each?.address_type) || {};\r\n        const val = address[keyName] || \"\"\r\n        return val\r\n    }\r\n\r\n    const countryValue = (type) => {\r\n        \r\n        const findCountry = getValueAddressType(type, \"country\");\r\n\r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.1 Foreign Company Details</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <div>\r\n                <CustomTextField \r\n                    placeholder=\"Full name of the foreign company\"\r\n                    id=\"sec-e-fullname-fc\"\r\n                    label=\"Full name of the foreign company\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"full_name\"\r\n                    value={secE?.full_name}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Country of formation / incorporation / registration\"\r\n                    id=\"sec-e-country-of-formation\"\r\n                    label=\"Country of formation / incorporation / registration\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"country\"\r\n                    value={secE?.country}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n            </div>\r\n\r\n            {/* Complete this section if the company is registered with ASIC */}\r\n            <div>\r\n                <h5 className=\"u-padding-10y\">Complete this section if the company is registered with ASIC</h5>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"ARBN\"\r\n                        id=\"sec-e-arbn\"\r\n                        label=\"ARBN\"\r\n                        asterisk=\"\"\r\n                        name=\"arbn\"\r\n                        value={secE?.arbn}\r\n                        onChangeFn={onChangeARBN}\r\n                        formErrors={invFormStatus.errors}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Australian agent name\"\r\n                        id=\"sec-e-name-aus-agent\"\r\n                        label=\"Australian agent name (if applicable)\"\r\n                        asterisk=\"\"\r\n                        name=\"australian_agent_name\"\r\n                        value={secE?.australian_agent_name}\r\n                        onChangeFn={onChangeFn}\r\n                        formErrors={invFormStatus.errors}\r\n                    />\r\n                </div>\r\n                <div className=\"u-padding-10y\">\r\n                    <CustomTextField\r\n                        placeholder=\"Principal place of business in Australia or Australian agent address details\"\r\n                        id=\"sec-e-place-of-business\"\r\n                        label=\"Principal place of business in Australia or Australian agent address details (PO Box not permitted)\"\r\n                        asterisk=\"\"\r\n                        type=\"form-input-full-width\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-e-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-e-street-no\"\r\n                        label=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street name\"\r\n                        id=\"sec-e-street-name\"\r\n                        label=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField \r\n                        id=\"sec-e-suburb\"\r\n                        placeholder=\"Suburb/Town\"\r\n                        label=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-state\"\r\n                        placeholder=\"State\"\r\n                        label=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        label=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsAus?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_AUSTRALIAN_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_AUSTRALIAN_E })}\r\n                        />\r\n\r\n                        {errMsgsAus?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsAus?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                </div>\r\n                <div  className=\"u-padding-10y\">\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-office-address\"\r\n                        label=\"Registered office address\"\r\n                        placeholder=\"Registered office address\"\r\n                        asterisk=\"\"\r\n                        type=\"form-input-full-width\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        placeholder=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-street-no\"\r\n                        label=\"Street Number\"\r\n                        placeholder=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-street-name\"\r\n                        label=\"Street name\"\r\n                        placeholder=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-suburb\"\r\n                        label=\"Suburb/Town\"\r\n                        placeholder=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-state\"\r\n                        label=\"State\"\r\n                        placeholder=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-postcode\"\r\n                        label=\"Postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsAsic?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_ASIC_REGISTERED_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_ASIC_REGISTERED_E })}\r\n                        />\r\n\r\n                        {errMsgsAsic?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsAsic?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Is the company also registered with a relevant foreign registration body? */}\r\n            <div className=\"u-padding-10y\">\r\n                <h6>Is the company also registered with a relevant foreign registration body?</h6>\r\n                <div>\r\n                    <div className=\"form-input-radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"is_registered_with_relevant_foreign_registration_body\"\r\n                            id=\"sec-e-reg-foreign-body-yes\"\r\n                            value={YES_E}\r\n                            checked={secE?.is_registered_with_relevant_foreign_registration_body === YES_E}\r\n                            onChange={(e)=>onChangeRadioFn({name:e.target.name, value:e.target.value})}\r\n                        />\r\n                        <label htmlFor=\"sec-e-reg-foreign-body-yes\">Yes</label>\r\n                        {secE?.is_registered_with_relevant_foreign_registration_body === YES_E? <RegistrationBodyInp onChangeFn={onChangeFn} secE={secE} formErrors={invFormStatus.errors}/>: null}\r\n                    </div>\r\n                    <CustomRadioInput\r\n                        name=\"is_registered_with_relevant_foreign_registration_body\"\r\n                        id=\"sec-e-reg-foreign-body-no\"\r\n                        content=\"No\"\r\n                        val={NO_E}\r\n                        checked={secE?.is_registered_with_relevant_foreign_registration_body === NO_E}\r\n                        onChangeFn={onChangeRadioFn}\r\n                    />\r\n                    {invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body)}\r\n                    </div>: null} \r\n                </div>\r\n            </div>\r\n\r\n            {/* Complete this section if the company is NOT registered with ASIC */}\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-y\">Complete this section if the company is NOT registered with ASIC</h5>\r\n\r\n                <div className=\"u-margin-bottom\">\r\n                    <h6>Is the company registered with a relevant foreign registration body?</h6>\r\n\r\n                    <div className=\"form-input-radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"is_registered_with_relevant_foreign_registration_body_no_asic\"\r\n                            id=\"sec-e-not-asic-foreign-yes\"\r\n                            value={YES_E}\r\n                            checked={secE?.is_registered_with_relevant_foreign_registration_body_no_asic === YES_E}\r\n                            onChange={(e)=>onChangeRadioFn({name:e.target.name, value:e.target.value})}\r\n                            // onChange={(e)=>onChangeRadioFn({name:\"is_registered_with_relevant_foreign_registration_body\", value:e.target.value})}\r\n                        />\r\n                        <label htmlFor=\"sec-e-not-asic-foreign-yes\">Yes</label>\r\n\r\n                        {secE?.is_registered_with_relevant_foreign_registration_body_no_asic === YES_E? <NonAsicIdentNum secE={secE} onChangeFn={onChangeFn} formErrors={invFormStatus.errors}/>: null}\r\n                    </div>\r\n\r\n                    <CustomRadioInput\r\n                        name=\"is_registered_with_relevant_foreign_registration_body_no_asic\"\r\n                        id=\"sec-e-not-asic-foreign-no\"\r\n                        content=\"No\"\r\n                        val={NO_E}\r\n                        checked={secE?.is_registered_with_relevant_foreign_registration_body_no_asic === NO_E}\r\n                        onChangeFn={onChangeRadioFn}\r\n                        // onChangeFn={({name, value})=>onChangeRadioFn({name:\"is_registered_with_relevant_foreign_registration_body\", value})}\r\n                    />\r\n                    {invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body_no_asic? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body_no_asic)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                <div className=\"u-padding-y\">\r\n                    <CustomTextField\r\n                        placeholder=\"Full address of the company as registered by the foreign registration body\"\r\n                        id=\"sec-e-full-address-not-asic\"\r\n                        label=\"Full address of the company in the country of formation, incorporation or registration as registered by the foreign registration body (PO Box not permitted)\"\r\n                        type=\"form-input-full-width\"\r\n                        asterisk=\"\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                        />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-e-unit-not-asic\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-e-street-no-not-asic\"\r\n                        label=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street name\"\r\n                        id=\"sec-e-street-not-asic\"\r\n                        label=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Suburb/Town\"\r\n                        id=\"sec-e-suburb-not-asic\"\r\n                        label=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"State\"\r\n                        id=\"sec-e-state-not-asic\"\r\n                        label=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Postcode\"\r\n                        id=\"sec-e-postcode-not-asic\"\r\n                        label=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsNonAsic?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_NON_ASIC_REGISTERED_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_NON_ASIC_REGISTERED_E })}\r\n                        />\r\n\r\n                        {errMsgsNonAsic?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsNonAsic?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForeignCompanyDetails;","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport DocPlaceholder from '../../../Layout/DocPlaceholder';\r\nimport { uploadFiles, deleteFile } from '../../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { LOADING, SUCCESS, FAILED, IDENTIFICATION_DOCUMENTS_SEC_E, ASIC_EXTRACT_DOC, COMPANY_OR_FOREIGN_BODY_EXTRACT, SEC_E_DOC_EXTRA_LABEL_MAIN } from '../../../../../constants';\r\nimport CustomDropdown from '../../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../../utils/documentUploads';\r\nimport { useToast } from '../../../../CustomToast';\r\n\r\nconst IdentificationDocs = ({investorFormId}) => {\r\n    const dummyFn = () => {}\r\n    const toast = useToast();\r\n    const doNotShowExtraLabel = [ASIC_EXTRACT_DOC[0][0], COMPANY_OR_FOREIGN_BODY_EXTRACT[0][0]]\r\n    \r\n    const secE = useSelector((store) => store.secE);\r\n    const [selectedDocType, setSelectedDocType] = useState({label:\"Select type of document\", value:\"\"})\r\n    const [selectedDirectorNum, setSelectedDirectorNum] = useState({label:`${SEC_E_DOC_EXTRA_LABEL_MAIN} - 1`, value:1})\r\n    const [uploadedDocs, setUploadedDocs] = useState([])\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}, extraDetails={label:'', value:''}) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name\r\n            const metadata = JSON.stringify([{\"owner\":`${SEC_E_DOC_EXTRA_LABEL_MAIN} ${extraDetails.value}`}])\r\n\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            if(!doNotShowExtraLabel.includes(type.value)){\r\n                formData.append(\"metadata\", metadata)\r\n            }\r\n            formData.append('section', 'e');\r\n            formData.append('investor_form_id', investorFormId);\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            doNotShowExtraLabel,\r\n            selectedDocType:{...selectedDocType},\r\n            selectedEntityNum:{...selectedDirectorNum},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const updateSelectedOption = (option) => {\r\n        //update selected document type to the state\r\n        setSelectedDocType({...option})\r\n    }\r\n\r\n    const updateSelectedDirectorNum = (option) => {\r\n        setSelectedDirectorNum({...option})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n    const inestorOptions = () => {\r\n        const tempOptionsArr = [];\r\n        const tempNoOfDirectors = secE?.number_of_directors === -1? 4 : secE?.number_of_directors || 1\r\n        for (let i = 1; i <= tempNoOfDirectors; i++) {\r\n            tempOptionsArr.push([i, `${SEC_E_DOC_EXTRA_LABEL_MAIN} - ${i}`])\r\n        }\r\n        return tempOptionsArr\r\n    }\r\n\r\nreturn (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.5 Identification Documents</h4>\r\n\r\n        {/* Registered with ASIC */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is registered with ASIC</h5>\r\n\r\n            <div>\r\n                <h6>Please provide a copy of ONE of the following documents.</h6>\r\n                <ul>\r\n                    <li>Full ASIC company extract (if company is registered in Australia)</li>\r\n                    <li>Full company extract from relevant registration body</li>\r\n                    <li>If the ASIC or foreign registration body database is not reasonably available, an original certified copy of the certificate of registration issued by ASIC or the relevant registration body</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        {/* NOT Registered with ASIC */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is NOT registered with ASIC</h5>\r\n\r\n            <div>\r\n                <h6>Please provide a copy of ONE of the following documents.</h6>\r\n                <ul>\r\n                    <li>Full company extract from relevant registration body</li>\r\n                    <li>If the foreign registration body database is not reasonably available, an original certified copy of the certificate of registration issued by the relevant registration body</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        {/* majority subsidiary */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is regulated, listed or a majority subsidiary of an Australian listed company</h5>\r\n\r\n            <div className=\"u-margin-bottom\">\r\n                <h6>Please provide a copy of ONE of the following documents</h6>\r\n                <ul>\r\n                    <li>Full ASIC company extract</li>\r\n                    <li>Full company extract from relevant financial market</li>\r\n                    <li>Evidence of the company's full name from the relevant Commonwealth, State or Territory statutory regulator</li>\r\n                    <li>A public document issued by the company</li>\r\n                </ul>\r\n            </div>\r\n            \r\n            <div className=\"note__box u-padding-y\">\r\n                <p className=\"note__box--p\">*Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator.\r\n    If you are unable to provide one of the above documents, please contact SS&amp;C on 02 8115 9924 or ISTradedesk@sscinc.com</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h5>For each Beneficial Owner (as defined in Page 19)</h5>\r\n            \r\n            {/* Copy of ONE beneficial owner */}\r\n            <div className=\"u-padding-y\">\r\n                <h6>1. Provide an ORIGINAL CERTIFIED COPY of ONE of the following documents for each Beneficial Owner:</h6>\r\n                <ul>\r\n                    <li>Australian State / Territory driver's licence containing a photograph of the person</li>\r\n                    <li>Australian passport (a passport that has expired within the preceding 2 years is acceptable)</li>\r\n                    <li>Card issued under a State or Territory for the purpose of proving a person's age containing a photograph of the person</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"divider-or u-margin-bottom\"></div>\r\n\r\n            {/* Copy of TWO beneficial owner */}\r\n            <div className=\"u-padding-10y\">\r\n                <h6>2. Provide an ORIGINAL CERTIFIED COPY of TWO of the following documents for each Beneficial Owner:</h6>\r\n                <ul>\r\n                    <li>Foreign passport or similar travel document containing a photograph and the signature of the person*</li>\r\n                    <li>Foreign driver's licence that contains a photograph of the person in whose name the document is issued*</li>\r\n                    <li>National ID card issued by a foreign government containing a photograph and a signature of the person in whose name the card was issued*</li>\r\n                </ul>\r\n                <div className=\"note__box u-padding-10y\">\r\n                    <p className=\"note__box--p\">*Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator. If you are unable to provide one of the above documents, please contact SS&amp;C on 02 8115 9924 or ISTradedesk@ sscinc.com</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h6 className=\"u-margin-bottom u-padding-y\">Please attach documents</h6>\r\n                <div className=\"sub__form\" style={{gap:16}}>\r\n                    <div style={{minWidth: 350}}>\r\n                        <CustomDropdown \r\n                            dropdownOptions={inestorOptions()}\r\n                            selectedOption={selectedDirectorNum}\r\n                            updateSelectedOption={updateSelectedDirectorNum}\r\n                        />\r\n                    </div>\r\n                    <div style={{minWidth: 375}}>\r\n                        <CustomDropdown\r\n                            addClass='control-dropdown-height'\r\n                            dropdownOptions={IDENTIFICATION_DOCUMENTS_SEC_E}\r\n                            selectedOption={selectedDocType}\r\n                            updateSelectedOption={updateSelectedOption}\r\n                            extraLabel={`(${SEC_E_DOC_EXTRA_LABEL_MAIN} - ${selectedDirectorNum?.value})`}\r\n                            doNotShowExtraLabelSpecial={doNotShowExtraLabel}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {selectedDocType?.value ?\r\n                    <div className='u-padding-y'>\r\n                        <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"identificationdocs_e\"/>\r\n                    </div>: null\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IdentificationDocs;","import { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst Directors = ({ directorId, details, onChangeDirectorDetails, itemIndex }) => {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgs = {\r\n        given_name : invFormStatus.errors?.given_name? invFormStatus.errors?.given_name[itemIndex]: [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[itemIndex]: [],\r\n        middle_name : invFormStatus.errors?.middle_name? invFormStatus.errors?.middle_name[itemIndex]: [],\r\n    }\r\n    \r\n    const onChangeFn = ({name, value}) => {\r\n        onChangeDirectorDetails({name, value, directorId})\r\n    }\r\n\r\n    return (\r\n    <div key={directorId}>\r\n        <h6 className=\"u-padding-10y\">{`Director ${itemIndex+1}`}</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-e-director${directorId}-given-name`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"given_name\"\r\n                    value={details?.given_name || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={errMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Surname\"\r\n                    id={`sec-e-director${directorId}-surname`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    value={details?.surname || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={errMsgs}\r\n                /> \r\n            </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Directors;","import React, { useState } from 'react';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, MORE_THAN_FOUR_DIRECTORS_SEC_D_E } from '../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst MoreThanFourDirectors = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const docTypeValue = {label:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][1], value:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][0]}\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) => {\r\n        if(file){ //files && files.length -- to make it work for multiple files\r\n            //call api to upload files\r\n            const fileName = file.name;\r\n            const formData = new FormData();\r\n\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            formData.append('section', 'e');\r\n            formData.append('investor_form_id', investorFormId);\r\n\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...docTypeValue},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <DocPlaceholder\r\n            onAddFiles={onAddFiles}\r\n            uploadedDocs={uploadedDocs}\r\n            onClickRemove={onClickRemove}\r\n            uniqId=\"moredirectors\"\r\n            onClickDel={onClickDel}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoreThanFourDirectors;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport Directors from '../Directors';\r\nimport { singleDirectorDetail } from '../../../../../reducers/Investor-Application-Form/secEReducer';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport MoreThanFourDirectors from '../MoreThanFourDirectors';\r\nimport { NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E } from '../../../../../constants';\r\n\r\nconst DirectorsSection = ({ onFormChange, investorFormId }) => {\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const addDirectorDetails = (noOfDirectors) => {\r\n        let upd = []\r\n        const prevDirLen = secE?.directors_details?.length || 0\r\n        if(prevDirLen > noOfDirectors){\r\n            upd = secE?.directors_details?.filter((each, index)=> (index+1)<=noOfDirectors);\r\n            onFormChange({name:\"directors_details\", value:[...upd]});\r\n            return\r\n        } else if(prevDirLen === noOfDirectors) {\r\n            return\r\n        } else {\r\n            const newLen = noOfDirectors-prevDirLen\r\n            upd = [...secE?.directors_details]\r\n            const newArr = Array.from({length:newLen}, ()=>({...singleDirectorDetail}))\r\n            onFormChange({name:\"directors_details\", value:[...upd, ...newArr]})\r\n            return\r\n        }\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({\r\n            name,\r\n            value: convrtToNum\r\n        });\r\n\r\n        if(convrtToNum > 0){\r\n            //update no.of directors\r\n            addDirectorDetails(convrtToNum);\r\n        }\r\n        else if(convrtToNum === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E){\r\n            addDirectorDetails(0);\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeDirectorDetails = ({directorId, name, value}) => {\r\n        const updIndex = directorId - 1;\r\n        const upd = [...secE?.directors_details];\r\n        upd[updIndex][name] = value\r\n        onFormChange({name:\"directors_details\", value:[...upd]});\r\n        return\r\n    }\r\n\r\n    const renderDirectors = () => {\r\n        return secE?.directors_details?.map((each, index)=> {\r\n            const tempId = index+1\r\n            const uniqId = tempId //each?.id || tempId\r\n            if((index < secE?.number_of_directors) && (secE?.number_of_directors !== NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E)){ //phase1 fix. remove this condition in phase-2\r\n                return <Directors key={uniqId} directorId={uniqId} details={each} onChangeDirectorDetails={onChangeDirectorDetails} itemIndex={index}/>\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.3 Directors (Proprietary Companies Only)</h4>\r\n        <div className=\"section__container--box\">\r\n            <h6>How many directors are there?<span>*</span></h6>\r\n            <div className=\"u-margin-bottom row-space-between\">\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-1\"\r\n                    content=\"1\"\r\n                    val=\"1\"\r\n                    checked={secE?.number_of_directors === 1}\r\n                    onChangeFn={onChangeRadioFn}            \r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-2\"\r\n                    content=\"2\"\r\n                    val=\"2\"\r\n                    checked={secE?.number_of_directors === 2}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-3\"\r\n                    content=\"3\"\r\n                    val=\"3\"\r\n                    checked={secE?.number_of_directors === 3}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-4\"\r\n                    content=\"4\"\r\n                    val=\"4\"\r\n                    checked={secE?.number_of_directors === 4}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-5\"\r\n                    content=\"more than 4\" \r\n                    val={`${NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}`}\r\n                    checked={secE?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n            </div>\r\n            <React.Fragment>\r\n                {invFormStatus.errors?.number_of_directors? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.number_of_directors)}\r\n                    </div>: null}\r\n\r\n                    {secE?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E?\r\n                        <>\r\n                            <h6 className=\"u-padding-y\">If there are more directors, please provide details on separate sheet and upload</h6>\r\n                            <MoreThanFourDirectors investorFormId={investorFormId}/>\r\n                        </>\r\n                    : null}\r\n            </React.Fragment>\r\n            {renderDirectors()}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DirectorsSection;","import { useSelector } from 'react-redux';\r\nimport { COMPANY_TYPE_PUBLIC_E, COMPANY_TYPE_PROPRIETARY_E } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CompanyType = ({onFormChange}) => {\r\n  const secE = useSelector((store)=> store.secE);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const onChangeRadioFn = ({name, value}) =>{ \r\n    const convrtToNum = parseInt(value);\r\n    onFormChange({name, value:convrtToNum});\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">E.2 Company Type</h4>\r\n        <div className=\"section__container--box\">\r\n        <h6>Is the company type public or proprietary?<span>*</span></h6>\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-e-company-type-public\"\r\n            content=\"Public (companies whose name does NOT include the words “Pty Ltd” or “Proprietary Ltd”; generally listed companies) Go to Section E.4\"\r\n            type=\"row-input\"\r\n            val={COMPANY_TYPE_PUBLIC_E}\r\n            checked={secE?.company_type === COMPANY_TYPE_PUBLIC_E}\r\n            onChangeFn={onChangeRadioFn}\r\n          />\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-e-company-type-proprietary\"\r\n            content=\"Proprietary (companies whose name ends with “Proprietary Ltd” or “Pty Ltd”; also known as private company\"\r\n            type=\"\"\r\n            val={COMPANY_TYPE_PROPRIETARY_E}\r\n            checked={secE?.company_type === COMPANY_TYPE_PROPRIETARY_E}\r\n            onChangeFn={onChangeRadioFn}\r\n          />\r\n          {invFormStatus.errors?.company_type? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.company_type)}\r\n          </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyType;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TaxInformation from './SubSections/TaxInformation';\r\nimport RegulatoryDetails from './SubSections/RegulatoryDetails';\r\nimport ForeignCompanyDetails from './SubSections/ForeignCompanyDetails';\r\nimport IdentificationDocs from './SubSections/IdentificationDocs';\r\nimport DirectorsSection from './SubSections/DirectorsSection';\r\nimport CompanyType from './SubSections/CompanyType';\r\nimport {formatAndPrintDocs} from '../../../../utils/validations/helperFunc';\r\n\r\nconst SectionEContent = ({ onFormChange, investorFormId, removeDocFromArr }) => {\r\n\r\n  const secE = useSelector((store) => store.secE);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n        <h2 className=\"section__heading\">Section E: Foreign Company</h2>\r\n        <ul>\r\n            <li>Section E is to be completed by foreign companies. Please complete Section D for Australian companies. Please use BLOCK letters to complete this Application Form.</li>\r\n        </ul>\r\n\r\n        <ForeignCompanyDetails onFormChange={onFormChange}/>\r\n\r\n        <CompanyType onFormChange={onFormChange}/>\r\n\r\n        <DirectorsSection onFormChange={onFormChange} investorFormId={investorFormId} />\r\n\r\n        <RegulatoryDetails onFormChange={onFormChange}/>\r\n\r\n        {/* <TaxInformation /> */}\r\n\r\n        <IdentificationDocs investorFormId={investorFormId}/>\r\n\r\n        {secE?.documents?.length > 0? formatAndPrintDocs(secE?.documents, removeDocFromArr): null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionEContent;"],"names":["_ref","optionsList","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","_jsx","className","concat","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","onClickVisible","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","_secE$regulatory_deta3","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","secE","onChangeFn","invFormStatus","useSelector","store","options","useMemo","countryList","getData","useEffect","name","CustomTextField","placeholder","id","asterisk","regulatory_detail","public_company_market_name","formErrors","errors","Select","public_company_country","autoFocus","find","country","_secE$regulatory_deta","_country$label","_secE$regulatory_deta2","toLowerCase","onChange","renderErrorTxt","_secE$regulatory_deta4","type","majority_owned_listed_company_name","majority_owned_name_of_market","majority_owned_country","regulator_name","regulator_licence_details","_secE$regulatory_deta5","_secE$regulatory_deta6","_secE$regulatory_deta7","onFormChange","level","onChangeRadioFn","_ref3","convrtToNum","parseInt","CustomRadioInput","content","val","COMPANY_IS_NOT_REGULATED_OR_LISTED_E","checked","is_company_regulated","PUBLIC_LISTED_COMPANY_E","PublicListedComp","MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E","OwnedListedComp","REGULATED_COMPANY_E","RegulatedComp","_Fragment","relevant_foreign_registration_body","e","_e$target","target","foreign_registration_body_identification","_invFormStatus$errors4","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_invFormStatus$errors17","_invFormStatus$errors18","_invFormStatus$errors19","_invFormStatus$errors20","_invFormStatus$errors21","_invFormStatus$errors22","_invFormStatus$errors23","_invFormStatus$errors24","_invFormStatus$errors25","_invFormStatus$errors26","_invFormStatus$errors27","_invFormStatus$errors28","_invFormStatus$errors29","_invFormStatus$errors30","_invFormStatus$errors31","_invFormStatus$errors32","_invFormStatus$errors33","_invFormStatus$errors34","_invFormStatus$errors35","_invFormStatus$errors36","_invFormStatus$errors37","_invFormStatus$errors38","_invFormStatus$errors39","_invFormStatus$errors40","_invFormStatus$errors41","_invFormStatus$errors42","_invFormStatus$errors43","_invFormStatus$errors44","_invFormStatus$errors45","_invFormStatus$errors46","_invFormStatus$errors47","_invFormStatus$errors48","_errMsgsAus$countrySu","_errMsgsAus$countrySu2","_errMsgsAsic$countryS","_errMsgsAsic$countryS2","_invFormStatus$errors49","_invFormStatus$errors50","_invFormStatus$errors51","_invFormStatus$errors52","_errMsgsNonAsic$count","_errMsgsNonAsic$count2","errMsgsAus","full_company_address","ADDRESS_TYPE_AUSTRALIAN_E","unit_no","street_no","street_name","suburb","state","postcode","countrySub","errMsgsAsic","ADDRESS_TYPE_ASIC_REGISTERED_E","errMsgsNonAsic","ADDRESS_TYPE_NON_ASIC_REGISTERED_E","onChangeAddress","_ref5","addressType","address_type","getValueAddressType","keyName","address_details","countryValue","findCountry","full_name","arbn","_ref4","trimmedVal","replaceAllWhiteSpaces","australian_agent_name","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","length","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","YES_E","is_registered_with_relevant_foreign_registration_body","htmlFor","RegistrationBodyInp","NO_E","is_registered_with_relevant_foreign_registration_body_no_asic","NonAsicIdentNum","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","investorFormId","toast","useToast","doNotShowExtraLabel","ASIC_EXTRACT_DOC","COMPANY_OR_FOREIGN_BODY_EXTRACT","selectedDocType","setSelectedDocType","_useState3","SEC_E_DOC_EXTRA_LABEL_MAIN","_useState4","selectedDirectorNum","setSelectedDirectorNum","_useState5","_useState6","uploadedDocs","setUploadedDocs","onUploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","extraDetails","fileName","metadata","formData","_yield$uploadFiles","success","url","data","extradata","_args","arguments","wrap","_context","prev","next","undefined","JSON","stringify","FormData","append","uploadFiles","sent","loader","SUCCESS","FAILED","docUrl","resData","updateDocArray","stop","_x","apply","onClickRemove","removeDocFromArray","onClickDel","_callee2","docData","_yield$deleteFile","_context2","delLoader","deleteFile","error","_x2","style","gap","minWidth","CustomDropdown","tempOptionsArr","tempNoOfDirectors","number_of_directors","i","push","inestorOptions","_objectSpread","IDENTIFICATION_DOCUMENTS_SEC_E","DocPlaceholder","onAddFiles","files","addNewDocToArray","selectedEntityNum","uniqId","directorId","details","onChangeDirectorDetails","itemIndex","errMsgs","given_name","surname","middle_name","docTypeValue","MORE_THAN_FOUR_DIRECTORS_SEC_D_E","addDirectorDetails","noOfDirectors","_secE$directors_detai","_secE$directors_detai2","upd","prevDirLen","directors_details","filter","index","_toConsumableArray","newLen","newArr","Array","from","singleDirectorDetail","NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E","updIndex","React","MoreThanFourDirectors","_secE$directors_detai3","Directors","renderDirectors","COMPANY_TYPE_PUBLIC_E","company_type","COMPANY_TYPE_PROPRIETARY_E","_secE$documents","removeDocFromArr","ForeignCompanyDetails","CompanyType","DirectorsSection","RegulatoryDetails","IdentificationDocs","documents","formatAndPrintDocs"],"sourceRoot":""}