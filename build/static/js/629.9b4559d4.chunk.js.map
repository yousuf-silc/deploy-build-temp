{"version":3,"file":"static/js/629.9b4559d4.chunk.js","mappings":"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","sources":["components/Forms/Layout/CustomTextField.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/OtherFactaInp.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/TrusteeGiinComp.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/GiinAndStatus.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/ActiveNonFinancialEntity.js","components/Forms/Sections/SectionG/SubSections/TaxStatus.js","components/Forms/Sections/SectionG/SubSections/NoTinExplain.js","components/Forms/Sections/SectionG/SubSections/NoTinReason.js","components/Forms/Sections/SectionG/SubSections/TaxResidentCountries.js","components/Forms/Sections/SectionG/SubSections/TfnDetails.js","components/Forms/Sections/SectionG/SubSections/TaxResidency.js","components/Forms/Sections/SectionG/SubSections/IdentifyPepName.js","components/Forms/Sections/SectionG/SubSections/TfnNumCntrlPerson.js","components/Forms/Sections/SectionG/SubSections/CntrlPerTaxResidentCountries.js","components/Forms/Sections/SectionG/SubSections/CntrlPerExtraDetails.js","components/Forms/Sections/SectionG/SubSections/subCntrlnPersonDetails/ResidenceDetailsOther.js","components/Forms/Sections/SectionG/SubSections/ControllingPersonDetails.js","components/Forms/Sections/SectionG/SubSections/ControllingPersons.js","components/Forms/Sections/SectionG/SectionGContent.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isArray } from '../../../utils/validations/helperFunc';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CustomTextField = ({ placeholder, id, label, type, asterisk, belowText, inputType, name, value, onChangeFn, formErrors={}, maxDate }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  const onChangeHandle = (e) =>{\r\n    const {name, value} = e.target;\r\n    onChangeFn({name, value}) \r\n  }\r\n\r\n  const renderErrors = () => {\r\n\r\n    \r\n\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        return renderErrorTxt(formErrors[name])\r\n      } else{\r\n        return renderErrorTxt([formErrors[name]])\r\n      }\r\n    }\r\n    return null\r\n\r\n    // return formErrors[name]? renderErrorTxt(formErrors[name]) : null\r\n  }\r\n\r\n  const isIncorrect = () => {\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        // return renderErrorTxt(formErrors[name])\r\n        return !!formErrors[name][0]?.length\r\n      } else{\r\n        return !!formErrors[name]?.length\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className={`form-input ${type? type : \"\"} ${isIncorrect()? 'incorrect':''}`}>\r\n        <label htmlFor={id}>{label} {asterisk !==\"\"? <span>*</span>: null}</label>\r\n        <input className=\"form-input-common\" type={inputType? inputType : \"text\"} placeholder={placeholder} id={id} required={asterisk !==\"\"? true: false} name={name} value={value || \"\"} onChange={onChangeHandle} disabled={!!invFormStatus.loader} max={maxDate || null}/>\r\n        \r\n        {belowText? <div className=\"input__desc\">\r\n          <p className=\"input__desc--p\">{belowText}</p>\r\n        </div>: null}\r\n\r\n        {renderErrors()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextField;","import React, {useEffect} from 'react';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction OtherFactaInp({onChangeInp, secG, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeInp({name:'fatca_status_description', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Describe FATCA status\"\r\n            id=\"sec-g-desc-status\"\r\n            label=\"Describe FATCA status\"\r\n            type=\"form-input-full-width u-margin-bottom-0\"\r\n            asterisk=\"*\"\r\n            name=\"fatca_status_description\"\r\n            value={secG?.fatca_status_description}\r\n            onChangeFn={onChangeInp}\r\n            formErrors={formErrors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OtherFactaInp","import React, {useEffect} from 'react';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction TrusteeGiinComp({value, onChangeInp, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n\r\n        return ()=>{\r\n             onChangeInp({name:'trustee_giin', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Trustee GIIN\"\r\n            id=\"sec-g-trustee-giin\"\r\n            label=\"If the entity is a trust and a Trustee-documented trust, provide trustee GIIN\"\r\n            type=\"form-input-full-width u-margin-bottom-0\"\r\n            asterisk=\"\"\r\n            name=\"trustee_giin\"\r\n            value={value || \"\"}\r\n            onChangeFn={onChangeInp}\r\n            formErrors={formErrors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrusteeGiinComp","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport CustomRadioInput from '../../../../Layout/CustomRadioInput';\r\nimport OtherFactaInp from './OtherFactaInp';\r\nimport TrusteeGiinComp from './TrusteeGiinComp';\r\nimport {YES_G, NO_G, DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G, EXCEPTED_FINANCIAL_INSTITUTION_G, NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G, NON_PARTICIPATING_FINANCIAL_INSTITUTION_G, OTHER_FACTA_STATUS_G} from '../../../../../../constants'\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction GiinAndStatus({secG, onChangeInp, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeInp({name:'giin', value:''})\r\n            // onChangeInp({name:'trustee_giin', value:''})\r\n            onChangeInp({name:'fatca_status_description', value:''})\r\n            onChangeFn({name:'fatca_status_exclude_giin', value:''})\r\n            onChangeFn({name:'is_located_in_non_participating_crs_jurisdiction', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-10y u-padding-bottom-0\">\r\n            <CustomTextField\r\n                placeholder=\"Global Intermediary Identification Number (GIIN)\"\r\n                id=\"sec-g-giin\"\r\n                label=\"Global Intermediary Identification Number (GIIN) (if applicable)\"\r\n                type=\"form-input-full-width\"\r\n                asterisk=\"\"\r\n                name='giin'\r\n                value={secG?.giin || \"\"}\r\n                onChangeFn={onChangeInp}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n            <div>\r\n                <h6>If the company is a Financial Institution but does not have a GIIN, what is the company's FATCA status?<span>*</span></h6>\r\n\r\n                <div>\r\n\r\n                    <CustomRadioInput \r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-dc-fin\"\r\n                        content=\"Deemed Compliant Financial Institution\"\r\n                        val={DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-excepted-fin\"\r\n                        content=\"Excepted Financial Institution\"\r\n                        val={EXCEPTED_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === EXCEPTED_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-nr-iga\"\r\n                        content=\"Non Reporting IGA Financial Institution\"\r\n                        val={NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-np-fin\"\r\n                        content=\"Non-participating Financial Institution\"\r\n                        val={NON_PARTICIPATING_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === NON_PARTICIPATING_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-other-FATCA\"\r\n                        content=\"Other - FATCA status\"\r\n                        val={OTHER_FACTA_STATUS_G}\r\n                        checked={secG?.fatca_status_exclude_giin === OTHER_FACTA_STATUS_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n                    {invFormStatus.errors?.fatca_status_exclude_giin? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.fatca_status_exclude_giin)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                {/* SubSections - Non Reporting IGA Financial Institution */}\r\n                {secG?.fatca_status_exclude_giin === NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G? <TrusteeGiinComp value={secG?.trustee_giin} onChangeInp={onChangeInp} formErrors={invFormStatus?.errors}/>: null}\r\n\r\n                {/*SubSections - Other - FATCA status */}\r\n                {secG?.fatca_status_exclude_giin === OTHER_FACTA_STATUS_G? <OtherFactaInp onChangeInp={onChangeInp} secG={secG} formErrors={invFormStatus.errors}/>: null}\r\n\r\n                <h6 className=\"u-padding-y\">Is the Financial Institution an Investment Entity located in a non-participating CRS jurisdiction* ?<span>*</span></h6>\r\n\r\n                <div >\r\n                    <CustomRadioInput\r\n                        name=\"is_located_in_non_participating_crs_jurisdiction\"\r\n                        id=\"sec-g-yes-np-crs\"\r\n                        content=\"Yes - Please complete Section G.2 and Section G.3\"\r\n                        val={YES_G}\r\n                        onChangeFn={onChangeFn}\r\n                        checked={secG?.is_located_in_non_participating_crs_jurisdiction === YES_G}\r\n                    />\r\n                    \r\n                    <CustomRadioInput\r\n                        name=\"is_located_in_non_participating_crs_jurisdiction\"\r\n                        id=\"sec-g-no-np-crs\"\r\n                        content=\"No\"\r\n                        val={NO_G}\r\n                        onChangeFn={onChangeFn}\r\n                        checked={secG?.is_located_in_non_participating_crs_jurisdiction === NO_G}\r\n                    />\r\n                    {invFormStatus.errors?.is_located_in_non_participating_crs_jurisdiction? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_located_in_non_participating_crs_jurisdiction)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default GiinAndStatus","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../../Layout/CustomRadioInput';\r\nimport {AUSTRALIAN_PUBLIC_LISTED_COMPANY_G, FOREIGN_PUBLIC_LISTED_COMPANY_G, GOVERNMENTAL_ENTITY_G, PASSIVE_INCOME_MORE_THAN_50_G, OTHER_ENTITY_G} from '../../../../../../constants'\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction ActiveNonFinancialEntity({secG, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:'active_non_financial_entity_type', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n                    <h6>Type of Active Non-Financial Entity <span>*</span></h6>\r\n                    <div>\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-aus-pb-listed\"\r\n                            content=\"Australian Public Listed company, majority owned subsidiary of Australian Public Listed company\"\r\n                            val={AUSTRALIAN_PUBLIC_LISTED_COMPANY_G}\r\n                            checked={secG?.active_non_financial_entity_type === AUSTRALIAN_PUBLIC_LISTED_COMPANY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-foreign-pb-listed\"\r\n                            content=\"Foreign Public Listed company or majority owned subsidiary of a foreign Public Listed company\"\r\n                            val={FOREIGN_PUBLIC_LISTED_COMPANY_G}\r\n                            checked={secG?.active_non_financial_entity_type === FOREIGN_PUBLIC_LISTED_COMPANY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-govt-entity\"\r\n                            content=\"Governmental entity, central bank, or international organization\"\r\n                            val={GOVERNMENTAL_ENTITY_G}\r\n                            checked={secG?.active_non_financial_entity_type === GOVERNMENTAL_ENTITY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-passive-income\"\r\n                            content=\"More than 50% of the entity's gross income consisted of Active Income; and Less than 50% of the assets held by the entity was used to produce Passive Income - Please complete section G.2\"\r\n                            type=\"row-input\"\r\n                            val={PASSIVE_INCOME_MORE_THAN_50_G}\r\n                            checked={secG?.active_non_financial_entity_type === PASSIVE_INCOME_MORE_THAN_50_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput \r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-active-trade\"\r\n                            content=\"Other - such as a company operating an active trade or business, that is not described above - Please complete section G.2\"\r\n                            val={OTHER_ENTITY_G}\r\n                            checked={secG?.active_non_financial_entity_type === OTHER_ENTITY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n                        {invFormStatus.errors?.active_non_financial_entity_type? <div className=\"input__desc\">\r\n                            {renderErrorTxt(invFormStatus.errors?.active_non_financial_entity_type)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n  )\r\n}\r\n\r\nexport default ActiveNonFinancialEntity","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\n// import CustomTextField from '../../../Layout/CustomTextField';\r\nimport GiinAndStatus from './subTaxStatus/GiinAndStatus';\r\nimport ActiveNonFinancialEntity from './subTaxStatus/ActiveNonFinancialEntity';\r\nimport { FINANCIAL_INSTITUTION_G, ACTIVE_NFE_G, PASSIVE_NFE_G } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst TaxStatus = ({ onFormChange}) => {\r\n  \r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeInp = ({name, value}) => {\r\n        onFormChange({name, value});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n        if(name === \"fatca_and_crs_status\") {\r\n            onFormChange({name:\"is_located_in_non_participating_crs_jurisdiction\", value:\"\"}); //resetting YES/NO for options change\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">G.1 Tax Status</h4>\r\n            <ul>\r\n                <li>Collection of tax status is compulsory pursuant to the United States Foreign Account Tax Compliance Act (FATCA) and Common Reporting Standard (CRS).</li>\r\n            </ul>\r\n\r\n            <div className=\"section__container--box\">\r\n                <h6>G1 - Please tick the applicable FATCA and CRS status<span>*</span></h6>\r\n\r\n                <div className=\"u-padding-10y\">\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_and_crs_status\"\r\n                        id=\"sec-g-fin-institution\"\r\n                        content=\"A Financial Institution - A custodial or depository institution, an investment entity or a specified insurance company for FATCA / CRS purposes.\"\r\n                        val={FINANCIAL_INSTITUTION_G}\r\n                        type=\"row-input\"\r\n                        checked={secG?.fatca_and_crs_status === FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_and_crs_status\"\r\n                        id=\"sec-g-nfe\"\r\n                        content=\"Active Non-financial Entity (NFE): Active NFEs include entities where, during the previous reporting period, less than 50% of their gross income was passive income (e.g. dividends, interests and royalties) and less than 50% of assets held produced passive income. For other types of Active NFEs, refer to Section VIII in the Annexure of the OECD 'Standard for Automatic Exchange of Financial Account Information' at www. oecd.org or the Australia - US intergovernmental agreement on FATCA.\"\r\n                        val={ACTIVE_NFE_G}\r\n                        type=\"row-input\"\r\n                        checked={secG?.fatca_and_crs_status === ACTIVE_NFE_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_and_crs_status\"\r\n                        id=\"sec-g-passive-nfe\"\r\n                        content=\"Passive Non-financial Entities - An entity earning 50% or more of its revenue from investment activities (e.g. rent, dividend, interest) or 50% or more of the entity's assets are used to generate investment income.\"\r\n                        val={PASSIVE_NFE_G}\r\n                        type=\"row-input\"\r\n                        checked={secG?.fatca_and_crs_status === PASSIVE_NFE_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n                    {invFormStatus.errors?.fatca_and_crs_status? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.fatca_and_crs_status)}\r\n                    </div>: null}\r\n                </div>\r\n                \r\n                {/* Financial institution */}\r\n                {secG?.fatca_and_crs_status === FINANCIAL_INSTITUTION_G ? <GiinAndStatus secG={secG} onChangeInp={onChangeInp} onChangeFn={onChangeFn}/>: null}\r\n\r\n                {/* Active Non-financial Entity */}\r\n                {secG?.fatca_and_crs_status === ACTIVE_NFE_G? <ActiveNonFinancialEntity secG={secG} onChangeFn={onChangeFn} />: null}\r\n            </div>\r\n\r\n            {/* Notes */}\r\n            <div className=\"section__container--box u-margin-bottom-0\">\r\n                <h5>Notes</h5>\r\n                <ul className=\"u-margin-bottom-0\">\r\n                    <li>A list of CRS participating countries can be found on the ATO website at: <a href=\"https://www.ato.gov.au/General/International-tax-agreements/In-detail/International-arrangements/Automatic-exchange-of-information---CRS-and-FATCA/?#4_19_CRS_Participating_Jurisdictions\">https://www.ato.gov.au/General/International-tax-agreements/In-detail/International-arrangements/Automatic-exchange-of-information---CRS-and-FATCA/?#4_19_CRS_Participating_Jurisdictions</a></li>\r\n                    <li>For the purpose of the CRS, passive income includes, but is not limited to, the portion of gross income that consists of dividends; interest; income equivalent to interest; rents and royalties, other than rents and royalties derived in the active conduct of a business conducted; annuities; the excess of gains over losses from the sale or exchange of Financial Assets that gives rise to passive income described above.</li>\r\n                    <li>Please note that we may request further information regarding information provided to us</li>\r\n                </ul>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxStatus;","import React, {useEffect} from 'react';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction NoTinExplain({getValueCountryType, onChangeCountry, cntryIndex, cntrlnPerNum, countryType, formErrors}) {\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      onChangeCountry({name:\"explanation_for_tin_not_issued\", value:\"\", cntryIndex})\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"form-input form-input-full-width u-margin-bottom-0\">\r\n       <label htmlFor={`sec-g-reason2-exp${cntryIndex}-${countryType}-${cntrlnPerNum}`}>Please provide explanation <span>*</span></label>\r\n       <input className=\"form-input-common\" type=\"text\" placeholder=\"Please provide explanation\" id={`sec-g-reason2-exp${cntryIndex}-${countryType}-${cntrlnPerNum}`} required name=\"explanation_for_tin_not_issued\" value={getValueCountryType('explanation_for_tin_not_issued', cntryIndex)} onChange={(e)=>onChangeCountry({name:e.target.name, value:e.target.value, cntryIndex})}/>\r\n       {formErrors?.explanation_for_tin_not_issued?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.explanation_for_tin_not_issued)}\r\n        </div>: null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoTinExplain","import React, {useEffect} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport NoTinExplain from './NoTinExplain';\r\nimport { COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS, INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN, COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED } from '../../../../../constants'\r\n\r\n\r\nfunction NoTinReason({uniqId, getValueCountryType, noTinReasonDropDwn, onChangeCountry, cntryIndex, cntrlnPerNum, countryType, errrMsg}) {\r\n    const A = \"Reason A: Country of residence does not issue TINs to tax residents\"\r\n    const B = \"Reason B: Individual has not been issued with a TIN\"\r\n    const C = \"Reason C: Country of residence does not require the TIN to be disclosed\"\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            noTinReasonDropDwn({name:\"reason_for_no_tin\", value:\"\", cntryIndex})\r\n        }\r\n    },[])\r\n//01 11 00 10 00 10\r\n//index + perNo\r\n//00 10 01 11 02 12\r\n  return (\r\n  <>\r\n  <div className=\"u-margin-bottom select-dropdown-width\">\r\n        <label htmlFor={`reason${cntryIndex}${cntrlnPerNum}`}>If no TIN, list reason <span>*</span></label>\r\n        <Form.Control\r\n            as=\"select\"\r\n            // id=\"reason1${cntryIndex}-${countryType}\" \r\n            id={`reason${cntryIndex}${cntrlnPerNum}`}\r\n            name=\"reason_for_no_tin\"\r\n            value={getValueCountryType('reason_for_no_tin', cntryIndex)}\r\n            onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex})}\r\n            // onChange={reasonCountry1}\r\n        >\r\n            <option></option>\r\n            <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n            <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n            <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n        </Form.Control>\r\n        {errrMsg?.reason_for_no_tin?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(errrMsg?.reason_for_no_tin)}\r\n        </div>: null}\r\n    </div>\r\n    {getValueCountryType('reason_for_no_tin', cntryIndex) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={cntryIndex} cntrlnPerNum={cntrlnPerNum} countryType={countryType} formErrors={errrMsg}/> : null}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NoTinReason","import React, { useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport {INVESTOR_ENTITY_TYPE_G } from '../../../../../constants'\r\nimport {clearGResidenceDetails} from '../../../../../actions/Investor-Application-Form/secGActions';\r\nimport NoTinReason from './NoTinReason';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction TaxResidentCountries({onFormChange}) {\r\n    const dispatch = useDispatch()\r\n   \r\n    const cntrlnPerNum = 0;\r\n\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const zeroIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[0] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[0] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[0] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[0] : [],\r\n    }\r\n\r\n    const firstIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[1] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[1] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[1] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[1] : [],\r\n    }\r\n    \r\n    const onChangeCountry = ({name, value, cntryIndex}) =>{\r\n        onFormChange({name, value, level:\"country_details\", countryType:INVESTOR_ENTITY_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const noTinReasonDropDwn = ({name, value, cntryIndex}) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"country_details\", countryType:INVESTOR_ENTITY_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const getValueCountryType = (keyName, cntryIndex) =>{\r\n        const allAddressDetArr = secG?.tax_residence_country_details?.filter((each)=> each?.type === INVESTOR_ENTITY_TYPE_G) || [];\r\n        const address = allAddressDetArr.find((each, index)=> each?.type === INVESTOR_ENTITY_TYPE_G && index === cntryIndex) || {};\r\n        const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" \r\n        return val\r\n    }\r\n\r\n    const removeCurrentDetails = () => {\r\n        dispatch(clearGResidenceDetails({residenceType:INVESTOR_ENTITY_TYPE_G, cntrlnPerNum}))\r\n    }\r\n\r\n    const countryValue = (type) => {\r\n        const findCountry = getValueCountryType(\"country\", type);\r\n        \r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{ \r\n            removeCurrentDetails();\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"section__container--box\">\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-10y\">Country #1</h5>\r\n                <div className=\"sub__form\">\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country <span>*</span></label>\r\n                        <Select\r\n                            className={zeroIndErrMsgs?.country?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(0)}\r\n                            onChange={(value) =>  onChangeCountry({ name:'country', value: value.label, cntryIndex: 0 })}\r\n                        />\r\n\r\n                        {zeroIndErrMsgs?.country?.length?\r\n                        <div className=\"input__desc u-margin-bottom\">\r\n                            {renderErrorTxt(zeroIndErrMsgs?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                    <CustomTextField \r\n                        placeholder=\"Tax Identification Number (TIN)\"\r\n                        id=\"sec-g-tax-id\"\r\n                        label=\"Tax Identification Number (TIN)\"\r\n                        asterisk=\"\"\r\n                        name=\"tin\"\r\n                        value={getValueCountryType('tin', 0)}\r\n                        onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:0})}\r\n                        formErrors={zeroIndErrMsgs}\r\n                    />\r\n                </div>\r\n                {/* <div className=\"u-margin-bottom\">\r\n                    <label htmlFor=\"reason1\">If no TIN, list reason <span>*</span></label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        id=\"reason1\" \r\n                        name=\"reason_for_no_tin\"\r\n                        value={getValueCountryType('reason_for_no_tin', 0)}\r\n                        onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:0})}\r\n                        // onChange={reasonCountry1}\r\n                    >\r\n                        <option></option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                        <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                    </Form.Control>\r\n                    {zeroIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                        {renderErrorTxt(zeroIndErrMsgs?.reason_for_no_tin)}\r\n                    </div>: null}\r\n                </div>\r\n                {getValueCountryType('reason_for_no_tin', 0) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={0} countryType={INVESTOR_ENTITY_TYPE_G} formErrors={zeroIndErrMsgs}/> : null} */}\r\n               {getValueCountryType('tin', 0)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={0} cntrlnPerNum={cntrlnPerNum} countryType={INVESTOR_ENTITY_TYPE_G} errrMsg={zeroIndErrMsgs}/>}\r\n               </div>\r\n\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-10y\">Country #2</h5>\r\n                <div className=\"sub__form\">\r\n\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country <span>*</span></label>\r\n                        <Select\r\n                            className={firstIndErrMsgs?.country?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(1)}\r\n                            onChange={(value) => onChangeCountry({ name:'country', value: value.label, cntryIndex: 1 })}\r\n                        />\r\n\r\n                        {firstIndErrMsgs?.country?.length?\r\n                        <div className=\"input__desc u-margin-bottom\">\r\n                            {renderErrorTxt(firstIndErrMsgs?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Tax Identification Number (TIN)\"\r\n                        id=\"sec-g-tax-id2\"\r\n                        label=\"Tax Identification Number (TIN)\"\r\n                        asterisk=\"\"\r\n                        name=\"tin\"\r\n                        value={getValueCountryType('tin', 1)}\r\n                        onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:1})}\r\n                        formErrors={firstIndErrMsgs}\r\n                    />\r\n                </div> \r\n                {/* <div className=\"u-margin-bottom\">\r\n                    <label htmlFor=\"reason2\">If no TIN, list reason <span>*</span></label>\r\n                    <Form.Control\r\n                    as=\"select\"\r\n                    id=\"reason2\"\r\n                    name=\"reason_for_no_tin\"\r\n                    value={getValueCountryType('reason_for_no_tin', 1)}\r\n                    onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:1})}\r\n                >\r\n                        <option></option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                        <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                    </Form.Control>\r\n                    {firstIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                        {renderErrorTxt(firstIndErrMsgs?.reason_for_no_tin)}\r\n                    </div>: null}\r\n                </div>\r\n                {getValueCountryType('reason_for_no_tin', 1) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={1} countryType={INVESTOR_ENTITY_TYPE_G} formErrors={firstIndErrMsgs}/> : null} */}\r\n               {getValueCountryType('tin', 1)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={1} cntrlnPerNum={cntrlnPerNum} countryType={INVESTOR_ENTITY_TYPE_G} errrMsg={firstIndErrMsgs}/>}\r\n            \r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default TaxResidentCountries","import { useEffect } from 'react';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nfunction TfnDetails({onChangeInp, secG, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeInp({name:'tfn_aus', value:''})\r\n            onChangeInp({name:'tfn_exemption_aus', value:''})\r\n        }\r\n    },[])\r\n\r\n    const onChangeTFN = ({name, value}) => {\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeInp({name, value:trimmedVal}) \r\n    }\r\n\r\n  return (\r\n    <div className=\"sub__form\">\r\n            <CustomTextField\r\n                placeholder=\"Tax File Number (TFN)\"\r\n                id=\"sec-g-tfn\"\r\n                label=\"Tax File Number (TFN)\"\r\n                asterisk=\"\"\r\n                name=\"tfn_aus\"\r\n                value={secG?.tfn_aus || \"\"}\r\n                onChangeFn={onChangeTFN}\r\n                formErrors={formErrors}\r\n            />\r\n            <CustomTextField\r\n                placeholder=\"TFN Exemption (if applicable)\"\r\n                id=\"sec-g-tfn-exp\"\r\n                label=\"TFN Exemption (if applicable)\"\r\n                asterisk=\"\"\r\n                name=\"tfn_exemption_aus\"\r\n                value={secG?.tfn_exemption_aus || \"\"}\r\n                onChangeFn={onChangeInp}\r\n                formErrors={formErrors}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TfnDetails","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import Form from 'react-bootstrap/Form';\r\nimport { NO_G, YES_G } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\n// import CustomTextField from '../../../Layout/CustomTextField';\r\nimport TaxResidentCountries from './TaxResidentCountries';\r\nimport TfnDetails from './TfnDetails'\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst TaxResidency = ({ onFormChange }) => {\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeInp = ({name, value}) => {\r\n        onFormChange({name, value});\r\n    }\r\n\r\n    const controlTaxResidencyOption = ({name, convrtToNum}) => {\r\n        if(name === 'is_investor_entity_tax_resident_of_aus' && convrtToNum === NO_G){\r\n            onFormChange({\r\n                name: 'is_investor_entity_tax_resident_outside_aus',\r\n                value: YES_G\r\n            });\r\n        } else if(name === 'is_investor_entity_tax_resident_outside_aus' && secG?.is_investor_entity_tax_resident_of_aus === NO_G){\r\n            onFormChange({\r\n                name: 'is_investor_entity_tax_resident_outside_aus',\r\n                value: YES_G\r\n            });\r\n        }\r\n    }\r\n \r\n    const onChangeFn = ({ name, value }) =>{\r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value: convrtToNum });\r\n        controlTaxResidencyOption({name, convrtToNum})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:'is_investor_entity_tax_resident_of_aus', value:''})\r\n            onChangeFn({name:'is_investor_entity_tax_resident_outside_aus', value:''})\r\n        }\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">G.2 Tax Residency of Investor Entity</h4>\r\n        <div className=\"section__container--box\">\r\n            <div className=\"u-padding-10y\">\r\n                <h6>1.  Is the investor entity a tax resident of Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_of_aus\"\r\n                    id=\"sec-g-tax-res-yes\"\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    checked={secG?.is_investor_entity_tax_resident_of_aus === YES_G}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_of_aus\"\r\n                    id=\"sec-g-tax-res-no\"\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    checked={secG?.is_investor_entity_tax_resident_of_aus === NO_G}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                {invFormStatus.errors?.is_investor_entity_tax_resident_of_aus? <div className=\"input__desc\">\r\n                    {renderErrorTxt(invFormStatus.errors?.is_investor_entity_tax_resident_of_aus)}\r\n                </div>: null}\r\n            </div>\r\n\r\n        {/* G2 - if tax resident */}\r\n        {secG?.is_investor_entity_tax_resident_of_aus === YES_G ?\r\n        <TfnDetails onChangeInp={onChangeInp} secG={secG} formErrors={invFormStatus.errors}/>: null}\r\n\r\n\r\n            <div className=\"u-padding-10y\">\r\n                <h6>2. Is the investor entity a tax resident of a country other than Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_outside_aus\"\r\n                    id=\"sec-g-intl-tax-res-yes\"\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    onChangeFn={onChangeFn}\r\n                    checked={secG?.is_investor_entity_tax_resident_outside_aus === YES_G}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_outside_aus\"\r\n                    id=\"sec-g-intl-tax-res-no\"\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    onChangeFn={onChangeFn}\r\n                    checked={secG?.is_investor_entity_tax_resident_outside_aus === NO_G}\r\n                />\r\n                {invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus? <div className=\"input__desc\">\r\n                    {renderErrorTxt(invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus)}\r\n                </div>: null}\r\n                <div className=\"note__box u-padding-10y\">\r\n                    <p className=\"note__box--p\">If the investor entity is a tax resident of another country, please provide tax residency information Tax Identification Number (TIN) or equivalent.</p>\r\n                </div>\r\n            </div>\r\n\r\n            {secG?.is_investor_entity_tax_resident_outside_aus === YES_G? <TaxResidentCountries onFormChange={onFormChange} />: null}\r\n        </div>\r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxResidency;","import React, {useEffect} from 'react';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport {useSelector} from 'react-redux';\r\n\r\nfunction IdentifyPepName({ onFormChange }) {\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const zeroIndErrMsgs = {\r\n        name :  invFormStatus.errors?.name? invFormStatus.errors?.name[0] : [],\r\n        position :  invFormStatus.errors?.position? invFormStatus.errors?.position[0] : [],\r\n    }\r\n\r\n    const firstIndErrMsgs = {\r\n        name :  invFormStatus.errors?.name? invFormStatus.errors?.name[1] : [],\r\n        position :  invFormStatus.errors?.position? invFormStatus.errors?.position[1] : [],\r\n    }\r\n\r\n    const getPepDet = (pepDetIndex, keyName) =>{\r\n        const address = secG?.controlling_person_pep_details.find((each, index)=> pepDetIndex===index) || {};\r\n        const val = address[keyName] || \"\" \r\n        return val\r\n    }\r\n\r\n    const onChangePepDet = ({name, value, pepDetIndex}) =>{\r\n        onFormChange({name, value, level:\"controlling_person_pep_details\", pepDetIndex:pepDetIndex}) \r\n    }\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            onFormChange({name:\"controlling_person_pep_details\", value:[] })\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h6 className=\"u-padding-10y\">Please identify the PEP</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name\"\r\n                    id=\"sec-g-pep-name-1\"\r\n                    label=\"Name\"\r\n                    asterisk=\"\"\r\n                    name=\"name\"\r\n                    value={getPepDet(0, 'name')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:0})}\r\n                    formErrors={zeroIndErrMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Position\"\r\n                    id=\"sec-g-pep-position-1\"\r\n                    label=\"Position\"\r\n                    asterisk=\"\"\r\n                    name=\"position\"\r\n                    value={getPepDet(0, 'position')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:0})}\r\n                    formErrors={zeroIndErrMsgs}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name\"\r\n                    id=\"sec-g-pep-name-2\"\r\n                    label=\"Name\"\r\n                    asterisk=\"\"\r\n                    name=\"name\"\r\n                    value={getPepDet(1, 'name')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:1})}\r\n                    formErrors={firstIndErrMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Position\"\r\n                    id=\"sec-g-pep-position-2\"\r\n                    label=\"Position\"\r\n                    asterisk=\"\"\r\n                    name=\"position\"\r\n                    value={getPepDet(1, 'position')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:1})}\r\n                    formErrors={firstIndErrMsgs}\r\n                />\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default IdentifyPepName","import React, {useEffect} from 'react'\r\nimport CustomTextField from '../../../Layout/CustomTextField'\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs'\r\n\r\nfunction TfnNumCntrlPerson({ value, onChangeIn, cntrlngPerIndex, formErrors }) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n          onChangeIn({name:\"tfn\", value:\"\"})\r\n            // secG?.controlling_person_details[0]?.tfn && onChangeIn({name:\"tfn\", value:\"\"})\r\n        }\r\n    },[])\r\n\r\n    const onChangeTFN = ({name, value}) => {\r\n      const trimmedVal = replaceAllWhiteSpaces(value)\r\n      onChangeIn({name, value:trimmedVal}) \r\n    }\r\n\r\n  return (\r\n    <div className=\"u-padding-10y\">\r\n        <CustomTextField\r\n            placeholder=\"Tax File Number (TFN)\"\r\n            id={`sec-g-cp-1-tfn-${cntrlngPerIndex}`}\r\n            label=\"Tax File Number (TFN)\"\r\n            type=\"u-margin-bottom-0\"\r\n            asterisk=\"\"\r\n            name=\"tfn\"\r\n            value={value || \"\"}\r\n            onChangeFn={onChangeTFN}\r\n            formErrors={formErrors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TfnNumCntrlPerson","import React, {useEffect} from 'react';\r\nimport CustomCheckbox from '../../../Layout/CustomCheckbox';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport {TAX_RESIDENCE_CHKBX_OTHER_G} from '../../../../../constants'\r\n\r\nfunction CntrlPerTaxResidentCountries({ onChangeChkBoxIn, getIsItemChkd, cntrlngPerIndex, formErrors, onFormChange }) {\r\n    const chkBxNname = \"tax_residence_countries\"\r\n\r\n    const onChangeChkBx = ({name, value})=> {\r\n        onChangeChkBoxIn({name, value, subLevelKey:chkBxNname})\r\n    }\r\n\r\n    const checkedStatus = (val) => {\r\n        return getIsItemChkd(val, chkBxNname)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            onFormChange({name:chkBxNname, value:[], level:\"controlling_person_details\", cntrlngPerIndex});\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n        <h6>Please indicate if you are a tax residence in one of the following countries:</h6>\r\n        <div className=\"flex-container u-margin-bottom\">\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={0}\r\n                id={`sec-g-res-antigua-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Antigua and Barbuda\"\r\n                checked={checkedStatus(0)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={1}\r\n                id={`sec-g-res-bahamas-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Bahamas\"\r\n                checked={checkedStatus(1)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={2}\r\n                id={`sec-g-res-bahrain-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Bahrain\"\r\n                checked={checkedStatus(2)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={3}\r\n                id={`sec-g-res-barbados-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Barbados\"\r\n                checked={checkedStatus(3)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={4}\r\n                id={`sec-g-res-cyprus-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Cyprus\"\r\n                checked={checkedStatus(4)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={5}\r\n                id={`sec-g-res-dominica-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Dominica\"\r\n                checked={checkedStatus(5)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={6}\r\n                id={`sec-g-res-malaysia-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Malaysia\"\r\n                checked={checkedStatus(6)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={7}\r\n                id={`sec-g-res-grenada-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Grenada\"\r\n                checked={checkedStatus(7)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={8}\r\n                id={`sec-g-res-malta-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Malta\"\r\n                checked={checkedStatus(8)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={9}\r\n                id={`sec-g-res-panama-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Panama\"\r\n                checked={checkedStatus(9)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={10}\r\n                id={`sec-g-res-qatar-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Qatar\"\r\n                checked={checkedStatus(10)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={11}\r\n                id={`sec-g-res-saint-kitts-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Saint Kitts and Nevis\"\r\n                checked={checkedStatus(11)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={12}\r\n                id={`sec-g-res-saint-lucia-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Saint Lucia\"\r\n                checked={checkedStatus(12)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n            \r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={13}\r\n                id={`sec-g-res-seychelles-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Seychelles\"\r\n                checked={checkedStatus(13)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={14}\r\n                id={`sec-g-res-turks-caicos-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Turks and Caicos Islands\"\r\n                checked={checkedStatus(14)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={15}\r\n                id={`sec-g-res-uae-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"United Arab Emirates\"\r\n                checked={checkedStatus(15)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={16}\r\n                id={`sec-g-res-vanuatu-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Vanuatu\"\r\n                checked={checkedStatus(16)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n            \r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={TAX_RESIDENCE_CHKBX_OTHER_G}\r\n                id={`sec-g-res-none-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"None of the above\"\r\n                checked={checkedStatus(TAX_RESIDENCE_CHKBX_OTHER_G)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n        </div>\r\n        {/* formErrors[chkBxNname] */}\r\n        {formErrors?.tax_residence_countries?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.tax_residence_countries)}\r\n        </div>: null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CntrlPerTaxResidentCountries","import React, {useEffect} from 'react';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport {YES_G, NO_G} from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction CntrlPerExtraDetails({getValueCntrlPersonDetails, onChageRadioFn, cntrlngPerIndex, formErrors}) {\r\n\r\n    const onChangeCbiRbi = ({name, value}) => {\r\n        onChageRadioFn({name:\"residence_rights_cbi_rbi\", value})\r\n    }\r\n\r\n    const onChangeRights = ({name, value}) => {\r\n        onChageRadioFn({name:\"residence_rights_other_juris\", value})\r\n    }\r\n\r\n    const onChangeMoreDays = ({name, value}) => {\r\n        onChageRadioFn({name:\"more_days_other_juris\", value}) //income_tax_other_juris\r\n    }\r\n\r\n    const onChangeIncmtxJur = ({name, value}) => {\r\n        onChageRadioFn({name:\"income_tax_other_juris\", value}) //\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            onChangeCbiRbi({name:\"residence_rights_cbi_rbi\", value:\"\"})\r\n            onChangeRights({name:\"residence_rights_other_juris\", value:\"\"})\r\n            onChangeMoreDays({name:\"more_days_other_juris\", value:\"\"})\r\n            onChangeIncmtxJur({name:\"income_tax_other_juris\", value:\"\"})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Did you obtain residence rights under a Citizenship by Investment (CBI) or Residence by Investment (RBI) scheme?<span>*</span></h6>\r\n            <CustomRadioInput \r\n                name={`sec-g-cbi-or-rbi-${cntrlngPerIndex}`}\r\n                id={`sec-g-cbi-or-rbi-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_cbi_rbi\") === YES_G}\r\n                onChangeFn={onChangeCbiRbi}\r\n            />\r\n            <CustomRadioInput \r\n                name={`sec-g-cbi-or-rbi-${cntrlngPerIndex}`}\r\n                id={`sec-g-cbi-or-rbi-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_cbi_rbi\") === NO_G}\r\n                onChangeFn={onChangeCbiRbi}\r\n            />\r\n            {formErrors?.residence_rights_cbi_rbi?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.residence_rights_cbi_rbi)}\r\n            </div>: null}\r\n        </div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Do you hold residence rights in any other jurisdiction(s)?<span>*</span></h6>\r\n            <CustomRadioInput\r\n                name={`sec-g-res-rights-${cntrlngPerIndex}`}\r\n                id={`sec-g-res-rights-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_other_juris\") === YES_G}\r\n                onChangeFn={onChangeRights}\r\n            />\r\n            <CustomRadioInput\r\n                name={`sec-g-res-rights-${cntrlngPerIndex}`}\r\n                id={`sec-g-res-rights-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_other_juris\") === NO_G}\r\n                onChangeFn={onChangeRights}\r\n            />\r\n            {formErrors?.residence_rights_other_juris?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.residence_rights_other_juris)}\r\n            </div>: null}\r\n        </div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Have you spent more than 90 days in any other jurisdiction(s) during the previous year?<span>*</span></h6>\r\n            <CustomRadioInput\r\n                name={`sec-g-90-days-${cntrlngPerIndex}`}\r\n                id={`sec-g-90-days-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"more_days_other_juris\") === YES_G}\r\n                onChangeFn={onChangeMoreDays}\r\n            />\r\n            <CustomRadioInput\r\n                name={`sec-g-90-days-${cntrlngPerIndex}`}\r\n                id={`sec-g-90-days-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"more_days_other_juris\") === NO_G}\r\n                onChangeFn={onChangeMoreDays}\r\n            />\r\n            {formErrors?.more_days_other_juris?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.more_days_other_juris)}\r\n            </div>: null}\r\n        </div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Have you filed income tax returns in any other jurisdiction(s) during the previous year?<span>*</span></h6>\r\n            <CustomRadioInput\r\n                name={`sec-g-returns-${cntrlngPerIndex}`}\r\n                id={`sec-g-returns-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"income_tax_other_juris\") === YES_G}\r\n                onChangeFn={onChangeIncmtxJur}\r\n            />\r\n            <CustomRadioInput\r\n                name={`sec-g-returns-${cntrlngPerIndex}`}\r\n                id={`sec-g-returns-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"income_tax_other_juris\") === NO_G}\r\n                onChangeFn={onChangeIncmtxJur}\r\n            />\r\n            {formErrors?.income_tax_other_juris?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.income_tax_other_juris)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CntrlPerExtraDetails","import React, {useEffect, useMemo} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport { CONTROLLING_PERSON_TYPE_G } from '../../../../../../constants';\r\nimport {clearGResidenceDetails} from '../../../../../../actions/Investor-Application-Form/secGActions';\r\nimport NoTinReason from '../NoTinReason';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction ResidenceDetailsOther({cntrlngPerIndex, cntrlnPerNum, firstCountryIndex, secondCountryIndex, getValueCountryType, onChangeCountry, noTinReasonDropDwn, scndNFourIndErrMsgs, thirNFivIndErrMsgs}) {\r\n    const dispatch = useDispatch();\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const countryValue = (findCountry) => {\r\n        // const findCountry = getValueCntrlPersonDetails(\"country\");\r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n            return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const removeCurrentDetails = () => {\r\n        dispatch(clearGResidenceDetails({residenceType:CONTROLLING_PERSON_TYPE_G, cntrlnPerNum}))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            removeCurrentDetails();\r\n        }\r\n    },[])\r\n  \r\n    return (\r\n    <React.Fragment>\r\n        {/* Country 1 */}\r\n        <div className=\"u-margin-bottom-xl\">\r\n            <h5 className=\"u-padding-10y\">Country 1</h5>\r\n\r\n            <div className=\"sub__form\">\r\n                {/* <CustomTextField\r\n                    placeholder=\"Country of Tax Residence\"\r\n                    id={`sec-g-con-1-tax-res-${cntrlngPerIndex}`}\r\n                    label=\"Country of Tax Residence\"\r\n                    asterisk=\"*\"\r\n                    name=\"country\"\r\n                    value={getValueCountryType('country', firstCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:firstCountryIndex})}\r\n                    formErrors={scndNFourIndErrMsgs}\r\n                /> */}\r\n                <div className=\"country__dropdown\">\r\n                    <label>Country of Tax Residence <span>*</span></label>\r\n                    <Select\r\n                        // className={`select-dropdown-country ${scndNFourIndErrMsgs?.country?.length? 'incorrect':''}`}\r\n                        className={scndNFourIndErrMsgs?.country?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"country\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue(getValueCountryType('country', firstCountryIndex))}\r\n                        onChange={(value)=>onChangeCountry({name:'country', value:value.label, cntryIndex:firstCountryIndex})}\r\n                    />\r\n\r\n                    {scndNFourIndErrMsgs?.country?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(scndNFourIndErrMsgs?.country)}\r\n                    </div>: null}\r\n                </div>\r\n                <CustomTextField\r\n                    placeholder=\"Tax Identification Number (TIN)\"\r\n                    id={`sec-g-con-1-tax-id-${cntrlngPerIndex}`}\r\n                    label=\"Tax Identification Number (TIN)\"\r\n                    asterisk=\"\"\r\n                    name=\"tin\"\r\n                    value={getValueCountryType('tin', firstCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:firstCountryIndex})}\r\n                    formErrors={scndNFourIndErrMsgs}\r\n                />\r\n            </div>\r\n\r\n            {/* <div className=\"u-margin-bottom\">\r\n                <label htmlFor=\"sec-g-con-1-reason\">If no TIN, list reason <span>*</span></label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    id={`sec-g-con-1-reason-${cntrlngPerIndex}`}\r\n                    name=\"reason_for_no_tin\"\r\n                    value={getValueCountryType('reason_for_no_tin', firstCountryIndex)}\r\n                    onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:firstCountryIndex})}\r\n                    // onChange={oneReason}\r\n                >\r\n                    <option></option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                    <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                </Form.Control>\r\n                {scndNFourIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                    {renderErrorTxt(scndNFourIndErrMsgs?.reason_for_no_tin)}\r\n                </div>: null}\r\n            </div>\r\n            {getValueCountryType('reason_for_no_tin', firstCountryIndex) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={firstCountryIndex} countryType={CONTROLLING_PERSON_TYPE_G} formErrors={scndNFourIndErrMsgs}/> : null}  */}\r\n\r\n            {getValueCountryType('tin', firstCountryIndex)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={firstCountryIndex} cntrlnPerNum={cntrlnPerNum} countryType={CONTROLLING_PERSON_TYPE_G} errrMsg={scndNFourIndErrMsgs} cntrlngPerIndex={cntrlngPerIndex}/>}\r\n            \r\n        </div>\r\n\r\n        {/* Country 2 */}\r\n        <div className=\"u-margin-bottom-xl\">\r\n            <h5 className=\"u-padding-10y\">Country 2</h5>\r\n\r\n            <div className=\"sub__form\">\r\n                {/* <CustomTextField\r\n                    placeholder=\"Country of Tax Residence\"\r\n                    id={`sec-g-con-2-tax-res-${cntrlngPerIndex}`}\r\n                    label=\"Country of Tax Residence\"\r\n                    asterisk=\"\"\r\n                    name=\"country\"\r\n                    value={getValueCountryType('country', secondCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:secondCountryIndex})}\r\n                    formErrors={thirNFivIndErrMsgs}\r\n                /> */}\r\n\r\n            <div className=\"country__dropdown\">\r\n                <label>Country of Tax Residence <span>*</span></label>\r\n                <Select\r\n                    // className={`select-dropdown-country ${thirNFivIndErrMsgs?.country?.length? 'incorrect':''}`}\r\n                    className={thirNFivIndErrMsgs?.country?.length && 'incorrect'}\r\n                    id=\"select-dropdown-country\"\r\n                    name=\"country\"\r\n                    autoFocus={false}\r\n                    options={options}\r\n                    placeholder=\"Select a Country\"\r\n                    value={countryValue(getValueCountryType('country', secondCountryIndex))}\r\n                    onChange={(value)=>onChangeCountry({name:'country', value:value.label, cntryIndex:secondCountryIndex})}\r\n                />\r\n\r\n                {thirNFivIndErrMsgs?.country?.length?\r\n                <div className=\"input__desc\">\r\n                    {renderErrorTxt(thirNFivIndErrMsgs?.country)}\r\n                </div>: null}\r\n            </div>\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Tax Identification Number (TIN)\"\r\n                    id={`sec-g-con-2-tax-id-${cntrlngPerIndex}`}\r\n                    label=\"Tax Identification Number (TIN)\"\r\n                    asterisk=\"\"\r\n                    name=\"tin\"\r\n                    value={getValueCountryType('tin', secondCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:secondCountryIndex})}\r\n                    formErrors={thirNFivIndErrMsgs}\r\n                />\r\n            </div>\r\n            {/* <div className=\"u-margin-bottom\">\r\n                <label htmlFor=\"sec-g-con-2-reason\">If no TIN, list reason <span>*</span></label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    id={`sec-g-con-2-reason-${cntrlngPerIndex}`}\r\n                    name=\"reason_for_no_tin\"\r\n                    value={getValueCountryType('reason_for_no_tin', secondCountryIndex)}\r\n                    onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:secondCountryIndex})}\r\n                    // onChange={oneReason}\r\n                >\r\n                    <option></option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                    <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                </Form.Control>\r\n                {thirNFivIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                    {renderErrorTxt(thirNFivIndErrMsgs?.reason_for_no_tin)}\r\n                </div>: null}\r\n            </div>\r\n            {getValueCountryType('reason_for_no_tin', secondCountryIndex) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={secondCountryIndex} countryType={CONTROLLING_PERSON_TYPE_G} formErrors={thirNFivIndErrMsgs}/> : null} */}\r\n            \r\n            {getValueCountryType('tin', secondCountryIndex)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={secondCountryIndex} cntrlnPerNum={cntrlnPerNum} countryType={CONTROLLING_PERSON_TYPE_G} errrMsg={thirNFivIndErrMsgs} cntrlngPerIndex={cntrlngPerIndex}/>}\r\n\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ResidenceDetailsOther","import React, { useEffect, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomCheckbox from '../../../Layout/CustomCheckbox';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { NO_G, YES_G, TRUSTEE_G, TRUST_SETTLOR_G, BENEFICIARY_G, BENEFICIAL_OWNER_G, PROTECTOR_G, CONTROLLING_PERSON_TYPE_G, TAX_RESIDENCE_CHKBX_OTHER_G } from '../../../../../constants';\r\nimport TfnNumCntrlPerson from './TfnNumCntrlPerson';\r\nimport NoTinExplain from './NoTinExplain';\r\nimport CntrlPerTaxResidentCountries from './CntrlPerTaxResidentCountries';\r\nimport CntrlPerExtraDetails from './CntrlPerExtraDetails';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport ResidenceDetailsOther from './subCntrlnPersonDetails/ResidenceDetailsOther';\r\nimport countryList from 'react-select-country-list';\r\nimport moment from 'moment/moment';\r\n\r\nfunction ControllingPersonDetails({onFormChange, cntrlngPerIndex=0}) {\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const cntrlnPerNum = cntrlngPerIndex + 1 //this is 0 in tax-residency-cntry-details for investor(sec-g)\r\n    // const firstCountryIndex = cntrlngPerIndex + cntrlngPerIndex; //for storing 4 types of values in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    // const secondCountryIndex = cntrlngPerIndex + cntrlngPerIndex + 1\r\n    const firstCountryIndex = 0;\r\n    const secondCountryIndex = 1;\r\n    const errScndNFourInd = cntrlngPerIndex + cntrlngPerIndex; //for storing 4 types of errors in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    const errThirNFivInd = cntrlngPerIndex + cntrlngPerIndex + 1\r\n    const dateBefore18Years = moment().subtract(18, 'years').format();\r\n\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            onFormChange({name:'controlling_person_details', value:[]})\r\n        }\r\n    },[])\r\n\r\n    const cntrlnPerErrMsgs = {\r\n        type : invFormStatus.errors?.type? invFormStatus.errors?.type[cntrlngPerIndex] : [],\r\n        title : invFormStatus.errors?.title? invFormStatus.errors?.title[cntrlngPerIndex] : [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[cntrlngPerIndex] : [],\r\n        given_name : invFormStatus.errors?.given_name? invFormStatus.errors?.given_name[cntrlngPerIndex] : [],\r\n        dob : invFormStatus.errors?.dob? invFormStatus.errors?.dob[cntrlngPerIndex] : [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[cntrlngPerIndex] : [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[cntrlngPerIndex] : [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[cntrlngPerIndex] : [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[cntrlngPerIndex] : [],\r\n        country_ctrl : invFormStatus.errors?.country_ctrl? invFormStatus.errors?.country_ctrl[cntrlngPerIndex] : [],\r\n        is_tax_resident_of_aus : invFormStatus.errors?.is_tax_resident_of_aus? invFormStatus.errors?.is_tax_resident_of_aus[cntrlngPerIndex] : [],\r\n        is_investor_entity_tax_resident_outside_aus_ctrl : invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus_ctrl? invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus_ctrl[cntrlngPerIndex] : [],\r\n        tfn : invFormStatus.errors?.tfn? invFormStatus.errors?.tfn[cntrlngPerIndex] : [],\r\n        tax_residence_countries: invFormStatus.errors?.tax_residence_countries? invFormStatus.errors?.tax_residence_countries[cntrlngPerIndex] : [],\r\n        residence_rights_cbi_rbi:invFormStatus.errors?.residence_rights_cbi_rbi? invFormStatus.errors?.residence_rights_cbi_rbi[cntrlngPerIndex] : [],\r\n        residence_rights_other_juris:invFormStatus.errors?.residence_rights_other_juris? invFormStatus.errors?.residence_rights_other_juris[cntrlngPerIndex] : [],\r\n        more_days_other_juris:invFormStatus.errors?.more_days_other_juris? invFormStatus.errors?.more_days_other_juris[cntrlngPerIndex] : [],\r\n        income_tax_other_juris:invFormStatus.errors?.income_tax_other_juris? invFormStatus.errors?.income_tax_other_juris[cntrlngPerIndex] : []\r\n    }\r\n\r\n    const scndNFourIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[errScndNFourInd+2] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[errScndNFourInd+2] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[errScndNFourInd+2] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[errScndNFourInd+2] : [],\r\n    }\r\n\r\n    const thirNFivIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[errThirNFivInd+2] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[errThirNFivInd+2] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[errThirNFivInd+2] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[errThirNFivInd+2] : [],\r\n    }\r\n\r\n    // const tempCountryDetailsIndex = cntrlngPerIndex+2\r\n    // const firstCountryIndex = tempCountryDetailsIndex + 0; //for storing 4 types of values in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    // const secondCountryIndex = tempCountryDetailsIndex + 1;\r\n\r\n    // const tempCountryDetailsIndex = cntrlngPerIndex+2\r\n    // const firstCountryIndex = cntrlngPerIndex + 2 + cntrlngPerIndex; //for storing 4 types of values in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    // const secondCountryIndex = cntrlngPerIndex + 2 + cntrlngPerIndex + 1\r\n   \r\n    // const getValueCountryType = (keyName, cntryIndex) =>{\r\n    //     const address = secG?.tax_residence_country_details.find((each)=> each?.type === CONTROLLING_PERSON_TYPE_G && each?.cntryIndex === cntryIndex) || {};\r\n    //     const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" //return val even if it's zero\r\n    //     return val\r\n    // }\r\n\r\n    const getValueCountryType = (keyName, cntryIndex) =>{\r\n        const allAddressDetArr = secG?.tax_residence_country_details?.filter((each)=> each?.type === CONTROLLING_PERSON_TYPE_G && each?.controlling_per_num === cntrlnPerNum) || [];\r\n        const address = allAddressDetArr.find((each, index)=> each?.type === CONTROLLING_PERSON_TYPE_G && index === cntryIndex) || {};\r\n        const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" \r\n        return val\r\n    }\r\n\r\n    const getValueCntrlPersonDetails = (keyName) => {\r\n        const address = secG?.controlling_person_details.find((each, index)=> index === cntrlngPerIndex) || {};\r\n        const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" \r\n        return val\r\n    }\r\n\r\n    const getIsItemChkd = (value, subLevelKey) => {\r\n        const currTxCntrs = getValueCntrlPersonDetails(subLevelKey, cntrlngPerIndex)\r\n        const activeItems = currTxCntrs? [...currTxCntrs] : []\r\n        return activeItems.includes(value)\r\n    }\r\n\r\n    const onChangeIn = ({name, value}) => {\r\n        onFormChange({name, value, level:\"controlling_person_details\", cntrlngPerIndex}) \r\n    }\r\n    const onChageRadioFn = ({name, value}) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value: convrtToNum, level:\"controlling_person_details\", cntrlngPerIndex});        \r\n    }\r\n\r\n    const controlTaxResidencyOption = ({name, convrtToNum}) => {\r\n        if(name === 'is_tax_resident_of_aus' && convrtToNum === NO_G){\r\n            onChageRadioFn({\r\n                name: 'is_investor_entity_tax_resident_outside_aus',\r\n                value: YES_G\r\n            });\r\n        } else if(name === 'is_investor_entity_tax_resident_outside_aus' && getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === NO_G){\r\n            onChageRadioFn({\r\n                name: 'is_investor_entity_tax_resident_outside_aus',\r\n                value: YES_G\r\n            });\r\n        }\r\n    }\r\n\r\n    const eachOnChange = ({ name, value }) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onChageRadioFn({ name, value: convrtToNum });\r\n        controlTaxResidencyOption({name, convrtToNum})\r\n    }\r\n\r\n    const onChangeCountry = ({name, value, cntryIndex}) =>{\r\n        onFormChange({name, value, level:\"country_details\", countryType:CONTROLLING_PERSON_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const noTinReasonDropDwn = ({name, value, cntryIndex}) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"country_details\", countryType:CONTROLLING_PERSON_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const onChangeChkBoxIn = ({name, value, subLevelKey}) => {\r\n        // const currTxCntrs = getValueCntrlPersonDetails('tax_resident_countries', cntrlngPerIndex)\r\n        const convrtToNum = value && parseInt(value);\r\n        const currTxCntrs = getValueCntrlPersonDetails(subLevelKey, cntrlngPerIndex)\r\n        const activeItems = currTxCntrs? [...currTxCntrs] : []\r\n        const isNoneOfAbove = activeItems.indexOf(TAX_RESIDENCE_CHKBX_OTHER_G); //check if has None of the above option\r\n        const indexOfItem = activeItems.indexOf(convrtToNum); //get index if item is there inside list\r\n        \r\n        if(subLevelKey === \"tax_residence_countries\"){ //code specific only for check boxes having \"None of the above\" type\r\n            if(convrtToNum === TAX_RESIDENCE_CHKBX_OTHER_G){\r\n                activeItems.splice(0,activeItems.length); //remve everythin from the array\r\n                isNoneOfAbove === -1 && activeItems.push(TAX_RESIDENCE_CHKBX_OTHER_G);//removed everything and add only none-of-above val \r\n            } else {\r\n                isNoneOfAbove > -1 && activeItems.splice(isNoneOfAbove, 1); //remove the element from array if already present\r\n                indexOfItem > -1 && activeItems.splice(indexOfItem, 1); //remove the element from array if already present\r\n                indexOfItem === -1 && activeItems.push(convrtToNum); //add element to the array\r\n            }\r\n        } else {\r\n            indexOfItem > -1 && activeItems.splice(indexOfItem, 1); //remove the element from array if already present\r\n            indexOfItem === -1 && activeItems.push(convrtToNum); //add element to the array\r\n        }\r\n\r\n        onFormChange({name, value:[...activeItems], level:\"controlling_person_details\", cntrlngPerIndex});        \r\n        return\r\n    }\r\n\r\n    const onChangeCntrlPerType = ({name, value})=> {\r\n        onChangeChkBoxIn({name, value, subLevelKey:'type'})\r\n    }\r\n\r\n    const countryValue = () => {\r\n\r\n        const findCountry = getValueCntrlPersonDetails(\"country\");\r\n\r\n        const value = options.find((country) => {\r\n        if(findCountry){\r\n          return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n        }\r\n        return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeIn({ name: 'country', value: value.label })\r\n    }\r\n\r\n  return (\r\n    <div className=\"u-margin-bottom-lg\">\r\n        <h5 className=\"u-padding-y\">Controlling Person {cntrlngPerIndex+1}</h5>\r\n        <div>\r\n            <h6>Type of Controlling Person<span>*</span></h6>\r\n            <div className=\"u-padding-y\">\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={TRUSTEE_G}\r\n                    id={`sec-g-type-trustee-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Trustee\"\r\n                    checked={getIsItemChkd(TRUSTEE_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={TRUST_SETTLOR_G}\r\n                    id={`sec-g-type-trust-settlor-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Trust Settlor\"\r\n                    checked={getIsItemChkd(TRUST_SETTLOR_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={BENEFICIARY_G}\r\n                    id={`sec-g-type-beneficiary-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Beneficiary\"\r\n                    checked={getIsItemChkd(BENEFICIARY_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={BENEFICIAL_OWNER_G}\r\n                    id={`sec-g-type-beneficial-owner-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Beneficial Owner\"\r\n                    checked={getIsItemChkd(BENEFICIAL_OWNER_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={PROTECTOR_G}\r\n                    id={`sec-g-type-protector-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Protector\"\r\n                    checked={getIsItemChkd(PROTECTOR_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n                {cntrlnPerErrMsgs?.type?.length? <div className=\"input__desc\">\r\n                    {renderErrorTxt(cntrlnPerErrMsgs?.type)}\r\n                </div>: null}\r\n            </div>\r\n\r\n            <div className=\"sub__form\">\r\n                <CustomTextField \r\n                    placeholder=\"Mr / Mrs / Dr / Ms\"\r\n                    id={`sec-g-cp-1-title-${cntrlngPerIndex}`}\r\n                    label=\"Title\"\r\n                    asterisk=\"\"\r\n                    name=\"title\"\r\n                    value={getValueCntrlPersonDetails(\"title\")}\r\n                    // value={secG?.controlling_person_details[0]?.title || \"\"}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField \r\n                    id={`sec-g-cp-1-dob-${cntrlngPerIndex}`}\r\n                    label=\"Date of birth\"\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    inputType=\"date\"\r\n                    asterisk=\"*\" \r\n                    name=\"dob\"\r\n                    // value={secG?.controlling_person_details[0]?.dob || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"dob\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                    maxDate={dateBefore18Years?.split(\"T\")[0]}\r\n                />\r\n\r\n                <CustomTextField \r\n                    placeholder=\"Surname\"\r\n                    id={`sec-g-cp-1-surname-${cntrlngPerIndex}`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    // value={secG?.controlling_person_details[0]?.surname || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"surname\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n                <CustomTextField \r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-g-cp-1-given-${cntrlngPerIndex}`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"given_name\"\r\n                    // value={secG?.controlling_person_details[0]?.given_name || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"given_name\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n            </div>\r\n\r\n            <h6 className=\"u-padding-10y u-margin-bottom-lg\">Primary Residential Address</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Unit No./Level\"\r\n                    id={`sec-g-cp-1-unit-${cntrlngPerIndex}`}\r\n                    label=\"Unit No./Level\"\r\n                    asterisk=\"\"\r\n                    name=\"unit_no\"\r\n                    value={getValueCntrlPersonDetails(\"unit_no\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Number\"\r\n                    id={`sec-g-cp-1-street-no-${cntrlngPerIndex}`}\r\n                    label=\"Street Number\"\r\n                    asterisk=\"\"\r\n                    name=\"street_no\"\r\n                    value={getValueCntrlPersonDetails(\"street_no\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Name\"\r\n                    id={`sec-g-cp-1-street-${cntrlngPerIndex}`}\r\n                    label=\"Street Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"street_name\"\r\n                    value={getValueCntrlPersonDetails(\"street_name\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n                <CustomTextField \r\n                    placeholder=\"Postcode\"\r\n                    id={`sec-g-cp-1-postcode-${cntrlngPerIndex}`}\r\n                    label=\"Postcode\"\r\n                    asterisk=\"*\"\r\n                    name=\"postcode\"\r\n                    // value={secG?.controlling_person_details[0]?.postcode || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"postcode\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n                <div className=\"country__dropdown u-margin-bottom-3\">\r\n                    <label>Country <span>*</span></label>\r\n                    <Select\r\n                        className={cntrlnPerErrMsgs?.country_ctrl?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"country_ctrl\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {cntrlnPerErrMsgs?.country_ctrl?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(cntrlnPerErrMsgs?.country_ctrl)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"u-padding-10y\">\r\n                <h6>1. Is the Controlling Person a tax resident of Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name={`is_tax_resident_of_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-tax-res-yes-${cntrlngPerIndex}`}\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_tax_resident_of_aus === YES_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === YES_G}\r\n                    onChangeFn={({ name, value }) => eachOnChange({name:\"is_tax_resident_of_aus\", value })}\r\n                    />\r\n                <CustomRadioInput\r\n                    name={`is_tax_resident_of_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-tax-res-no-${cntrlngPerIndex}`}\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_tax_resident_of_aus === NO_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === NO_G}\r\n                    onChangeFn={({name, value})=>eachOnChange({name:\"is_tax_resident_of_aus\", value })}\r\n                />\r\n                {cntrlnPerErrMsgs?.is_tax_resident_of_aus?.length? <div className=\"input__desc\">\r\n                    {renderErrorTxt(cntrlnPerErrMsgs?.is_tax_resident_of_aus)}\r\n                </div>: null}\r\n                {getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === YES_G?\r\n                <TfnNumCntrlPerson \r\n                    cntrlngPerIndex={cntrlngPerIndex}\r\n                    onChangeIn={onChangeIn}\r\n                    value={getValueCntrlPersonDetails('tfn')}\r\n                    formErrors={cntrlnPerErrMsgs}/> : null}\r\n            </div>\r\n\r\n            <div  className=\"u-padding-10y\">\r\n                <h6>2. Is the Controlling Person a US citizen or tax resident of a country other than Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name={`is_investor_entity_tax_resident_outside_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-intl-res-yes-${cntrlngPerIndex}`}\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_investor_entity_tax_resident_outside_aus === YES_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G}\r\n                    onChangeFn={({name, value})=>eachOnChange({name:\"is_investor_entity_tax_resident_outside_aus\", value })}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`is_investor_entity_tax_resident_outside_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-intl-res-no-${cntrlngPerIndex}`}\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_investor_entity_tax_resident_outside_aus === NO_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === NO_G}\r\n                    onChangeFn={({name, value})=>eachOnChange({name:\"is_investor_entity_tax_resident_outside_aus\", value })}\r\n                />\r\n                {cntrlnPerErrMsgs?.is_investor_entity_tax_resident_outside_aus_ctrl?.length? <div className=\"input__desc\">\r\n                    {renderErrorTxt(cntrlnPerErrMsgs?.is_investor_entity_tax_resident_outside_aus_ctrl)}\r\n                </div>: null}\r\n            </div>\r\n\r\n            {getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G?\r\n            <ResidenceDetailsOther \r\n            cntrlngPerIndex={cntrlngPerIndex} \r\n            firstCountryIndex={firstCountryIndex} \r\n            secondCountryIndex={secondCountryIndex} \r\n            getValueCountryType={getValueCountryType} \r\n            onChangeCountry={onChangeCountry} \r\n            noTinReasonDropDwn={noTinReasonDropDwn} \r\n            scndNFourIndErrMsgs={scndNFourIndErrMsgs} \r\n            thirNFivIndErrMsgs={thirNFivIndErrMsgs} \r\n            cntrlnPerNum={cntrlnPerNum}/>: null} \r\n\r\n        </div>\r\n            {secG?.are_controlling_person_relation_outside_aus === YES_G? \r\n            <>\r\n                {getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G? \r\n                <CntrlPerTaxResidentCountries \r\n                onChangeChkBoxIn={onChangeChkBoxIn} \r\n                getIsItemChkd={getIsItemChkd} \r\n                cntrlngPerIndex={cntrlngPerIndex} \r\n                formErrors={cntrlnPerErrMsgs}\r\n                onFormChange={onFormChange}/> : null}\r\n\r\n                {getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G && !getIsItemChkd(TAX_RESIDENCE_CHKBX_OTHER_G, \"tax_residence_countries\")? \r\n                <CntrlPerExtraDetails \r\n                getValueCntrlPersonDetails={getValueCntrlPersonDetails} \r\n                onChageRadioFn={onChageRadioFn} \r\n                cntrlngPerIndex={cntrlngPerIndex} \r\n                formErrors={cntrlnPerErrMsgs}/>: null}\r\n            </>\r\n            : null}\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default ControllingPersonDetails ","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NO_G, YES_G } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport IdentifyPepName from \"./IdentifyPepName\"\r\nimport ControllingPersonDetails from './ControllingPersonDetails'\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle } from '@fortawesome/fontawesome-free-solid';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ControllingPersons = ({onFormChange}) => {\r\n  \r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"are_controlling_person_pep\", value:\"\"});\r\n            onChangeFn({name:\"are_controlling_person_relation_outside_aus\", value:\"\"});\r\n        }\r\n    },[])\r\n\r\n    const onChangeFn = ({name, value}) =>{ \r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n    }\r\n  \r\n    return (\r\n    <div className=\"section__container\">\r\n            <h4 className=\"section__container--subtitle\">G.3 Controlling Persons</h4>\r\n\r\n            <div className=\"section__container--box\">\r\n                <div className=\"terms u-margin-bottom\">\r\n                    <p>A Controlling Person is any individual who directly or indirectly exercises control over an entity. For a Trust, this includes all Trustees, Settlors, Protectors and Beneficiaries. For a company, this includes any beneficial owners controlling more than 25% of company shares or senior managing officials.</p>\r\n                </div>\r\n\r\n               <div className=\"u-margin-bottom-lg\">\r\n                    <div className=\"u-padding-10y\">\r\n                        <h6>1. Are any of the Controlling Persons, in relation to the Investor, a Politically Exposed Person <a href=\"http://silcgroup.com/definitions/\" target=\"_blank\"><FontAwesomeIcon className=\"info-icon\" icon={faInfoCircle} /></a><span>*</span></h6>\r\n                        <div>\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_pep\"\r\n                                id=\"sec-g-cp-inv-pep-yes\"\r\n                                content=\"Yes\"\r\n                                val={YES_G}\r\n                                checked={secG?.are_controlling_person_pep === YES_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_pep\"\r\n                                id=\"sec-g-cp-inv-pep-no\"\r\n                                content=\"No\"\r\n                                val={NO_G}\r\n                                checked={secG?.are_controlling_person_pep === NO_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            {invFormStatus.errors?.are_controlling_person_pep? <div className=\"input__desc\">\r\n                                {renderErrorTxt(invFormStatus.errors?.are_controlling_person_pep)}\r\n                            </div>: null}\r\n                            {secG?.are_controlling_person_pep === YES_G? <IdentifyPepName onFormChange={onFormChange}/>: null}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"u-padding-10y\">\r\n                        <h6>2. Are any of the Controlling Persons, in relation to the Investor, tax residents of a jurisdiction outside Australia?<span>*</span></h6>\r\n                        <div>\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_relation_outside_aus\"\r\n                                id=\"sec-g-cp-outside-aus-yes\"\r\n                                content=\"Yes - please complete below for each Controlling Person who is a tax resident of a jurisdiction outside Australia\"\r\n                                val={YES_G}\r\n                                type=\"\"\r\n                                checked={secG?.are_controlling_person_relation_outside_aus === YES_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_relation_outside_aus\"\r\n                                id=\"sec-g-cp-outside-aus-no\"\r\n                                content=\"No\"\r\n                                val={NO_G}\r\n                                type=\"\"\r\n                                checked={secG?.are_controlling_person_relation_outside_aus === NO_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            {invFormStatus.errors?.are_controlling_person_relation_outside_aus? <div className=\"input__desc\">\r\n                                {renderErrorTxt(invFormStatus.errors?.are_controlling_person_relation_outside_aus)}\r\n                            </div>: null}\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n\r\n                {secG?.are_controlling_person_relation_outside_aus === YES_G?\r\n                <>\r\n                    <ControllingPersonDetails onFormChange={onFormChange} cntrlngPerIndex={0}/>\r\n                    <ControllingPersonDetails onFormChange={onFormChange} cntrlngPerIndex={1}/>\r\n                </> : null}\r\n            </div>\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default ControllingPersons;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TaxStatus from './SubSections/TaxStatus';\r\nimport TaxResidency from './SubSections/TaxResidency';\r\nimport ControllingPersons from './SubSections/ControllingPersons';\r\nimport { PASSIVE_NFE_G, YES_G, PASSIVE_INCOME_MORE_THAN_50_G, OTHER_ENTITY_G } from '../../../../constants';\r\n\r\nconst SectionGContent = ({onFormChange}) => {\r\n    const secG = useSelector((store)=>store.secG); \r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  return (\r\n    <div className=\"section\"> \r\n        <h2 className=\"section__heading\">Section G: Tax Information</h2>\r\n        <ul>\r\n            <li>Section G must be completed for investors that are Australian company, a Foreign company, a Trust or a Superannuation Fund.</li>\r\n        </ul>\r\n\r\n        <TaxStatus onFormChange={onFormChange} />\r\n\r\n        {/* Section G2 */}\r\n        {secG?.fatca_and_crs_status === PASSIVE_NFE_G || secG?.is_located_in_non_participating_crs_jurisdiction === YES_G || secG?.active_non_financial_entity_type === PASSIVE_INCOME_MORE_THAN_50_G || secG?.active_non_financial_entity_type === OTHER_ENTITY_G ? \r\n            <TaxResidency onFormChange={onFormChange} />: null\r\n        }\r\n        \r\n        {secG?.fatca_and_crs_status === PASSIVE_NFE_G || secG?.is_located_in_non_participating_crs_jurisdiction === YES_G ?\r\n            <ControllingPersons onFormChange={onFormChange} />: null\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionGContent;"],"names":["_ref","placeholder","id","label","type","asterisk","belowText","inputType","name","value","onChangeFn","_ref$formErrors","formErrors","maxDate","invFormStatus","useSelector","store","_jsxs","className","concat","_formErrors$name$","_formErrors$name","isArray","length","isIncorrect","children","htmlFor","_jsx","required","onChange","e","_e$target","target","disabled","loader","max","renderErrorTxt","onChangeInp","secG","useEffect","CustomTextField","fatca_status_description","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","_invFormStatus$errors4","giin","errors","CustomRadioInput","content","val","DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G","checked","fatca_status_exclude_giin","EXCEPTED_FINANCIAL_INSTITUTION_G","NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G","NON_PARTICIPATING_FINANCIAL_INSTITUTION_G","OTHER_FACTA_STATUS_G","TrusteeGiinComp","trustee_giin","OtherFactaInp","YES_G","is_located_in_non_participating_crs_jurisdiction","NO_G","AUSTRALIAN_PUBLIC_LISTED_COMPANY_G","active_non_financial_entity_type","FOREIGN_PUBLIC_LISTED_COMPANY_G","GOVERNMENTAL_ENTITY_G","PASSIVE_INCOME_MORE_THAN_50_G","OTHER_ENTITY_G","onFormChange","_ref3","convrtToNum","parseInt","FINANCIAL_INSTITUTION_G","fatca_and_crs_status","ACTIVE_NFE_G","PASSIVE_NFE_G","GiinAndStatus","_ref2","ActiveNonFinancialEntity","href","_formErrors$explanati","getValueCountryType","onChangeCountry","cntryIndex","cntrlnPerNum","countryType","explanation_for_tin_not_issued","uniqId","_errrMsg$reason_for_n","noTinReasonDropDwn","errrMsg","_Fragment","Form","as","COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS","INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN","COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED","reason_for_no_tin","NoTinExplain","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_zeroIndErrMsgs$count","_zeroIndErrMsgs$count2","_firstIndErrMsgs$coun","_firstIndErrMsgs$coun2","dispatch","useDispatch","options","useMemo","countryList","getData","zeroIndErrMsgs","country","tin","firstIndErrMsgs","level","INVESTOR_ENTITY_TYPE_G","keyName","_secG$tax_residence_c","address","tax_residence_country_details","filter","each","find","index","countryValue","findCountry","_country$label","toLowerCase","clearGResidenceDetails","residenceType","Select","autoFocus","_ref4","NoTinReason","_ref5","tfn_aus","trimmedVal","replaceAllWhiteSpaces","tfn_exemption_aus","is_investor_entity_tax_resident_of_aus","controlTaxResidencyOption","TfnDetails","is_investor_entity_tax_resident_outside_aus","TaxResidentCountries","position","getPepDet","pepDetIndex","controlling_person_pep_details","onChangePepDet","_ref6","onChangeIn","cntrlngPerIndex","_formErrors$tax_resid","onChangeChkBoxIn","getIsItemChkd","chkBxNname","onChangeChkBx","subLevelKey","checkedStatus","CustomCheckbox","styleType","TAX_RESIDENCE_CHKBX_OTHER_G","tax_residence_countries","_formErrors$residence","_formErrors$residence2","_formErrors$more_days","_formErrors$income_ta","getValueCntrlPersonDetails","onChageRadioFn","onChangeCbiRbi","onChangeRights","onChangeMoreDays","onChangeIncmtxJur","residence_rights_cbi_rbi","residence_rights_other_juris","more_days_other_juris","income_tax_other_juris","_scndNFourIndErrMsgs$","_scndNFourIndErrMsgs$2","_thirNFivIndErrMsgs$c","_thirNFivIndErrMsgs$c2","firstCountryIndex","secondCountryIndex","scndNFourIndErrMsgs","thirNFivIndErrMsgs","CONTROLLING_PERSON_TYPE_G","React","_invFormStatus$errors17","_invFormStatus$errors18","_invFormStatus$errors19","_invFormStatus$errors20","_invFormStatus$errors21","_invFormStatus$errors22","_invFormStatus$errors23","_invFormStatus$errors24","_invFormStatus$errors25","_invFormStatus$errors26","_invFormStatus$errors27","_invFormStatus$errors28","_invFormStatus$errors29","_invFormStatus$errors30","_invFormStatus$errors31","_invFormStatus$errors32","_invFormStatus$errors33","_invFormStatus$errors34","_invFormStatus$errors35","_invFormStatus$errors36","_invFormStatus$errors37","_invFormStatus$errors38","_invFormStatus$errors39","_invFormStatus$errors40","_invFormStatus$errors41","_invFormStatus$errors42","_invFormStatus$errors43","_invFormStatus$errors44","_invFormStatus$errors45","_invFormStatus$errors46","_invFormStatus$errors47","_invFormStatus$errors48","_invFormStatus$errors49","_invFormStatus$errors50","_invFormStatus$errors51","_invFormStatus$errors52","_cntrlnPerErrMsgs$typ","_cntrlnPerErrMsgs$cou","_cntrlnPerErrMsgs$cou2","_cntrlnPerErrMsgs$is_","_cntrlnPerErrMsgs$is_2","_ref$cntrlngPerIndex","errScndNFourInd","errThirNFivInd","dateBefore18Years","moment","subtract","format","cntrlnPerErrMsgs","title","surname","given_name","dob","unit_no","street_no","street_name","postcode","country_ctrl","is_tax_resident_of_aus","is_investor_entity_tax_resident_outside_aus_ctrl","tfn","controlling_person_details","currTxCntrs","_toConsumableArray","includes","eachOnChange","_ref8","activeItems","isNoneOfAbove","indexOf","indexOfItem","splice","push","onChangeCntrlPerType","_ref9","TRUSTEE_G","TRUST_SETTLOR_G","BENEFICIARY_G","BENEFICIAL_OWNER_G","PROTECTOR_G","split","_ref10","_ref11","TfnNumCntrlPerson","_ref12","_ref13","ResidenceDetailsOther","controlling_per_num","_ref7","are_controlling_person_relation_outside_aus","CntrlPerTaxResidentCountries","CntrlPerExtraDetails","FontAwesomeIcon","icon","faInfoCircle","are_controlling_person_pep","IdentifyPepName","ControllingPersonDetails","TaxStatus","TaxResidency","ControllingPersons"],"sourceRoot":""}