{"version":3,"file":"static/js/210.19ce35a5.chunk.js","mappings":"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","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Sections/SectionD/SubSections/PrincipalPlaceOfBusiness.js","components/Forms/Sections/SectionD/SubSections/AustralianCompanyDetails.js","components/Forms/Sections/SectionD/SubSections/RegulatoryDetails.js","components/Forms/Sections/SectionD/SubSections/CompanyType.js","components/Forms/Sections/SectionD/Directors.js","components/Forms/Sections/SectionD/MoreThanFourDirectors.js","components/Forms/Sections/SectionD/SubSections/DirectorsSection.js","components/Forms/Sections/SectionD/SubSections/IdentificationDocuments.js","components/Forms/Sections/SectionD/SectionDContent.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst DropdownList = ({onSelectOption, dropdownOptions=[], addClass, renderLabel }) => {\r\n\r\n\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`}>\r\n        {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  } \r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList onSelectOption={onSelectOption} dropdownOptions={dropdownOptions} addClass={addClass} renderLabel={renderLabel}/>}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { PRINICIPAL_OFFICE_ADDRESS } from '../../../../../constants'; \r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst PrincipalPlaceOfBusiness = ({ getValueAddressType, onChangeAddress, ausStateOptions, countryOptions }) => {\r\n    \r\n    const arr = ['unit_no', 'street_name', 'street_no', 'suburb', 'state', 'postcode', 'country'];\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgsPrinOffice = {\r\n        type : invFormStatus.errors?.type? invFormStatus.errors?.type[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n        country : invFormStatus.errors?.country? invFormStatus.errors?.country[PRINICIPAL_OFFICE_ADDRESS]: [],\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            for(let i = 0; i < arr.length; i++){\r\n                onChangeAddress({ name: arr[i], value: '', addressType: PRINICIPAL_OFFICE_ADDRESS })\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const countryValue = () => {\r\n        const findCountry = getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"country\");\r\n        \r\n        const value = countryOptions.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const ausStateValue = () => {\r\n        const findState = getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"state\");\r\n        \r\n        const value = ausStateOptions().find((eachState) => {\r\n            if(findState){\r\n              return  eachState.value?.toLowerCase() === findState.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeAddress({ name:'country', value: value.label, addressType: PRINICIPAL_OFFICE_ADDRESS })\r\n    }\r\n\r\n    const onChangeAusStates = (value) => {\r\n        onChangeAddress({ name:'state', value: value.value, addressType: PRINICIPAL_OFFICE_ADDRESS })\r\n    }\r\n    \r\n    return (\r\n    <div>\r\n        <h6 className=\"u-padding-10y\">Full Postal Address</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Unit No./Level\"\r\n                    id=\"sec-d-business-unit-no\"\r\n                    label=\"Unit No./Level\"\r\n                    asterisk=\"\"\r\n                    name=\"unit_no\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"unit_no\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Number\"\r\n                    id=\"sec-d-business-street-number\"\r\n                    label=\"Street Number\"\r\n                    name=\"street_no\"\r\n                    asterisk=\"\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"street_no\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Name\"\r\n                    id=\"sec-d-business-street-name\"\r\n                    label=\"Street Name\"\r\n                    name=\"street_name\"\r\n                    asterisk=\"\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"street_name\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                />\r\n                \r\n                <CustomTextField\r\n                    placeholder=\"Suburb/Town\"\r\n                    id=\"sec-d-business-suburb\"\r\n                    label=\"Suburb/Town\"\r\n                    type=\"form-input\"\r\n                    asterisk=\"\"\r\n                    name=\"suburb\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"suburb\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                /> \r\n\r\n                <div className=\"form-input country__dropdown\">\r\n                    <label>State</label>\r\n                    <Select\r\n                        className={errMsgsPrinOffice?.state?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"state\"\r\n                        autoFocus={false}\r\n                        placeholder=\"Select a State\"\r\n                        options={ausStateOptions()}\r\n                        value={ausStateValue()}\r\n                        onChange={onChangeAusStates}                    />\r\n                    {errMsgsPrinOffice?.state?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(errMsgsPrinOffice?.state)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Postcode\"\r\n                    id=\"sec-d-business-postcode\"\r\n                    label=\"Postcode\"\r\n                    type=\"form-input\"\r\n                    asterisk=\"\"\r\n                    name=\"postcode\"\r\n                    value={getValueAddressType(PRINICIPAL_OFFICE_ADDRESS, \"postcode\")}\r\n                    onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: PRINICIPAL_OFFICE_ADDRESS })}\r\n                    formErrors={errMsgsPrinOffice}\r\n                /> \r\n\r\n                <div className=\"country__dropdown u-margin-bottom\">\r\n                    <label>Country</label>\r\n                    <Select\r\n                        className={errMsgsPrinOffice?.country?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"country\"\r\n                        autoFocus={false}\r\n                        options={countryOptions}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {errMsgsPrinOffice?.country?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(errMsgsPrinOffice?.country)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrincipalPlaceOfBusiness;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport {\r\n    PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS,\r\n    PRINCIPAL_PLACE_NOT_SAME_REGISTERED_ADDRESS,\r\n    REGISTERED_OFFICE_ADDRESS,\r\n    AUSTRALIAN_STATES,\r\n} from '../../../../../constants';\r\nimport PrincipalPlaceOfBusiness from './PrincipalPlaceOfBusiness';\r\nimport CustomCheckbox from '../../../Layout/CustomCheckbox';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nconst AustralianCompanyDetails = ({ onFormChange }) => {\r\n\r\n    //secD reducer store\r\n    const secD = useSelector((store) => store.secD);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const countryOptions = [{id:1, value:'Australia', label:'Australia'}]\r\n\r\n    const ausStateOptions = () => {\r\n        const formattedOptions = AUSTRALIAN_STATES.map((each, index)=>{\r\n            return { id: index+1, label: each, value: each}\r\n        })\r\n        return formattedOptions\r\n    }\r\n\r\n    const errMsgsregOffice = {\r\n        type : invFormStatus.errors?.type? invFormStatus.errors?.type[REGISTERED_OFFICE_ADDRESS]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[REGISTERED_OFFICE_ADDRESS]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[REGISTERED_OFFICE_ADDRESS]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[REGISTERED_OFFICE_ADDRESS]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[REGISTERED_OFFICE_ADDRESS]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[REGISTERED_OFFICE_ADDRESS]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[REGISTERED_OFFICE_ADDRESS]: [],\r\n        country : invFormStatus.errors?.country? invFormStatus.errors?.country[REGISTERED_OFFICE_ADDRESS]: [],\r\n      }\r\n\r\n\r\n    const countryValue = () => {\r\n        const findCountry = getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"country\");\r\n        \r\n        const value = countryOptions.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const ausStateValue = () => {\r\n        const findState = getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"state\");\r\n        \r\n        const value = ausStateOptions().find((eachState) => {\r\n            if(findState){\r\n              return  eachState.value?.toLowerCase() === findState.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeAddress({ name:'country', value: value.label, addressType: REGISTERED_OFFICE_ADDRESS })\r\n    }\r\n\r\n    const onChangeAusStates = (value) => {\r\n        onChangeAddress({ name:'state', value: value.value, addressType: REGISTERED_OFFICE_ADDRESS })\r\n    }\r\n\r\n    //For text input fields\r\n    const onChangeHandler = ({ name, value }) => {\r\n        onFormChange({ name, value });\r\n    }\r\n\r\n    const onChangeACN = ({name, value}) => {\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeHandler({name, value:trimmedVal})\r\n    }\r\n\r\n    //FOR SOLO CHECKBOX\r\n    const handleChangeCheckbox = ({ name }) => { \r\n        // const convrtToNum = value && parseInt(value);\r\n        if(secD?.is_address_of_registered_place_same_as_primary !== PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS){\r\n            onFormChange({ name, value: PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS });\r\n            return;\r\n        }\r\n        onFormChange({ name, value: PRINCIPAL_PLACE_NOT_SAME_REGISTERED_ADDRESS });\r\n    }\r\n\r\n    const onChangeAddress = ({ name, value, addressType }) => {\r\n        onFormChange({ name, value, level: \"address_details\", type: addressType });\r\n    }\r\n\r\n    const getValueAddressType = (addressType, keyName) => { \r\n        // const address = secD?.address_details.find((each) => addressType === each?.address_type) || {};\r\n        const address = secD?.address_details.find((each) => addressType === each?.type) || {};\r\n        const val = address[keyName] || \"\";\r\n        return val;\r\n    }\r\n    \r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">D.1 Australian Company Details</h4>\r\n        {/* placeholder, id, label, type, asterisk, belowText, inputType */}\r\n        <div className=\"section__container--box\">\r\n            <div>\r\n                <CustomTextField\r\n                    placeholder=\"Full name as registered by ASIC\"\r\n                    id=\"sec-d-fullname-asic\"\r\n                    label=\"Full name as registered by ASIC\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"full_name\"\r\n                    value={secD?.full_name}\r\n                    onChangeFn={onChangeHandler}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"sub__form\">\r\n                <CustomTextField \r\n                    placeholder=\"ACN\"\r\n                    id=\"sec-d-acn\"\r\n                    label=\"ACN\"\r\n                    asterisk=\"*\"\r\n                    name=\"acn\"\r\n                    value={secD?.acn}\r\n                    onChangeFn={onChangeACN}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n                <CustomTextField \r\n                    placeholder=\"ABN\"\r\n                    id=\"sec-d-abn\"\r\n                    label=\"ABN\"\r\n                    asterisk=\"\"\r\n                    name=\"abn\"\r\n                    value={secD?.abn}\r\n                    onChangeFn={onChangeHandler}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n            </div>\r\n\r\n            {/* Full address of registered office (PO Box is not acceptable) */}\r\n            <div>\r\n                <h6 className=\"u-padding-10y\">Full address of registered office (PO Box is not acceptable)</h6>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-d-reg-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"unit_no\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-d-reg-street-number\"\r\n                        label=\"Street Number\"\r\n                        name=\"street_no\"\r\n                        asterisk=\"\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"street_no\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Street Name\"\r\n                        id=\"sec-d-reg-street-name\"\r\n                        label=\"Street Name\"\r\n                        asterisk=\"*\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"street_name\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    />\r\n            \r\n                    \r\n                    <CustomTextField\r\n                        placeholder=\"Suburb/Town\"\r\n                        id=\"sec-d-reg-suburb\"\r\n                        label=\"Suburb/Town\"\r\n                        type=\"form-input\"\r\n                        name=\"suburb\"\r\n                        asterisk=\"*\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"suburb\")}\r\n                        onChangeFn={({ name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS })}\r\n                        formErrors={errMsgsregOffice}\r\n                    /> \r\n\r\n                    <div className=\"form-input country__dropdown\">\r\n                        <label>State <span>*</span></label>\r\n                        <Select\r\n                            className={errMsgsregOffice?.state?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"state\"\r\n                            autoFocus={false}\r\n                            placeholder=\"Select a State\"\r\n                            options={ausStateOptions()}\r\n                            value={ausStateValue()}\r\n                            onChange={onChangeAusStates}                    />\r\n                        {errMsgsregOffice?.state?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsregOffice?.state)}\r\n                        </div>: null}\r\n                    </div>\r\n                    \r\n                    <CustomTextField\r\n                        placeholder=\"Postcode\"\r\n                        id=\"sec-d-reg-postcode\"\r\n                        label=\"Postcode\"\r\n                        type=\"form-input\"\r\n                        name=\"postcode\"\r\n                        asterisk=\"*\"\r\n                        value={getValueAddressType(REGISTERED_OFFICE_ADDRESS, \"postcode\")}\r\n                        onChangeFn={({  name, value }) => onChangeAddress({ name, value, addressType: REGISTERED_OFFICE_ADDRESS})}\r\n                        formErrors={errMsgsregOffice}\r\n                    /> \r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country <span>*</span></label>\r\n                        <Select\r\n                            className={errMsgsregOffice?.country?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={countryOptions}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue()}\r\n                            onChange={onChangeSelectHandler}\r\n                        />\r\n\r\n                        {errMsgsregOffice?.country?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsregOffice?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Postal address is the same as the registered office */}\r\n                <div className=\"u-margin-bottom-m\">\r\n                    <CustomCheckbox \r\n                        name=\"is_address_of_registered_place_same_as_primary\"\r\n                        val={PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS}\r\n                        id=\"principal-place-same-registered-office\"\r\n                        styleType=\"dark\"\r\n                        content=\"Postal address is the same as the registered office\"\r\n                        onChangeFn={handleChangeCheckbox}\r\n                        checked={secD?.is_address_of_registered_place_same_as_primary === PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS}\r\n                    />\r\n                    {invFormStatus.errors?.is_address_of_registered_place_same_as_primary? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_address_of_registered_place_same_as_primary)}\r\n                    </div>: null} \r\n                </div>\r\n                \r\n                {/* Full Postal Address */}\r\n                {secD?.is_address_of_registered_place_same_as_primary !== PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS ?\r\n                <PrincipalPlaceOfBusiness getValueAddressType={getValueAddressType} onChangeAddress={onChangeAddress} ausStateOptions={ausStateOptions} countryOptions={countryOptions}/>: null}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AustralianCompanyDetails;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AUSTRALIAN_LISTED_COMPANY_D, MAJOR_OWNED_SUBSIDIARY_D, NOT_A_REGULATED_COMPANY_D, REGULATED_COMPANY_D } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst RegulatoryDetails = ({ onFormChange }) => {\r\n\r\n    //secD reducer store\r\n    const secD = useSelector((store) => store.secD);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeFn = ({ name, value }) =>{\r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">D.2 Regulatory / Listing Details</h4>\r\n      \r\n      <div className=\"section__container--box\">\r\n          <div>\r\n                <h6>Is the company regulated or listed?<span>*</span></h6>\r\n\r\n                <CustomRadioInput\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"company-not-regulated\"\r\n                    content=\"Company is not regulated or listed\"\r\n                    val={NOT_A_REGULATED_COMPANY_D} \r\n                    checked={secD?.company_regulation_detail === NOT_A_REGULATED_COMPANY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n\r\n                <CustomRadioInput\r\n                    type=\"row-input\"\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"company-regulated\"\r\n                    content=\"Regulated company - A company whose activities are subject to the oversight of a Commonwealth, State or Territory statutory regulator. In this context “Regulated” means subject to supervision beyond that provided by ASIC as a company registration body. For example, Australian Financial Services Licensee (AFSL), Australian Credit Licensee (ACL) or Registrable Superannuation Entity (RSE) Licensee\"\r\n                    val={REGULATED_COMPANY_D}\r\n                    checked={secD?.company_regulation_detail === REGULATED_COMPANY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n\r\n                <CustomRadioInput\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"australian-listed\"\r\n                    content=\"Australian listed company\"\r\n                    val={AUSTRALIAN_LISTED_COMPANY_D}\r\n                    checked={secD?.company_regulation_detail === AUSTRALIAN_LISTED_COMPANY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n\r\n                <CustomRadioInput\r\n                    name=\"company_regulation_detail\"\r\n                    id=\"majority-owned-subsidiary\"\r\n                    content=\"Majority-owned subsidiary of an Australian listed company\"\r\n                    val={MAJOR_OWNED_SUBSIDIARY_D}\r\n                    checked={secD?.company_regulation_detail === MAJOR_OWNED_SUBSIDIARY_D}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                {invFormStatus.errors?.company_regulation_detail? <div className=\"input__desc\">\r\n                    {renderErrorTxt(invFormStatus.errors?.company_regulation_detail)}\r\n                </div>: null} \r\n          </div>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RegulatoryDetails;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { PROPRIETARY_COMPANY_TYPE, PUBLIC_COMPANY_TYPE } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CompanyType = ({ onFormChange }) => {\r\n\r\n  const secD = useSelector((store) => store.secD);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const onChangeFn = ({ name, value }) => {\r\n    const convrtToNum = value && parseInt(value);\r\n    onFormChange({ name, value: convrtToNum });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">D.3 Company Type</h4>\r\n\r\n      <div className=\"section__container--box\">\r\n        <div>\r\n          <h6>Is the company type public or proprietary?<span>*</span></h6>\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-d-public-company\"\r\n            content=\"Public (companies whose name does NOT include the words “Pty Ltd” or “Proprietary Ltd”; generally listed companies)\"\r\n            val={PUBLIC_COMPANY_TYPE}\r\n            checked={secD?.company_type === PUBLIC_COMPANY_TYPE}\r\n            onChangeFn={onChangeFn}\r\n          />\r\n\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-d-proprietary\"\r\n            content=\"Proprietary (companies whose name ends with “Proprietary Ltd” or “Pty Ltd”; also known as private companies)\"\r\n            val={PROPRIETARY_COMPANY_TYPE}\r\n            checked={secD?.company_type === PROPRIETARY_COMPANY_TYPE}\r\n            onChangeFn={onChangeFn}\r\n          />\r\n          {invFormStatus.errors?.company_type? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.company_type)}\r\n          </div>: null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyType;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst Directors = ({ directorId, directorDetails, investorFormId, onChangeDirector, itemIndex }) => {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgs = {\r\n        name : invFormStatus.errors?.name? invFormStatus.errors?.name[itemIndex]: [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[itemIndex]: [],\r\n    }\r\n\r\n    const onChangeIn = ({ name, value }) => {\r\n        onChangeDirector({\r\n            name,\r\n            value,\r\n            directorId\r\n        });\r\n    }\r\n    \r\n    return (\r\n    <div key={directorId}>\r\n        <h6 className=\"u-padding-10y\">{`Director ${itemIndex + 1}`}</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-d-director${directorId}-given-name`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"name\"\r\n                    value={directorDetails?.name || \"\"}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={errMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Surname\"\r\n                    id={`sec-d-director${directorId}-surname`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    value={directorDetails?.surname || \"\"}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={errMsgs}\r\n                />    \r\n            </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Directors","import React, { useState } from 'react';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, MORE_THAN_FOUR_DIRECTORS_SEC_D_E } from '../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst MoreThanFourDirectors = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const docTypeValue = {label:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][1], value:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][0]}\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) =>{ \r\n        if(file){ //files && files.length -- to make it work for multiple files\r\n            //call api to upload files\r\n            const fileName = file.name;                 \r\n            const formData = new FormData();\r\n\r\n            formData.append('file', file); \r\n            formData.append('type', type.value);\r\n            formData.append('section', 'd');\r\n            formData.append('investor_form_id', investorFormId);\r\n\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...docTypeValue},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <DocPlaceholder\r\n            onAddFiles={onAddFiles}\r\n            uploadedDocs={uploadedDocs}\r\n            onClickRemove={onClickRemove}\r\n            uniqId=\"moredirectors\"\r\n            onClickDel={onClickDel}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoreThanFourDirectors","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { directorDetails } from '../../../../../reducers/Investor-Application-Form/secDReducer';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport Directors from '../Directors';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport MoreThanFourDirectors from '../MoreThanFourDirectors';\r\nimport { NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E } from '../../../../../constants';\r\n\r\nconst DirectorsSection = ({ onFormChange, investorFormId }) => {\r\n\r\n  const secD = useSelector((store) => store.secD);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const addDirectorDetails = (numOfDirectors) => {\r\n\r\n    let upd = [];\r\n    const prevDirLen = secD?.directors_details?.length || 0;\r\n    \r\n    if(prevDirLen > numOfDirectors){\r\n      upd = secD?.directors_details?.filter((each, index) => (index + 1) <= numOfDirectors);\r\n\r\n      onFormChange({\r\n        name:\"directors_details\",\r\n        value:[...upd]\r\n      });\r\n      return\r\n    }\r\n    else if(prevDirLen === numOfDirectors){\r\n      return\r\n    }\r\n    else{\r\n      const newLen = numOfDirectors - prevDirLen;\r\n      upd = [...secD?.directors_details];\r\n\r\n      const newArr = Array.from({ length: newLen }, () => ({\r\n        ...directorDetails\r\n      }))\r\n\r\n      onFormChange({\r\n        name:\"directors_details\",\r\n        value:[...upd, ...newArr]\r\n      })\r\n      return\r\n    }\r\n  }\r\n\r\n  const onChangeDirector = ({ name, value, directorId }) => {\r\n    \r\n    const updIndex = directorId - 1;\r\n    const upd = [...secD?.directors_details];\r\n    upd[updIndex][name] = value;\r\n\r\n    onFormChange({\r\n      name: \"directors_details\",\r\n      value: [...upd]\r\n    });\r\n    return\r\n  }\r\n\r\n  const renderDirectors = () => { \r\n    return secD?.directors_details?.map((item, index)=> {\r\n        const tempIndex = index + 1;\r\n        const uniqId = tempIndex //item?.id || tempIndex\r\n        if((index < secD?.number_of_directors) && (secD?.number_of_directors !== NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E)){ //phase1 fix. remove this condition in phase-2\r\n          return <Directors \r\n                      key={uniqId}\r\n                      directorId={uniqId}\r\n                      directorDetails={item}\r\n                      onChangeDirector={onChangeDirector}\r\n                      itemIndex={index}\r\n                    /> \r\n        }\r\n        return null\r\n    })\r\n  }\r\n\r\n  const onChangeRadioFn = ({ name, value }) => {\r\n    const convrtToNum = parseInt(value);\r\n    onFormChange({\r\n      name,\r\n      value: convrtToNum\r\n    })\r\n\r\n    if(convrtToNum > 0){\r\n      //update number if directors\r\n      addDirectorDetails(convrtToNum);\r\n    }\r\n    else if(convrtToNum === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E){\r\n      addDirectorDetails(0);\r\n    }\r\n\r\n  }\r\n    \r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">D.4 Directors (Proprietary Companies Only)</h4>\r\n\r\n      <div className=\"section__container--box\">\r\n          <h6>How many directors are there?<span>*</span></h6>\r\n          <div className=\"u-margin-bottom row-space-between\">\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-1\"\r\n                content=\"1\"\r\n                val=\"1\"\r\n                checked={secD?.number_of_directors === 1}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-2\"\r\n                content=\"2\"\r\n                val=\"2\"\r\n                checked={secD?.number_of_directors === 2}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-3\"\r\n                content=\"3\"\r\n                val=\"3\"\r\n                checked={secD?.number_of_directors === 3}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-4\"\r\n                content=\"4\"\r\n                val=\"4\"\r\n                checked={secD?.number_of_directors === 4}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"number_of_directors\"\r\n                id=\"sec-d-directors-more\"\r\n                content=\"more than 4\"\r\n                val={`${NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}`}\r\n                checked={secD?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n          </div>\r\n          <React.Fragment>\r\n          {invFormStatus.errors?.number_of_directors? <div className=\"input__desc\">\r\n              {renderErrorTxt(invFormStatus.errors?.number_of_directors)}\r\n            </div>: null}\r\n\r\n            {secD?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E?\r\n            <>\r\n              <h6 className=\"u-padding-y\">If more than four directors, please provide full names of all the directors on a separate sheet and upload</h6>\r\n              <MoreThanFourDirectors investorFormId={investorFormId} />\r\n            </>\r\n            : null}\r\n          </React.Fragment>\r\n          \r\n          {renderDirectors()}\r\n\r\n          {/* {Array.from({ length: numOfDirectors }, (_, index) => <Directors directorId ={index} />)} */}\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default DirectorsSection;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DocPlaceholder from '../../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, IDENTIFICATION_DOCUMENTS_SEC_D, ASIC_EXTRACT_DOC, SEC_D_DOC_EXTRA_LABEL_MAIN } from '../../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport CustomDropdown from '../../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../../utils/documentUploads';\r\nimport { useToast } from '../../../../CustomToast';\r\n\r\nconst IdentificationDocuments = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const doNotShowExtraLabel = [ASIC_EXTRACT_DOC[0][0]]\r\n    const secD = useSelector((store) => store.secD);\r\n    const [selectedDocType, setSelectedDocType] = useState({label:\"Select type of document\", value:\"\"})\r\n    const [selectedDirectorNum, setSelectedDirectorNum] = useState({label:`${SEC_D_DOC_EXTRA_LABEL_MAIN} - 1`, value:1})\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async (file, type={label:'', value:''}, extraDetails={label:'', value:''}) => {\r\n        \r\n        if(file){ \r\n            const fileName = file.name;                  \r\n            const metadata = JSON.stringify([{\"owner\":`${SEC_D_DOC_EXTRA_LABEL_MAIN} ${extraDetails.value}`}])\r\n            \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            if(!doNotShowExtraLabel.includes(type.value)){\r\n                formData.append(\"metadata\", metadata)\r\n            }\r\n            formData.append('section', 'd');\r\n            formData.append('investor_form_id', investorFormId);\r\n            \r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            doNotShowExtraLabel,\r\n            selectedDocType:{...selectedDocType},\r\n            selectedEntityNum:{...selectedDirectorNum}\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const updateSelectedOption = (option) => {\r\n        //update selected document type to the state\r\n        setSelectedDocType({...option})\r\n    }\r\n\r\n    const updateSelectedDirectorNum = (option) => {\r\n        setSelectedDirectorNum({...option})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n    const inestorOptions = () => {\r\n        const tempOptionsArr = [];\r\n        const tempNoOfDirectors = secD?.number_of_directors === -1? 4 : secD?.number_of_directors || 1\r\n        for (let i = 1; i <= tempNoOfDirectors; i++) {\r\n            tempOptionsArr.push([i, `${SEC_D_DOC_EXTRA_LABEL_MAIN} - ${i}`])\r\n        }\r\n        return tempOptionsArr\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n    <h4 className=\"section__container--subtitle\">D.5 Identification Documents</h4>\r\n\r\n    <div className=\"section__container--box\">\r\n        <h6>Please provide a copy of the following Identification document:</h6>\r\n        <ul>\r\n            <li>Full ASIC company extract</li>\r\n        </ul>\r\n\r\n        <h6>For each Beneficial Owner, provide ONE of the following documents</h6>\r\n        <ul>\r\n            <li>Australian State / Territory driver's licence containing a photograph of the person</li>\r\n            <li>Australian passport (a passport that has expired within the preceding 2 years is acceptable)</li>\r\n            <li>Card issued under a State or Territory for the purpose of proving a person's age containing a photograph of the person</li>\r\n            <li>Foreign passport or similar travel document containing a photograph and the signature of the person*</li>\r\n            <li>Foreign driver's licence that contains a photograph of the person in whose name the document is issued*</li>\r\n            <li>* Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator</li>\r\n            <li>If you are unable to provide one of the above documents, please contact us at <a href=\"mailto:investors@silcgroup.com\">investors@silcgroup.com</a></li>\r\n        </ul>\r\n\r\n        <h6 className=\"u-padding-y\">Please attach documents</h6>\r\n        <div className=\"sub__form\" style={{gap:16}}>\r\n            <div style={{minWidth: 350}}>\r\n                <CustomDropdown \r\n                    dropdownOptions={inestorOptions()}\r\n                    selectedOption={selectedDirectorNum}\r\n                    updateSelectedOption={updateSelectedDirectorNum}\r\n                />\r\n            </div>\r\n            <div style={{minWidth: 375}}>\r\n                <CustomDropdown\r\n                    addClass='control-dropdown-height'\r\n                    dropdownOptions={IDENTIFICATION_DOCUMENTS_SEC_D}\r\n                    selectedOption={selectedDocType}\r\n                    updateSelectedOption={updateSelectedOption}\r\n                    extraLabel={`(${SEC_D_DOC_EXTRA_LABEL_MAIN} - ${selectedDirectorNum?.value})`}\r\n                    doNotShowExtraLabelSpecial={doNotShowExtraLabel}\r\n                />\r\n            </div>\r\n        </div>\r\n        {selectedDocType?.value ?\r\n            <div className='u-padding-y'>\r\n                <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"section-d\"/>\r\n            </div>: null\r\n        }\r\n        <div className=\"note__box\">\r\n            <p><span>Note:</span><br /> For definitions of Politically Exposed Person, Controlling Person and Beneficial Owner <a href=\"https://www.silcgroup.com/definitions/\">https://www.silcgroup.com/definitions/</a></p>\r\n        </div>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default IdentificationDocuments;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AustralianCompanyDetails from './SubSections/AustralianCompanyDetails';\r\nimport RegulatoryDetails from './SubSections/RegulatoryDetails';\r\nimport CompanyType from './SubSections/CompanyType';\r\nimport DirectorsSection from './SubSections/DirectorsSection';\r\nimport IdentificationDocuments from './SubSections/IdentificationDocuments';\r\nimport {formatAndPrintDocs} from '../../../../utils/validations/helperFunc';\r\n\r\nconst SectionDContent = ({ onFormChange, investorFormId, removeDocFromArr }) => {\r\n\r\n  const secD = useSelector((store) => store.secD);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n        <h2 className=\"section__heading\">Section D: Australian Company</h2>\r\n        <ul>\r\n            <li>Section D to be completed by Australian companies and Australian company trustee only.</li>\r\n        </ul>\r\n\r\n        <AustralianCompanyDetails onFormChange={onFormChange} />\r\n\r\n        <RegulatoryDetails onFormChange={onFormChange} />\r\n\r\n        <CompanyType onFormChange={onFormChange} />\r\n\r\n        <DirectorsSection onFormChange={onFormChange} investorFormId={investorFormId} />\r\n\r\n        <IdentificationDocuments investorFormId={investorFormId}/>\r\n\r\n        {secD?.documents?.length > 0? formatAndPrintDocs(secD?.documents, removeDocFromArr): null} \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionDContent;"],"names":["_ref","optionsList","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","_jsx","className","concat","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","onClickVisible","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","_invFormStatus$errors4","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_errMsgsPrinOffice$st","_errMsgsPrinOffice$st2","_errMsgsPrinOffice$co","_errMsgsPrinOffice$co2","getValueAddressType","onChangeAddress","ausStateOptions","countryOptions","arr","invFormStatus","useSelector","store","errMsgsPrinOffice","type","errors","PRINICIPAL_OFFICE_ADDRESS","unit_no","street_no","street_name","suburb","state","postcode","country","useEffect","i","length","name","addressType","CustomTextField","placeholder","id","asterisk","onChangeFn","formErrors","_ref3","_ref4","_ref5","Select","autoFocus","options","findState","find","eachState","_eachState$value","toLowerCase","ausStateValue","onChange","renderErrorTxt","_ref6","findCountry","_country$label","countryValue","_errMsgsregOffice$sta","_errMsgsregOffice$sta2","_errMsgsregOffice$cou","_errMsgsregOffice$cou2","_invFormStatus$errors17","_invFormStatus$errors18","onFormChange","secD","AUSTRALIAN_STATES","index","errMsgsregOffice","REGISTERED_OFFICE_ADDRESS","onChangeHandler","level","keyName","address_details","full_name","acn","trimmedVal","replaceAllWhiteSpaces","abn","_ref7","_ref8","_ref9","_ref10","CustomCheckbox","val","PRINCIPAL_PLACE_SAME_REGISTERED_ADDRESS","styleType","content","is_address_of_registered_place_same_as_primary","PRINCIPAL_PLACE_NOT_SAME_REGISTERED_ADDRESS","checked","PrincipalPlaceOfBusiness","convrtToNum","parseInt","CustomRadioInput","NOT_A_REGULATED_COMPANY_D","company_regulation_detail","REGULATED_COMPANY_D","AUSTRALIAN_LISTED_COMPANY_D","MAJOR_OWNED_SUBSIDIARY_D","PUBLIC_COMPANY_TYPE","company_type","PROPRIETARY_COMPANY_TYPE","directorId","directorDetails","onChangeDirector","investorFormId","itemIndex","errMsgs","surname","onChangeIn","toast","useToast","docTypeValue","MORE_THAN_FOUR_DIRECTORS_SEC_D_E","uploadedDocs","setUploadedDocs","onUploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","fileName","formData","_yield$uploadFiles","success","url","data","extradata","_args","arguments","wrap","_context","prev","next","undefined","FormData","append","uploadFiles","sent","loader","SUCCESS","FAILED","docUrl","resData","updateDocArray","stop","_x","apply","onClickRemove","removeDocFromArray","onClickDel","_callee2","docData","_yield$deleteFile","_context2","delLoader","deleteFile","error","_x2","_Fragment","DocPlaceholder","onAddFiles","files","addNewDocToArray","selectedDocType","_objectSpread","uniqId","addDirectorDetails","numOfDirectors","_secD$directors_detai","_secD$directors_detai2","upd","prevDirLen","directors_details","filter","_toConsumableArray","newLen","newArr","Array","from","updIndex","onChangeRadioFn","NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E","number_of_directors","React","MoreThanFourDirectors","_secD$directors_detai3","item","Directors","renderDirectors","doNotShowExtraLabel","ASIC_EXTRACT_DOC","setSelectedDocType","_useState3","SEC_D_DOC_EXTRA_LABEL_MAIN","_useState4","selectedDirectorNum","setSelectedDirectorNum","_useState5","_useState6","extraDetails","metadata","JSON","stringify","href","style","gap","minWidth","CustomDropdown","tempOptionsArr","tempNoOfDirectors","push","inestorOptions","IDENTIFICATION_DOCUMENTS_SEC_D","selectedEntityNum","_secD$documents","removeDocFromArr","AustralianCompanyDetails","RegulatoryDetails","CompanyType","DirectorsSection","IdentificationDocuments","documents","formatAndPrintDocs"],"sourceRoot":""}