{"version":3,"file":"static/js/418.036c5dce.chunk.js","mappings":"qLAgCA,EA9BqB,SAAHA,GAAuF,IAAjFC,EAAcD,EAAdC,eAAcC,EAAAF,EAAEG,gBAAAA,OAAe,IAAAD,EAAC,GAAEA,EAAEE,EAAQJ,EAARI,SAAUC,EAAWL,EAAXK,YAAaC,EAAcN,EAAdM,eAE3EC,GAAcC,EAAAA,EAAAA,QAAO,MAErBC,EAAqB,SAACC,GACtBH,EAAYI,UAAYJ,EAAYI,QAAQC,SAASF,EAAMG,SAC7DP,GAEJ,GAEAQ,EAAAA,EAAAA,YAAU,WAIR,OAFAC,SAASC,iBAAiB,QAASP,GAAoB,GAEhD,WACLM,SAASE,oBAAoB,QAASR,GAAoB,EAC5D,CACF,GAAG,CAACF,IAEJ,IAE4BW,EAE5B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,2BAAAC,OAA6BjB,GAAYkB,IAAKf,EAAYgB,UAH9CL,EAIJf,EAJoBe,EAAYM,KAAI,SAACC,GAAI,OAF5C,SAAHC,GAAA,IAAKC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAK,OAAMT,EAAAA,EAAAA,KAAA,KAAoBU,QAAS,kBAAI5B,EAAe,CAAC0B,MAAAA,EAAOC,MAAAA,GAAO,EAACL,SAAElB,EAAY,CAACsB,MAAAA,EAAOC,MAAAA,KAAO,GAAAP,OAAlFO,GAAuF,CAEtEE,CAAa,CAACH,MAAMF,EAAK,GAAIG,MAAMH,EAAK,IAAI,MAOnH,ECeA,EAxCuB,SAAHzB,GAA8H,IAAxHG,EAAeH,EAAfG,gBAAiB4B,EAAc/B,EAAd+B,eAAgBC,EAAoBhC,EAApBgC,qBAAoBC,EAAAjC,EAAEI,SAAAA,OAAQ,IAAA6B,EAAC,GAAEA,EAAAC,EAAAlC,EAAEmC,WAAAA,OAAU,IAAAD,EAAC,GAAEA,EAAAE,EAAApC,EAAEqC,2BAAAA,OAA0B,IAAAD,EAAC,GAAEA,EAExIE,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAEnBlC,EAAiB,WAAH,OAASqC,GAAW,SAAAC,GAAS,OAAKA,CAAS,GAAE,EAO3DvC,EAAc,SAACwC,GACnB,IAAMC,GAAkB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQlB,QAAS,GAEnC,OAAGU,EAA2BU,SAAe,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQjB,OACtCkB,EACO,OAAND,QAAM,IAANA,GAAAA,EAAQlB,OAASQ,EACnB,GAANd,OAAUwB,EAAOlB,MAAK,KAAAN,OAAIc,GAErBW,CAET,EAEA,OACME,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,iBAAgBG,SAAA,EAC3ByB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,2BAA2BS,QAASvB,EAAeiB,SAAA,EAC9DJ,EAAAA,EAAAA,KAAA,SAAAI,SAAQlB,EAAY0B,MACpBZ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMR,EAAQS,EAAAA,IAAYC,EAAAA,SAE9CV,IAAUvB,EAAAA,EAAAA,KAACkC,EAAY,CACxBpD,eAxBa,SAAHyB,GAAwB,IAAnBC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAC9BI,EAAqB,CAACL,MAAAA,EAAOC,MAAAA,IAC7BtB,GACF,EAsBUH,gBAAiBA,EACjBC,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,MAI5B,C,0ECYA,IAlDwB,SAAHN,GAA2H,IAArHsD,EAAWtD,EAAXsD,YAAaC,EAAEvD,EAAFuD,GAAI5B,EAAK3B,EAAL2B,MAAO6B,EAAIxD,EAAJwD,KAAMC,EAAQzD,EAARyD,SAAUC,EAAS1D,EAAT0D,UAAWC,EAAS3D,EAAT2D,UAAWC,EAAI5D,EAAJ4D,KAAMhC,EAAK5B,EAAL4B,MAAOiC,EAAU7D,EAAV6D,WAAUC,EAAA9D,EAAE+D,WAAAA,OAAU,IAAAD,EAAC,CAAC,EAACA,EAAEE,EAAOhE,EAAPgE,QACzHC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IAmChE,OACEjB,EAAAA,EAAAA,MAAA,OAAK5B,UAAS,cAAAC,OAAgBmC,GAAa,GAAE,KAAAnC,OAb3B,WAEc,IAAD+C,EAGvBC,EAJR,QAAGN,EAAWH,MACTU,EAAAA,EAAAA,IAAQP,EAAWH,MAEQ,QAApBQ,EAACL,EAAWH,GAAM,UAAE,IAAAQ,IAAnBA,EAAqBG,UAEL,QAAjBF,EAACN,EAAWH,UAAK,IAAAS,IAAhBA,EAAkBE,QAIjC,CAGmDC,GAAe,YAAY,IAAKjD,SAAA,EAC7EyB,EAAAA,EAAAA,MAAA,SAAOyB,QAASlB,EAAGhC,SAAA,CAAEI,EAAM,IAAc,KAAZ8B,GAAgBtC,EAAAA,EAAAA,KAAA,QAAAI,SAAM,MAAU,SAC7DJ,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oBAAoBoC,KAAMG,GAAuB,OAAQL,YAAaA,EAAaC,GAAIA,EAAImB,SAAsB,KAAZjB,EAA6BG,KAAMA,EAAMhC,MAAOA,GAAS,GAAI+C,SApClK,SAACC,GACtB,IAAAC,EAAsBD,EAAE/D,OAAjB+C,EAAIiB,EAAJjB,KAAMhC,EAAKiD,EAALjD,MACbiC,EAAW,CAACD,KAAAA,EAAMhC,MAAAA,GACpB,EAiCmNkD,WAAYb,EAAcc,OAAQC,IAAKhB,GAAW,OAE9PN,GAAWvC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaG,UACtCJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBG,SAAEmC,MACzB,KA/BTK,EAAWH,IACTU,EAAAA,EAAAA,IAAQP,EAAWH,KACbqB,EAAAA,EAAAA,GAAelB,EAAWH,KAE1BqB,EAAAA,EAAAA,GAAe,CAAClB,EAAWH,KAG/B,OA6BX,C,+FCyDA,IAtGuB,SAAH5D,GAA4H,IAADkF,EAAAlF,EAAtHmF,aAAAA,OAAY,IAAAD,EAAC,GAAEA,EAAEE,EAAUpF,EAAVoF,WAAYC,EAAarF,EAAbqF,cAAeC,EAAUtF,EAAVsF,WAAUC,EAAAvF,EAAEwF,SAAAA,OAAQ,IAAAD,GAAKA,EAAAE,EAAAzF,EAAE0F,OAAAA,OAAM,IAAAD,EAAC,2BAA0BA,EAAEE,EAAM3F,EAAN2F,OAE3HC,EAAe,CAAC,YAAa,aAAc,YAAa,mBASxDC,EAAyB,SAACC,GAK9B,IAJA,IAAMC,EAAK,IAAIC,aACTC,EAAQlF,SAASmF,eAAe,eAAD7E,OAAgBsE,IAC7CQ,EAAUF,EAAVE,MAECC,EAAI,EAAGA,EAAID,EAAM5B,OAAQ6B,IAAK,CACrC,IAAMC,EAAOF,EAAMC,GAEfN,IAAaO,EAAKzC,MACpBmC,EAAGO,MAAMC,IAAIF,EAEjB,CAEAJ,EAAME,MAAQJ,EAAGI,KACnB,EAYMK,EAAY,SAAHC,GAA8B,IAAzBX,EAAQW,EAARX,SAAUY,EAAQD,EAARC,SAC5B,OAAW,OAARA,QAAQ,IAARA,GAAAA,EAAUC,WACJ3D,EAAAA,EAAAA,MAAA,QAAM4D,MAAO,CAACC,WAAW,IAAItF,SAAA,CAAC,KAACJ,EAAAA,EAAAA,KAAC2F,EAAAA,GAAe,IAAG,QAEnD3F,EAAAA,EAAAA,KAAA,QACEyF,MAAO,CAACC,WAAW,IACnBhF,QAAS,kBAXE,SAAHH,GAA8B,IAAzBoE,EAAQpE,EAARoE,SAAUY,EAAQhF,EAARgF,SACjCpB,EAAW,CAACQ,SAAAA,EAAUiB,QAASL,IAC/Bb,EAAuBC,EACzB,CAQyBkB,CAAe,CAAClB,SAAAA,EAAUY,SAAAA,GAAU,EAACnF,UAElDJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAAC7B,UAAU,oBAAoB8B,KAAM+D,EAAAA,OAEjE,EAEMC,EAAe,SAACC,EAAQrB,EAAUY,GACtC,OAAGS,IAAWC,EAAAA,IAEVpE,EAAAA,EAAAA,MAAAqE,EAAAA,SAAA,CAAA9F,SAAA,EACEJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMoE,EAAAA,MACtBd,EAAU,CAACV,SAAAA,EAAUY,SAAAA,OAGnBS,IAAWI,EAAAA,IACXvE,EAAAA,EAAAA,MAAA,UAAQ5B,UAAU,cAAcS,QAAS,kBA/B9B,SAACiE,GACrBT,EAAcS,GACdD,EAAuBC,EACzB,CA4ByD0B,CAAc1B,EAAS,EAACvE,SAAA,CAAC,kBAAcJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CAACC,KAAMuE,EAAAA,SAC5GN,IAAWO,EAAAA,IACXvG,EAAAA,EAAAA,KAAC2F,EAAAA,GAAe,SADnB,CAGR,EAEMa,EAAkB,SAACjB,GAAc,IAADkB,EAAAC,EAAAC,EAEsBC,EAA1D,OAAW,OAARrB,QAAQ,IAARA,GAAc,QAANkB,EAARlB,EAAUlD,YAAI,IAAAoE,GAAdA,EAAgBjG,OAAiB,OAAR+E,QAAQ,IAARA,GAAsB,QAAdmB,EAARnB,EAAUsB,oBAAY,IAAAH,GAAtBA,EAAwBlG,MAC5C,IAANN,OAAWqF,EAASlD,KAAK7B,MAAK,OAAAN,OAAc,OAARqF,QAAQ,IAARA,GAAsB,QAAdqB,EAARrB,EAAUsB,oBAAY,IAAAD,OAAd,EAARA,EAAwBpG,MAAK,KACjD,OAAR+E,QAAQ,IAARA,GAAc,QAANoB,EAARpB,EAAUlD,YAAI,IAAAsE,GAAdA,EAAgBnG,MAClB,IAANN,OAAWqF,EAASlD,KAAK7B,MAAK,KAEzB,EACT,EAiBA,OACEqB,EAAAA,EAAAA,MAACiF,EAAAA,SAAc,CAAA1G,SAAA,EACbJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBG,UAC7ByB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,4BAA2BG,SAAA,EACxCJ,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,OAAOD,GAAE,eAAAlC,OAAiBsE,GAAUvE,UAAS,oCAAAC,OAA4D,IAAMsD,SAzF9G,SAACC,GACpB,IACMsD,GADcC,MAAMC,UAAUC,MAAMC,KAAK1D,EAAE/D,OAAOsF,QAAU,IACnCoC,QAAO,SAAClC,GAAI,OAAIT,EAAa7C,SAASsD,EAAK7C,KAAK,IAE/E4B,EAAW8C,EACb,EAoF2J1C,SAAUA,EAAUE,OAAQA,KAC/KvE,EAAAA,EAAAA,KAAA,SAAOsD,QAAO,eAAApD,OAAiBsE,GAAUpC,GAAG,iBAAiBnC,UAAU,+BAA8BG,SAAC,sDAlB1GJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BG,SACtC4D,EAAa3D,KAAI,SAACC,GACjB,OACEuB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,sCAAqCG,SAAA,EAClDJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAcP,OAAO,SAAS2H,KAAU,OAAJ/G,QAAI,IAAJA,GAAAA,EAAMgH,OAAY,OAAJhH,QAAI,IAAJA,OAAI,EAAJA,EAAMgH,OAAQ,KAAMC,IAAI,aAAYnH,SAAEE,EAAK4E,KAAKzC,QAASzC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBG,SAAEoG,EAAgBlG,MAC/KN,EAAAA,EAAAA,KAAA,QAAMyF,MAAO,CAACC,WAAW,GAAGtF,SAAE2F,EAAazF,EAAKsD,OAAQtD,EAAK4E,KAAKzC,KAAMnC,OAFhBA,EAAK4E,KAAKzC,KAKxE,QAgBR,C,2MClEA,I,8BCmJA,EA5KgC,SAAH5D,GAAiBA,EAAZ2I,aAAmC,IAArBC,EAAc5I,EAAd4I,eACtCC,GAAQC,EAAAA,EAAAA,KAIdxG,IAHa4B,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM4E,IAAI,KACxB7E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,KAElB1B,EAAAA,EAAAA,UAAS,CAACZ,MAAM,0BAA2BC,MAAM,MAAIY,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5F0G,EAAexG,EAAA,GAAEyG,EAAkBzG,EAAA,GAC1C0G,GAAwC3G,EAAAA,EAAAA,UAAS,IAAG4G,GAAA1G,EAAAA,EAAAA,GAAAyG,EAAA,GAA7C/D,EAAYgE,EAAA,GAAEC,EAAeD,EAAA,GAqB9BE,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMrD,GAAI,IAAA7C,EAAAsC,EAAA6D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,GAAzB9G,EAAIyG,EAAA1F,OAAA,QAAAgG,IAAAN,EAAA,GAAAA,EAAA,GAAC,CAACtI,MAAM,GAAIC,MAAM,KAChDyE,EAAK,CAAD+D,EAAAE,KAAA,SAMiD,OAL9CxE,EAAWO,EAAKzC,MAChB+F,EAAW,IAAIa,UACZC,OAAO,OAAQpE,GACxBsD,EAASc,OAAO,OAAQjH,EAAK5B,OAC7B+H,EAASc,OAAO,UAAW,KAC3Bd,EAASc,OAAO,mBAAoB7B,GAAgBwB,EAAAE,KAAA,IACjBI,EAAAA,EAAAA,IAAYf,GAAS,QAAAC,EAAAQ,EAAAO,KAAjDd,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAAKC,EAAIH,EAAJG,KACfC,EAAY,CACdjF,OAAQ8E,EAASzC,EAAAA,GAAUG,EAAAA,GAC3BkB,OAAQqB,EACRc,QAASb,IAEbc,EAAAA,EAAAA,IAAe,CAACzB,gBAAAA,EAAiBtD,SAAAA,EAAUkE,UAAAA,IAAW,yBAAAI,EAAAU,OAAA,GAAApB,EAAA,KAE7D,gBAhBiBqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAd,UAAA,KA6BZ7E,EAAgB,SAACS,IAEnBmF,EAAAA,EAAAA,IAAmB,CAACnF,SAAAA,EAAUX,aAAAA,EAAciE,gBAAAA,GAChD,EAEM9D,EAAU,eAAA4F,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0B,EAAAC,GAAA,IAAAtF,EAAAiB,EAAAsE,EAAAxB,EAAA,OAAAL,EAAAA,EAAAA,KAAAW,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAEwD,OAFjDxE,EAAQsF,EAARtF,SAAUiB,EAAOqE,EAAPrE,SAElC8D,EAAAA,EAAAA,IAAe,CAACzB,gBAAAA,EAAiBtD,SAAAA,EAAUkE,UAAW,CAACrD,WAAW,KAAO2E,EAAAhB,KAAA,GAC/CiB,EAAAA,EAAAA,IAAkB,OAAPxE,QAAO,IAAPA,OAAO,EAAPA,EAAS6D,SAAS,KAAD,EAAAS,EAAAC,EAAAX,MAA9Cd,EAAOwB,EAAPxB,UACGxE,EAAcS,GACzB+D,GAAWhB,EAAMgB,QAAQ,yBACzBA,IAAWgB,EAAAA,EAAAA,IAAe,CAACzB,gBAAAA,EAAiBtD,SAAAA,EAAUkE,UAAW,CAACrD,WAAW,KAC7EkD,GAAWhB,EAAM2C,MAAM,qBAAoB,yBAAAF,EAAAR,OAAA,GAAAK,EAAA,KAC9C,gBARiBM,GAAA,OAAAP,EAAAF,MAAA,KAAAd,UAAA,KAelB,OA8DMlH,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,0BAAyBG,SAAA,EAetCJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaG,SAAC,oPAC5BJ,EAAAA,EAAAA,KAACuK,EAAAA,EAAc,CACXvL,gBAAiBwL,EAAAA,GACjB5J,eAAgBiH,EAChBhH,qBAtFmB,SAACa,GAE5BoG,GAAkB2C,EAAAA,EAAAA,GAAC,CAAC,EAAG/I,GACzB,IAqFsB,OAAfmG,QAAe,IAAfA,GAAAA,EAAiBpH,OACdT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaG,UAC1BJ,EAAAA,EAAAA,KAAC0K,EAAAA,EAAc,CAACzG,WApHT,SAACe,IAEhB2F,EAAAA,EAAAA,IAAiB,CACb3F,MAAAA,EACAhB,aAAAA,EACAiE,gBAAAA,EACAC,aAAAA,EACAL,iBAAe4C,EAAAA,EAAAA,GAAA,GAAK5C,IAE5B,EA2GoD7D,aAAcA,EAAcE,cAAeA,EAAeC,WAAYA,EAAYK,OAAO,gCAC3H,MAGZxE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCG,UACpDyB,EAAAA,EAAAA,MAAA,KAAAzB,SAAA,EAAGJ,EAAAA,EAAAA,KAAA,QAAAI,SAAM,UAAY,iGAA6FJ,EAAAA,EAAAA,KAAA,KAAGqH,KAAK,0IAA0I3H,OAAO,SAAS6H,IAAI,aAAYnH,SAAC,mJAIjT,E,oBCnLMwK,EAAmB9D,EAAAA,MAAW,kBAAM,6BAAwC,IAsClF,EApCwB,SAAHjI,GAA0D,IAADgM,EAApDrD,EAAY3I,EAAZ2I,aAAcC,EAAc5I,EAAd4I,eAAgBqD,EAAgBjM,EAAhBiM,iBAEhDlD,GAAO7E,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM4E,IAAI,IAExCmD,IADgBhI,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,aAAa,IACxC,CAACkI,EAAAA,GAAoCC,EAAAA,GAA6BC,EAAAA,KAC1F/J,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDgK,EAAY9J,EAAA,GAAE+J,EAAe/J,EAAA,GAWrC,OATA1B,EAAAA,EAAAA,YAAU,WAAO,IAAD0L,EACRF,EAAiB,OAAJvD,QAAI,IAAJA,GAAsB,QAAlByD,EAAJzD,EAAM0D,wBAAgB,IAAAD,OAAlB,EAAJA,EAAwBE,MAAK,SAACjL,EAAMkL,GACrD,GAAGT,EAAenJ,SAAa,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMmL,UAC/B,OAAO,CAEX,IACAL,EAAgBD,EAClB,GAAG,CAACvD,KAGF/F,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,UAASG,SAAA,EACtBJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBG,SAAC,oDACjCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CG,UACvDJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcG,SAAC,0FAG9ByB,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,qBAAoBG,SAAA,EACjCJ,EAAAA,EAAAA,KAAC0L,EAAAA,SAAQ,CAACC,UAAU3L,EAAAA,EAAAA,KAAC4L,EAAAA,GAAe,IAAIxL,UACtCJ,EAAAA,EAAAA,KAAC4K,EAAgB,CAACpD,aAAcA,EAAcC,eAAgBA,MAG/D0D,GAAcnL,EAAAA,EAAAA,KAAC6L,EAAuB,CAACrE,aAAcA,EAAcC,eAAgBA,IAAmB,SAEpG,OAAJG,QAAI,IAAJA,GAAe,QAAXiD,EAAJjD,EAAMkE,iBAAS,IAAAjB,OAAX,EAAJA,EAAiBzH,QAAS,GAAG2I,EAAAA,EAAAA,IAAuB,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,UAAWhB,GAAoB,OAI5F,C,yIC1CaH,EAAmB,SAAH9L,GAA6H,IAAxHmG,EAAKnG,EAALmG,MAAOhB,EAAYnF,EAAZmF,aAAciE,EAAepJ,EAAfoJ,gBAAiBC,EAAYrJ,EAAZqJ,aAAcL,EAAehJ,EAAfgJ,gBAAemE,EAAAnN,EAAEoN,kBAAAA,OAAiB,IAAAD,EAAC,CAAC,EAACA,EAAA/K,EAAApC,EAAEqN,oBAAAA,OAAmB,IAAAjL,EAAC,GAAEA,EACzIkL,GAAQC,EAAAA,EAAAA,GAAOpI,GAEjBgB,EAAMuG,MAAK,SAACrG,IACqD,IAA1DiH,EAASE,WAAU,SAACC,GAAC,OAAKA,EAAEpH,KAAKzC,OAASyC,EAAKzC,IAAI,MAElDyF,EAAahD,GAAIuF,EAAAA,EAAAA,GAAA,GAAM5C,IAAe4C,EAAAA,EAAAA,GAAA,GAAOwB,IAC7CE,EAASI,MAAI9B,EAAAA,EAAAA,GAAC,CACVvF,KAAAA,EACAtB,OAAQ2C,EAAAA,GACRe,OAAQ,GACRjF,MAAIoI,EAAAA,EAAAA,GAAA,GAAM5C,MACa,OAAnBqE,QAAmB,IAAnBA,IAAAA,EAAqB9I,WAAU8I,EAAoBtK,SAASiG,EAAgBpH,QAAU,CAACoG,cAAY4D,EAAAA,EAAAA,GAAA,GAAMwB,OAIzH,IAEAhE,EAAgBkE,EACxB,EAEazC,EAAiB,SAAHnJ,GAAmD,IAA9C0H,EAAe1H,EAAf0H,gBAAiBtD,EAAQpE,EAARoE,SAAQ6H,EAAAjM,EAAEsI,UAAAA,OAAS,IAAA2D,EAAC,CAAC,EAACA,EACnEvE,GAAgB,SAACwE,GACb,OAAOA,EAASpM,KAAI,SAACC,GACjB,OAAGA,EAAK4E,KAAKzC,OAASkC,GAClB8F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOnK,GACAuI,GAGJvI,CACX,GACJ,GACJ,EAEawJ,EAAqB,SAAHxE,GAAmD,IAA9CX,EAAQW,EAARX,SAAUX,EAAYsB,EAAZtB,aAAciE,EAAe3C,EAAf2C,gBAElDyE,GADQN,EAAAA,EAAAA,GAAOpI,GACQoD,QAAO,SAAC9G,GACjC,OAAOA,EAAK4E,KAAKzC,OAASkC,CAC9B,IACAsD,GAAemE,EAAAA,EAAAA,GAAKM,GACxB,C","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Layout/CustomTextField.js","components/Forms/Layout/DocPlaceholder.js","components/Forms/Sections/SectionH/AcMembership.js","components/Forms/Sections/SectionH/SubSections/QualifiedAccountantCert.js","components/Forms/Sections/SectionH/SectionHContent.js","utils/documentUploads/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst DropdownList = ({ onSelectOption, dropdownOptions=[], addClass, renderLabel, onClickVisible }) => {\r\n\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      onClickVisible();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, [dropdownRef]);\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`} ref={dropdownRef}>\r\n      {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({ dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  }\r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList\r\n            onSelectOption={onSelectOption}\r\n            dropdownOptions={dropdownOptions}\r\n            addClass={addClass}\r\n            renderLabel={renderLabel}\r\n            onClickVisible={onClickVisible}\r\n            />}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isArray } from '../../../utils/validations/helperFunc';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CustomTextField = ({ placeholder, id, label, type, asterisk, belowText, inputType, name, value, onChangeFn, formErrors={}, maxDate }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  const onChangeHandle = (e) =>{\r\n    const {name, value} = e.target;\r\n    onChangeFn({name, value}) \r\n  }\r\n\r\n  const renderErrors = () => {\r\n\r\n    \r\n\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        return renderErrorTxt(formErrors[name])\r\n      } else{\r\n        return renderErrorTxt([formErrors[name]])\r\n      }\r\n    }\r\n    return null\r\n\r\n    // return formErrors[name]? renderErrorTxt(formErrors[name]) : null\r\n  }\r\n\r\n  const isIncorrect = () => {\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        // return renderErrorTxt(formErrors[name])\r\n        return !!formErrors[name][0]?.length\r\n      } else{\r\n        return !!formErrors[name]?.length\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className={`form-input ${type? type : \"\"} ${isIncorrect()? 'incorrect':''}`}>\r\n        <label htmlFor={id}>{label} {asterisk !==\"\"? <span>*</span>: null}</label>\r\n        <input className=\"form-input-common\" type={inputType? inputType : \"text\"} placeholder={placeholder} id={id} required={asterisk !==\"\"? true: false} name={name} value={value || \"\"} onChange={onChangeHandle} disabled={!!invFormStatus.loader} max={maxDate || null}/>\r\n        \r\n        {belowText? <div className=\"input__desc\">\r\n          <p className=\"input__desc--p\">{belowText}</p>\r\n        </div>: null}\r\n\r\n        {renderErrors()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderOnConfirm } from '../../stylesheet/Loader';\r\nimport { LOADING , SUCCESS, FAILED } from '../../../constants';\r\n\r\nconst DocPlaceholder = ({uploadedDocs=[], onAddFiles, onClickRemove, onClickDel, multiple=true, accept=\"application/pdf, image/*\", uniqId}) => {\r\n\r\n  const allowedTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n\r\n  const manipulateUI = (e) => {\r\n    const chosenFiles = Array.prototype.slice.call(e.target.files) || []\r\n    const validFiles = chosenFiles.filter((file)=> allowedTypes.includes(file.type))\r\n\r\n    onAddFiles(validFiles);\r\n  }\r\n\r\n  const removeFileFromFileList = (fileName) => {\r\n    const dt = new DataTransfer();\r\n    const input = document.getElementById(`file-doc-in-${uniqId}`);\r\n    const { files } = input;\r\n    \r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (fileName !== file.name){\r\n        dt.items.add(file); // add the file back to input.\r\n      }\r\n    }\r\n    \r\n    input.files = dt.files // Assign the updates list\r\n  }\r\n\r\n  const onHandleClear = (fileName)=>{\r\n    onClickRemove(fileName);\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const onHandleDelete = ({fileName, fileData}) => {\r\n    onClickDel({fileName, docData: fileData})\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const renderDel = ({fileName, fileData}) => {\r\n    if(fileData?.delLoader) {\r\n      return <span style={{marginLeft:10}}> <LoaderOnConfirm /> </span>\r\n    }\r\n    return (<span\r\n              style={{marginLeft:10}}\r\n              onClick={()=>onHandleDelete({fileName, fileData})}\r\n            >\r\n              <FontAwesomeIcon className='docPreviewDelIcon' icon={faTrashAlt}/>\r\n            </span>)\r\n  }\r\n\r\n  const renderStatus = (status, fileName, fileData) => {\r\n    if(status === SUCCESS) {  //return success icon\r\n      return(\r\n        <>\r\n          <FontAwesomeIcon icon={faCheck}/>\r\n          {renderDel({fileName, fileData})}\r\n        </>\r\n      ) \r\n    }else if(status === FAILED) {\r\n      return <button className=\"link-button\" onClick={()=> onHandleClear(fileName)}>upload failed <FontAwesomeIcon icon={faTimes}/></button> //status is failed - user shall clear file from list & retry\r\n    }else if(status === LOADING){\r\n      return <LoaderOnConfirm /> //return loader icon\r\n    }\r\n  }\r\n\r\n  const renderFileLabel = (fileData) => {\r\n    \r\n    if(fileData?.type?.label && fileData?.extraDetails?.label){\r\n      return `(${fileData.type.label} - ${fileData?.extraDetails?.label})`\r\n    } else if(fileData?.type?.label){\r\n      return `(${fileData.type.label})`\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const mapUploadedDocs = () => {\r\n    return (\r\n      <div className=\"docPlaceholder__uploaded\">\r\n        {uploadedDocs.map((each)=> {\r\n          return (\r\n            <div className=\"docPlaceholder__uploaded--responses\" key={each.file.name}>\r\n              <a className=\"link-button\" target=\"_blank\" href={each?.docUrl? each?.docUrl: null} rel=\"noreferrer\">{each.file.name}</a><span className='uploaded-file-label'>{renderFileLabel(each)}</span>\r\n              <span style={{marginLeft:5}}>{renderStatus(each.loader, each.file.name, each)}</span>\r\n            </div>\r\n          )\r\n        })} \r\n      </div>\r\n    )\r\n  }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"docPlaceholder\">\r\n        <div className=\"docPlaceholder__container\">\r\n          <input type=\"file\" id={`file-doc-in-${uniqId}`} className={`docPlaceholder__container--input ${false? 'doc-opacity': ''}`} onChange={manipulateUI} multiple={multiple} accept={accept}/>\r\n          <label htmlFor={`file-doc-in-${uniqId}`} id=\"uploadDocLabel\" className=\"docPlaceholder__container--p\">Drag your documents here to start uploading</label>\r\n        </div>\r\n      </div>\r\n      {mapUploadedDocs()}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DocPlaceholder;","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nfunction AcMembership({onChangeFn}) {\r\n    const secH = useSelector((store) => store.secH);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"membership_number\", value:\"\"});\r\n            onChangeFn({name:\"membership_designation\", value:\"\"});\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"sub__form\">\r\n        <CustomTextField\r\n            placeholder=\"Membership No.\"\r\n            id=\"membership-no.\"\r\n            label=\"Membership No.\"\r\n            asterisk=\"*\"\r\n            name=\"membership_number\"\r\n            value={secH?.membership_number || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n         />\r\n\r\n        <CustomTextField\r\n            placeholder=\"e.g. CPA, IPA, CA\"\r\n            id=\"membership-designation\"\r\n            label=\"Membership Designation\"\r\n            asterisk=\"*\"\r\n            name=\"membership_designation\"\r\n            value={secH?.membership_designation || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AcMembership","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux'; \r\nimport { YES_H, NO_H, ACCOUNTANT_CERTIFICATE_DOCUMENTS } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport AcNameEmail from '../AcNameEmail';\r\n// import CustomTextButtonField from '../../../Layout/CustomTextButtonField';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport DocPlaceholder from '../../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED } from '../../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport AcProfBody from '../AcProfBody';\r\nimport AcMembership from '../AcMembership';\r\nimport { isNumber } from '../../../../../utils/regexFuncs';\r\nimport CustomDropdown from '../../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../../utils/documentUploads';\r\nimport { useToast } from '../../../../CustomToast';\r\n\r\nconst QualifiedAccountantCert = ({onFormChange, investorFormId}) => {\r\n    const toast = useToast();\r\n    const secH = useSelector((store) => store.secH);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n    \r\n    const [selectedDocType, setSelectedDocType] = useState({label:\"Select type of document\", value:\"\"})\r\n    const [uploadedDocs, setUploadedDocs] = useState([]);\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n      const convrtToNum = parseInt(value);\r\n      onFormChange({name, value:convrtToNum});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) =>{\r\n      if(name === 'phone_number'){\r\n        const isValid = value==='' || isNumber(value);\r\n        if(!isValid) return\r\n    }\r\n      onFormChange({name, value});\r\n    }\r\n\r\n    const onChangeDrpDwn = (e) => {\r\n      const {name, value} = e.target;\r\n      const convrtToNum = value && parseInt(value);\r\n      onFormChange({name, value:convrtToNum});\r\n    }\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name                   \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            formData.append('section', 'h');\r\n            formData.append('investor_form_id', investorFormId);\r\n            const {success, url, data} = await uploadFiles(formData)\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...selectedDocType},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n      //delete the file from aws & remove the file from local state\r\n      updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n      const { success } = await deleteFile(docData?.resData);\r\n      success && onClickRemove(fileName);\r\n      success && toast.success(\"Deleted successfully!\");\r\n      success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n      success || toast.error(\"Please try again!\")\r\n  }\r\n\r\n    const updateSelectedOption = (option) => {\r\n      //update selected document type to the state\r\n      setSelectedDocType({...option})\r\n    }\r\n\r\n  return (\r\n        //  {/* <h4>H.2 Qualified Accountant Certification</h4>\r\n        //  <div className=\"section__container--box\">\r\n        //    <div className=\"u-padding-y\">\r\n        //      <h6>Email to your accountant for electronic signing?</h6>\r\n        //        <div>\r\n        //          <CustomRadioInput */}\r\n    // {/* //               name=\"should_email_accountant_for_esigning\"\r\n    // //               id={`email-yes`}\r\n    // //               content=\"Yes\"\r\n    // //               val={YES_H}\r\n    // //               checked={secH?.should_email_accountant_for_esigning === YES_H}\r\n    // //               onChangeFn={onChangeRadioFn}\r\n    // //             />\r\n    // //             <CustomRadioInput\r\n    // //               name=\"should_email_accountant_for_esigning\"\r\n    // //               id={`email-no`}\r\n    // //               content=\"No\"\r\n    // //               val={NO_H}\r\n    // //               checked={secH?.should_email_accountant_for_esigning === NO_H}\r\n    // //               onChangeFn={onChangeRadioFn}\r\n    // //             />\r\n    // //           </div>\r\n\r\n    // //           <div className=\"u-padding-y\">\r\n    // //             { secH?.should_email_accountant_for_esigning === YES_H? <AcNameEmail onChangeFn={onChangeFn} /> : null}\r\n    // //             <CustomTextField \r\n    // //               type={\"form-input-full-width\"} \r\n    // //               label=\"Address 1\"\r\n    // //               asterisk={''}\r\n    // //               id={\"address\"}\r\n    // //               placeholder=\"Address\"\r\n    // //               name=\"address_1\"\r\n    // //               value={secH?.address_1 || \"\"}\r\n    // //               onChangeFn={onChangeFn}\r\n    // //               formErrors={invFormStatus.errors}\r\n    // //             />\r\n\r\n    // //             <CustomTextField \r\n    // //               type={\"form-input-full-width u-margin-bottom-0\"} \r\n    // //               label=\"Phone\"\r\n    // //               asterisk={''}\r\n    // //               id={\"phone\"}\r\n    // //               placeholder=\"Phone Number\"\r\n    // //               name=\"phone_number\"\r\n    // //               value={secH?.phone_number || \"\"}\r\n    // //               onChangeFn={onChangeFn}\r\n    // //               formErrors={invFormStatus.errors}\r\n    // //             />\r\n    // //           </div>\r\n\r\n    // //           <div className=\"u-padding-y\">\r\n    // //             {secH?.accountant_name? <AcProfBody onChangeDrpDwn={onChangeDrpDwn}/>: null}\r\n\r\n    // //             {secH?.professional_body || secH?.professional_body === 0 ? <AcMembership onChangeFn={onChangeFn}/>: null}\r\n    // //           </div>\r\n    // //       </div>\r\n\r\n    // //     </div>\r\n\r\n    // //     <hr /> */}\r\n\r\n        <div className=\"section__container--box\"> \r\n\r\n        {/* {secH?.should_email_accountant_for_esigning === YES_H ? --Not needed now but later(phase-2)\r\n          <div className=\"u-padding-y u-margin-bottom-lg\">\r\n            <CustomTextButtonField\r\n              id=\"verify-email\"\r\n              placeholder=\"Enter email address\"\r\n              type=\"email\"\r\n              content=\"Verified\" \r\n              label=\"Email Verification\"\r\n              asterisk={\"*\"}\r\n              fullWidth={'-full-width'}\r\n            />\r\n          </div>: null} */}\r\n\r\n          <h6 className=\"u-padding-y\">Please upload your certificate below. Certificates must not issued more than 2 years before the date of this application and must include the accountant signature, information of the accountant membership of an eligible professional body.</h6>\r\n          <CustomDropdown\r\n              dropdownOptions={ACCOUNTANT_CERTIFICATE_DOCUMENTS}\r\n              selectedOption={selectedDocType}\r\n              updateSelectedOption={updateSelectedOption}\r\n          />\r\n          {selectedDocType?.value ?\r\n              <div className='u-padding-y'>\r\n                <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"qualifiedaccountantcert_h\"/>\r\n              </div>: null\r\n          }\r\n              \r\n          <div className=\"note__box u-padding-y u-margin-bottom\">\r\n            <p><span>Note:</span> For information on this certificate or a list of accountant qualifications, please refer to <a href=\"https://asic.gov.au/regulatory-resources/financial-services/financial-product-disclosure/certificates-issued-by-a-qualified-accountant/\" target=\"_blank\" rel=\"noreferrer\">https://asic.gov.au/regulatory-resources/financial-services/financial-product-disclosure/certificates-issued-by-a-qualified-accountant/</a></p>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default QualifiedAccountantCert;","import React, { useState, useEffect, Suspense } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import InvestorCategory from './SubSections/InvestorCategory';\r\nimport QualifiedAccountantCert from './SubSections/QualifiedAccountantCert';\r\nimport { I_HAVE_NET_ASSETS_OF_AT_LEAST_AU_H, I_HAVE_EARNED_AT_LEAST_AU_H, I_HAVE_OR_CONTROL_GROSS_ASSETS_OF_AT_LEAST_AU_H } from '../../../../constants';\r\nimport { ShimmerCardFormSection, ShimmerCardText } from '../../../stylesheet/Loader';\r\nimport { formatAndPrintDocs } from '../../../../utils/validations/helperFunc';\r\n\r\nconst InvestorCategory = React.lazy(() => import('./SubSections/InvestorCategory'));\r\n\r\nconst SectionHContent = ({onFormChange, investorFormId, removeDocFromArr}) => {\r\n\r\n  const secH = useSelector((store) => store.secH);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n  const arrOfVariables =  [I_HAVE_NET_ASSETS_OF_AT_LEAST_AU_H, I_HAVE_EARNED_AT_LEAST_AU_H, I_HAVE_OR_CONTROL_GROSS_ASSETS_OF_AT_LEAST_AU_H]\r\n  const [ isDocVisible, setIsDocVisible ] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const isDocVisible=secH?.category_details?.some((each, index) => {\r\n      if(arrOfVariables.includes(each?.category)){\r\n        return true;\r\n      }\r\n    });\r\n    setIsDocVisible(isDocVisible);\r\n  }, [secH]);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2 className=\"section__heading\">Section H: Certificate by Qualified Accountant</h2>\r\n      <div className=\"note__box u-padding-0 u-margin-bottom-lg\">\r\n        <p className=\"note__box--p\">This fund is only available to wholesale clients. Please confirm your status below</p>\r\n      </div>\r\n\r\n      <div className=\"section__container\">\r\n        <Suspense fallback={<ShimmerCardText />}>\r\n          <InvestorCategory onFormChange={onFormChange} investorFormId={investorFormId}/>\r\n        </Suspense>\r\n\r\n        {isDocVisible? <QualifiedAccountantCert onFormChange={onFormChange} investorFormId={investorFormId}/>: null}\r\n      </div>\r\n      {secH?.documents?.length > 0? formatAndPrintDocs(secH?.documents, removeDocFromArr) : null}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionHContent;","import { LOADING } from \"../../constants\";\r\n\r\nexport const addNewDocToArray = ({files, uploadedDocs, setUploadedDocs, onUploadFile, selectedDocType, selectedEntityNum={}, doNotShowExtraLabel=[]}) => {\r\n    const uploaded = [...uploadedDocs];\r\n        \r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f) => f.file.name === file.name) === -1){\r\n                //call upload file --\r\n                onUploadFile(file, {...selectedDocType}, {...selectedEntityNum});\r\n                uploaded.push({ \r\n                    file,\r\n                    loader: LOADING,\r\n                    docUrl: \"\",\r\n                    type: {...selectedDocType},\r\n                    ...(doNotShowExtraLabel?.length ? !doNotShowExtraLabel.includes(selectedDocType.value) && {extraDetails: {...selectedEntityNum}} : false), //add extra details if array exists and value is not from array\r\n                });\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        \r\n        setUploadedDocs(uploaded);\r\n}\r\n\r\nexport const updateDocArray = ({setUploadedDocs, fileName, extradata={}}) => {\r\n    setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n        return prevDocs.map((each)=>{\r\n            if(each.file.name === fileName){ \r\n                return {\r\n                    ...each,\r\n                    ...extradata\r\n                }\r\n            }\r\n            return each\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeDocFromArray = ({fileName, uploadedDocs, setUploadedDocs}) => { \r\n    const allFiles = [...uploadedDocs];\r\n    const newSetFiles = allFiles.filter((each)=>{\r\n        return each.file.name !== fileName;\r\n    });\r\n    setUploadedDocs([...newSetFiles]);\r\n}"],"names":["_ref","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","onClickVisible","dropdownRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","optionsList","_jsx","className","concat","ref","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","placeholder","id","type","asterisk","belowText","inputType","name","onChangeFn","_ref$formErrors","formErrors","maxDate","invFormStatus","useSelector","store","_formErrors$name$","_formErrors$name","isArray","length","isIncorrect","htmlFor","required","onChange","e","_e$target","disabled","loader","max","renderErrorTxt","_ref$uploadedDocs","uploadedDocs","onAddFiles","onClickRemove","onClickDel","_ref$multiple","multiple","_ref$accept","accept","uniqId","allowedTypes","removeFileFromFileList","fileName","dt","DataTransfer","input","getElementById","files","i","file","items","add","renderDel","_ref3","fileData","delLoader","style","marginLeft","LoaderOnConfirm","docData","onHandleDelete","faTrashAlt","renderStatus","status","SUCCESS","_Fragment","faCheck","FAILED","onHandleClear","faTimes","LOADING","renderFileLabel","_fileData$type","_fileData$extraDetail","_fileData$type2","_fileData$extraDetail2","extraDetails","React","validFiles","Array","prototype","slice","call","filter","href","docUrl","rel","onFormChange","investorFormId","toast","useToast","secH","selectedDocType","setSelectedDocType","_useState3","_useState4","setUploadedDocs","onUploadFile","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","_yield$uploadFiles","success","url","data","extradata","_args","arguments","wrap","_context","prev","next","undefined","FormData","append","uploadFiles","sent","resData","updateDocArray","stop","_x","apply","removeDocFromArray","_ref6","_callee2","_ref5","_yield$deleteFile","_context2","deleteFile","error","_x2","CustomDropdown","ACCOUNTANT_CERTIFICATE_DOCUMENTS","_objectSpread","DocPlaceholder","addNewDocToArray","InvestorCategory","_secH$documents","removeDocFromArr","arrOfVariables","I_HAVE_NET_ASSETS_OF_AT_LEAST_AU_H","I_HAVE_EARNED_AT_LEAST_AU_H","I_HAVE_OR_CONTROL_GROSS_ASSETS_OF_AT_LEAST_AU_H","isDocVisible","setIsDocVisible","_secH$category_detail","category_details","some","index","category","Suspense","fallback","ShimmerCardText","QualifiedAccountantCert","documents","formatAndPrintDocs","_ref$selectedEntityNu","selectedEntityNum","doNotShowExtraLabel","uploaded","_toConsumableArray","findIndex","f","push","_ref2$extradata","prevDocs","newSetFiles"],"sourceRoot":""}