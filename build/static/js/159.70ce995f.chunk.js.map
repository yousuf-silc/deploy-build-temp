{"version":3,"file":"static/js/159.70ce995f.chunk.js","mappings":"6JAMMA,EAAwBC,EAAAA,MAAW,kBAAM,6BAAiC,IA0DhF,UAxDyB,SAAHC,GAAyB,IAADC,EAAlBC,EAAYF,EAAZE,aACpBC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IACxCG,GAAgBF,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAa,IAM1DC,EAAqB,SAAHC,GAAmC,IAA9BC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAUH,EAAVG,WACxCT,EAAa,CAACO,KAAAA,EAAMC,MAAAA,EAAOE,MAAM,mBAAoBD,WAAAA,GACvD,EAcA,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UACxDC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CACdC,YAAY,sBACZC,GAAG,uBACHC,MAAM,sBACNC,SAAS,IACTZ,KAAK,gBACLC,OAAW,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,gBAAiB,GAC9BC,WA9BS,SAAHC,GAAsB,IAAjBf,EAAIe,EAAJf,KAAMC,EAAKc,EAALd,MACzBR,EAAa,CAACO,KAAAA,EAAMC,MAAAA,GACtB,EA6BUe,WAAYnB,EAAcoB,YAKhCV,EAAAA,EAAAA,KAACW,EAAAA,SAAQ,CAACC,UAAUZ,EAAAA,EAAAA,KAACa,EAAAA,GAAe,IAAId,SAChC,OAAJZ,QAAI,IAAJA,GAAsB,QAAlBF,EAAJE,EAAM2B,wBAAgB,IAAA7B,GAAtBA,EAAwB8B,QACxBlB,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAA8BC,SAAC,sBA/B/B,WAAO,IAADkB,EAC5B,OAAW,OAAJ9B,QAAI,IAAJA,GAAsB,QAAlB8B,EAAJ9B,EAAM2B,wBAAgB,IAAAG,OAAlB,EAAJA,EAAwBC,KAAI,SAACC,EAAMC,GACxC,IAAMC,EAASD,EAAM,EAEfE,GAAa,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMhB,KAAMkB,EAC3B,OAAGD,GAAY,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,kBACRvB,EAAAA,EAAAA,KAAClB,EAAqB,CAAc0C,aAAcL,EAAMM,MAAOH,EAAQI,cAAeL,EAAQ9B,mBAAoBA,EAAoBoC,UAAWP,GAArHE,GAE9B,IACT,GACF,CAsBWM,MACG,SAShB,C","sources":["components/Forms/Sections/SectionH/SubSections/InvestorCategory.js"],"sourcesContent":["import React, { Suspense } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ShimmerCardText } from '../../../../stylesheet/Loader';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\n// import InvestorCategoryTypes from './InvestorCategoryTypes';\r\n\r\nconst InvestorCategoryTypes = React.lazy(() => import('./InvestorCategoryTypes'));\r\n\r\nconst InvestorCategory = ({ onFormChange}) => {\r\n  const secH = useSelector((store) => store.secH);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const onChangeFn = ({name, value}) =>{\r\n    onFormChange({name, value});\r\n  }\r\n\r\n  const onChangeInvstrData = ({name, value, investorId}) => {\r\n    onFormChange({name, value, level:\"category_details\", investorId });\r\n  }\r\n\r\n  const renderInvestors = () => {\r\n    return secH?.category_details?.map((each, index)=>{\r\n      const invNum = index+1 \r\n      // const tempId = each?.investor_id || invNum\r\n      const tempId = each?.id || invNum\r\n      if(index < secH?.no_of_investors ){ //phase1 fix. remove this condition in phase-2\r\n        return <InvestorCategoryTypes key={tempId} investorData={each} invId={tempId} investorIndex={invNum} onChangeInvstrData={onChangeInvstrData} itemIndex={index}/>\r\n      }\r\n      return null\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container--box u-margin-bottom-0\">\r\n        <div className=\"sub__form u-padding-y  u-padding-bottom-0\">\r\n          <CustomTextField\r\n            placeholder=\"Name of Investor(s)\"\r\n            id=\"sec-h-name-investors\"\r\n            label=\"Name of Investor(s)\"\r\n            asterisk=\"*\"\r\n            name=\"investor_name\"\r\n            value={secH?.investor_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n          />\r\n        </div>\r\n    \r\n    {/* <div className=\"section__container--box\"> */}\r\n      <Suspense fallback={<ShimmerCardText />}>\r\n        { secH?.category_details?.length?\r\n          <>\r\n            <h4 className=\"section__container--subtitle\">Investor Category</h4>\r\n            {renderInvestors()}\r\n          </> : null\r\n        }\r\n        \r\n      </Suspense>\r\n    {/* </div> */}\r\n\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default InvestorCategory;"],"names":["InvestorCategoryTypes","React","_ref","_secH$category_detail2","onFormChange","secH","useSelector","store","invFormStatus","onChangeInvstrData","_ref3","name","value","investorId","level","_jsxs","className","children","_jsx","CustomTextField","placeholder","id","label","asterisk","investor_name","onChangeFn","_ref2","formErrors","errors","Suspense","fallback","ShimmerCardText","category_details","length","_Fragment","_secH$category_detail","map","each","index","invNum","tempId","no_of_investors","investorData","invId","investorIndex","itemIndex","renderInvestors"],"sourceRoot":""}