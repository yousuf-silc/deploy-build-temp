{"version":3,"file":"static/js/880.d8bdaae8.chunk.js","mappings":"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","sources":["components/Forms/Layout/CustomTextField.js","components/Forms/Layout/DocPlaceholder.js","components/Forms/Layout/Signature.js","components/Forms/QualifiedAccountant/NameOfInvestorOrEntity.js","components/Forms/QualifiedAccountant/SubSections/HowManyIndividuals.js","components/Forms/QualifiedAccountant/SubSections/ControllingPersonOfInvestorEntity.js","components/Forms/QualifiedAccountant/SubSections/Category.js","components/Forms/QualifiedAccountant/InvestorCategorySub.js","components/Forms/QualifiedAccountant/SubSections/InvestorCategory.js","components/Forms/Layout/SignatureComponent/index.js","components/Forms/QualifiedAccountant/SubSections/AccountantSignature.js","components/Forms/QualifiedAccountant/SubSections/MembershipDetails.js","components/Forms/QualifiedAccountant/SubSections/ProfessionalBody.js","components/Forms/QualifiedAccountant/SubSections/CertificateForm.js","components/Forms/QualifiedAccountant/SubSections/UploadCertificate.js","components/Forms/QualifiedAccountant/SubSections/QualifiedAccountantCert.js","components/Forms/QualifiedAccountant/QACertificationContent.js","utils/documentUploads/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isArray } from '../../../utils/validations/helperFunc';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CustomTextField = ({ placeholder, id, label, type, asterisk, belowText, inputType, name, value, onChangeFn, formErrors={}, maxDate }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  const onChangeHandle = (e) =>{\r\n    const {name, value} = e.target;\r\n    onChangeFn({name, value}) \r\n  }\r\n\r\n  const renderErrors = () => {\r\n\r\n    \r\n\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        return renderErrorTxt(formErrors[name])\r\n      } else{\r\n        return renderErrorTxt([formErrors[name]])\r\n      }\r\n    }\r\n    return null\r\n\r\n    // return formErrors[name]? renderErrorTxt(formErrors[name]) : null\r\n  }\r\n\r\n  const isIncorrect = () => {\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        // return renderErrorTxt(formErrors[name])\r\n        return !!formErrors[name][0]?.length\r\n      } else{\r\n        return !!formErrors[name]?.length\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className={`form-input ${type? type : \"\"} ${isIncorrect()? 'incorrect':''}`}>\r\n        <label htmlFor={id}>{label} {asterisk !==\"\"? <span>*</span>: null}</label>\r\n        <input className=\"form-input-common\" type={inputType? inputType : \"text\"} placeholder={placeholder} id={id} required={asterisk !==\"\"? true: false} name={name} value={value || \"\"} onChange={onChangeHandle} disabled={!!invFormStatus.loader} max={maxDate || null}/>\r\n        \r\n        {belowText? <div className=\"input__desc\">\r\n          <p className=\"input__desc--p\">{belowText}</p>\r\n        </div>: null}\r\n\r\n        {renderErrors()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderOnConfirm } from '../../stylesheet/Loader';\r\nimport { LOADING , SUCCESS, FAILED } from '../../../constants';\r\n\r\nconst DocPlaceholder = ({uploadedDocs=[], onAddFiles, onClickRemove, onClickDel, multiple=true, accept=\"application/pdf, image/*\", uniqId}) => {\r\n\r\n  const allowedTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n\r\n  const manipulateUI = (e) => {\r\n    const chosenFiles = Array.prototype.slice.call(e.target.files) || []\r\n    const validFiles = chosenFiles.filter((file)=> allowedTypes.includes(file.type))\r\n\r\n    onAddFiles(validFiles);\r\n  }\r\n\r\n  const removeFileFromFileList = (fileName) => {\r\n    const dt = new DataTransfer();\r\n    const input = document.getElementById(`file-doc-in-${uniqId}`);\r\n    const { files } = input;\r\n    \r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (fileName !== file.name){\r\n        dt.items.add(file); // add the file back to input.\r\n      }\r\n    }\r\n    \r\n    input.files = dt.files // Assign the updates list\r\n  }\r\n\r\n  const onHandleClear = (fileName)=>{\r\n    onClickRemove(fileName);\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const onHandleDelete = ({fileName, fileData}) => {\r\n    onClickDel({fileName, docData: fileData})\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const renderDel = ({fileName, fileData}) => {\r\n    if(fileData?.delLoader) {\r\n      return <span style={{marginLeft:10}}> <LoaderOnConfirm /> </span>\r\n    }\r\n    return (<span\r\n              style={{marginLeft:10}}\r\n              onClick={()=>onHandleDelete({fileName, fileData})}\r\n            >\r\n              <FontAwesomeIcon className='docPreviewDelIcon' icon={faTrashAlt}/>\r\n            </span>)\r\n  }\r\n\r\n  const renderStatus = (status, fileName, fileData) => {\r\n    if(status === SUCCESS) {  //return success icon\r\n      return(\r\n        <>\r\n          <FontAwesomeIcon icon={faCheck}/>\r\n          {renderDel({fileName, fileData})}\r\n        </>\r\n      ) \r\n    }else if(status === FAILED) {\r\n      return <button className=\"link-button\" onClick={()=> onHandleClear(fileName)}>upload failed <FontAwesomeIcon icon={faTimes}/></button> //status is failed - user shall clear file from list & retry\r\n    }else if(status === LOADING){\r\n      return <LoaderOnConfirm /> //return loader icon\r\n    }\r\n  }\r\n\r\n  const renderFileLabel = (fileData) => {\r\n    \r\n    if(fileData?.type?.label && fileData?.extraDetails?.label){\r\n      return `(${fileData.type.label} - ${fileData?.extraDetails?.label})`\r\n    } else if(fileData?.type?.label){\r\n      return `(${fileData.type.label})`\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const mapUploadedDocs = () => {\r\n    return (\r\n      <div className=\"docPlaceholder__uploaded\">\r\n        {uploadedDocs.map((each)=> {\r\n          return (\r\n            <div className=\"docPlaceholder__uploaded--responses\" key={each.file.name}>\r\n              <a className=\"link-button\" target=\"_blank\" href={each?.docUrl? each?.docUrl: null} rel=\"noreferrer\">{each.file.name}</a><span className='uploaded-file-label'>{renderFileLabel(each)}</span>\r\n              <span style={{marginLeft:5}}>{renderStatus(each.loader, each.file.name, each)}</span>\r\n            </div>\r\n          )\r\n        })} \r\n      </div>\r\n    )\r\n  }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"docPlaceholder\">\r\n        <div className=\"docPlaceholder__container\">\r\n          <input type=\"file\" id={`file-doc-in-${uniqId}`} className={`docPlaceholder__container--input ${false? 'doc-opacity': ''}`} onChange={manipulateUI} multiple={multiple} accept={accept}/>\r\n          <label htmlFor={`file-doc-in-${uniqId}`} id=\"uploadDocLabel\" className=\"docPlaceholder__container--p\">Drag your documents here to start uploading</label>\r\n        </div>\r\n      </div>\r\n      {mapUploadedDocs()}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DocPlaceholder;","import React, { useRef } from 'react';\r\nimport SignaturePad from 'react-signature-canvas';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faRedoAlt } from '@fortawesome/fontawesome-free-solid';\r\nimport { LoaderOnConfirm } from '../../stylesheet/Loader';\r\nimport { LOADING, SUCCESS, FAILED } from '../../../constants';\r\n\r\nconst Signature = ({ investorId, onAddSignature, signCreate }) => {\r\n\r\n  const signCanvas = useRef();\r\n\r\n  const clear = () => signCanvas.current.clear();\r\n\r\n  const onSave = () => {\r\n    // onSaveSignature({sign: signCanvas.current.toDataURL('image/png'), investorId})\r\n    onAddSignature({sign: signCanvas.current.toDataURL('image/png'), investorId})\r\n  }\r\n\r\n  const renderStatus = (status) => {\r\n    if(status === SUCCESS) {\r\n      return <FontAwesomeIcon icon={faCheck}/> //return success icon - disable clear and save\r\n    } else if(status === FAILED) {\r\n      return <FontAwesomeIcon icon={faRedoAlt}/> //return retry icon\r\n    } else if(status === LOADING){\r\n      return <LoaderOnConfirm /> //return loader icon - disable clear and save\r\n    } else {\r\n      return \"save\"\r\n    }\r\n  }\r\n\r\n  const disableStatus = (status) => {\r\n    if(status === LOADING) { //status===SUCCESS || \r\n      return true //return success icon - disable clear and save\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"signature__wrapper\">\r\n        <div className=\"signature__wrapper--container\">\r\n          <SignaturePad ref={signCanvas} canvasProps={{id: {investorId}}} clearOnResize={false}/>\r\n          <div className=\"signature__wrapper--container--btn\">\r\n              <button id={`btn-${investorId}`} className=\"btn-to-link\" onClick={clear} disabled={disableStatus(signCreate?.loader)}>clear</button>\r\n              <button id={`btn2-${investorId}`} className=\"btn-to-link\" onClick={onSave} disabled={disableStatus(signCreate?.loader)}>{renderStatus(signCreate?.loader)}</button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signature;","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../Layout/CustomTextField';\r\nimport { QA_INVESTOR_LABELS, CATEGORY_INDIVIDUAL_WCC } from '../../../constants';\r\n\r\nconst NameOfInvestorOrEntity = ({ investorId, itemIndex, investorDetails, onChangeinvestor }) => {\r\n\r\n  const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n\r\n  const tempInvNumber = wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC? itemIndex + 1: '';\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n\r\n  const errMsgs = {\r\n    investor_name : invFormStatus.errors?.investor_name? invFormStatus.errors?.investor_name[itemIndex]: \"\",\r\n  }\r\n\r\n  const onChangeIn = ({name, value}) => {\r\n    onChangeinvestor({name, value, investorId})\r\n  }\r\n\r\n  return (\r\n    <div key={`investorId-${tempInvNumber}`}>\r\n        <CustomTextField\r\n            placeholder={`Name of ${label}`}\r\n            id={`name-of-investor-entity-${tempInvNumber}`}\r\n            label={`Name of ${label} ${tempInvNumber}`}\r\n            asterisk=\"*\"\r\n            type=\"form-input-full-width\"\r\n            name=\"investor_name\"\r\n            value={investorDetails?.investor_name}\r\n            onChangeFn={onChangeIn}\r\n            formErrors={errMsgs}\r\n        />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NameOfInvestorOrEntity","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst HowManyIndividuals = ({ onChangeRadioFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    useEffect(() => {\r\n    \r\n      return () => {\r\n        onChangeRadioFn({ name: 'no_of_individuals', value: 0})\r\n      }\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <div className=\"section__container--box u-margin-bottom-xl\">\r\n        <h5 className=\"section__container--box--subtitle\">How many individuals? <span>*</span></h5>\r\n        <div className=\"row-space-between\">\r\n            <CustomRadioInput\r\n                name=\"no_of_individuals\"\r\n                id=\"one-number-of-individual\"\r\n                content=\"1\"\r\n                val={1}\r\n                checked={wholesaleClientCertificate?.no_of_individuals === 1}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"no_of_individuals\"\r\n                id=\"two-number-of-individual\"\r\n                content=\"2\"\r\n                val={2}\r\n                checked={wholesaleClientCertificate?.no_of_individuals === 2}\r\n                onChangeFn={onChangeRadioFn}\r\n            /> \r\n            <CustomRadioInput\r\n                name=\"no_of_individuals\"\r\n                id=\"three-number-of-individual\"\r\n                content=\"3\"\r\n                val={3}\r\n                checked={wholesaleClientCertificate?.no_of_individuals === 3}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n        </div>\r\n        {invFormStatus?.errors?.no_of_individuals? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus?.errors?.no_of_individuals)}\r\n        </div>: null}\r\n\r\n        <div className=\"text__box u-padding-10y\">\r\n            <p className=\"text__box--p\">Please note that each individual must be certified as a wholesale client.</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HowManyIndividuals","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst ControllingPersonOfInvestorEntity = ({ onChangeInputFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    useEffect(() => {\r\n    \r\n      return () => {\r\n        onChangeInputFn({ name: 'controlling_person_of_investor_entity', value: '' });\r\n      }\r\n    }, [])\r\n    \r\n\r\n  return (\r\n    <>\r\n        <CustomTextField\r\n            placeholder=\"Controlling Person of Investor Entity\"\r\n            id=\"controlling-person-of-investor-entity\"\r\n            label=\"Controlling Person of Investor Entity\"\r\n            asterisk=\"*\"\r\n            type=\"form-input-full-width\"\r\n            name=\"controlling_person_of_investor_entity\"\r\n            value={wholesaleClientCertificate?.controlling_person_of_investor_entity || \"\"}\r\n            onChangeFn={onChangeInputFn}\r\n            formErrors={invFormStatus.errors}\r\n        /> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ControllingPersonOfInvestorEntity;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport NameOfInvestorOrEntity from '../NameOfInvestorOrEntity';\r\nimport { CATEGORY_INDIVIDUAL_WCC, CATEGORY_NON_INDIVIDUAL_WCC, CATEGORY_CONTROLLING_PERSON_WCC, QA_INVESTOR_LABELS } from '../../../../constants';\r\nimport { singleWholesaleClientCertificateInvestorDetails } from \"../../../../reducers/wholesale-client-certificate/wholesaleClientCertificateReducer\"\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport HowManyIndividuals from './HowManyIndividuals';\r\nimport ControllingPersonOfInvestorEntity from './ControllingPersonOfInvestorEntity';\r\n\r\nconst Category = ({ onFormChange, onChangeInvestorFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n\r\n    const addInvestorDetails = (numOfInvestors) => {\r\n\r\n        let upd = [];\r\n        const prevDirLen = wholesaleClientCertificate?.investor_details?.length || 0;\r\n    \r\n        if(prevDirLen > numOfInvestors){\r\n            upd = wholesaleClientCertificate?.investor_details?.filter((each, index) => (index + 1) <= numOfInvestors);\r\n\r\n            onFormChange({\r\n                name:\"investor_details\",\r\n                value:[...upd]\r\n            });\r\n            return\r\n        } else if(prevDirLen === numOfInvestors){\r\n            return\r\n        }\r\n        const newLen = numOfInvestors - prevDirLen;\r\n        upd = [...wholesaleClientCertificate?.investor_details];\r\n\r\n        const newArr = Array.from({ length: newLen }, () => ({\r\n            ...singleWholesaleClientCertificateInvestorDetails\r\n        }))\r\n\r\n        onFormChange({\r\n            name:\"investor_details\",\r\n            value:[...upd, ...newArr]\r\n        })\r\n        return\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n        if(name === 'no_of_individuals'){\r\n            convrtToNum && addInvestorDetails(convrtToNum)\r\n        }\r\n        else if(name === 'category'){\r\n            onChangeInvestorFn({\r\n                name:\"investor_name\",\r\n                value: '',\r\n                investorId: 1\r\n            })\r\n            addInvestorDetails(1);\r\n        }\r\n    }\r\n\r\n    const onChangeInputFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const renderInvestorNameInput = () => {\r\n\r\n        return wholesaleClientCertificate?.investor_details?.map((item, index)=> {\r\n            const tempIndex = index + 1;\r\n            const uniqId = tempIndex //item?.id || tempIndex\r\n            // if(index < wholesaleClientCertificate?.no_of_individuals){\r\n              return <NameOfInvestorOrEntity \r\n                        key={uniqId}\r\n                        investorId={uniqId}\r\n                        investorDetails={item}\r\n                        onChangeinvestor={onChangeInvestorFn}\r\n                        itemIndex={index}\r\n                    /> \r\n            // }\r\n            // return null\r\n        })\r\n\r\n    }\r\n    \r\n  return (\r\n    <div className=\"section__container\">\r\n        <div className=\"section__container--box u-margin-bottom-xl\">\r\n            <h5 className=\"section__container--box--subtitle\">Category <span>*</span></h5>\r\n            <CustomRadioInput\r\n                name=\"category\"\r\n                id=\"individual-investor\"\r\n                content=\"Individual Investor(s)\"\r\n                val={CATEGORY_INDIVIDUAL_WCC}\r\n                checked={wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name=\"category\"\r\n                id=\"non-individual-investor\"\r\n                content=\"Non-individual Investor\"\r\n                val={CATEGORY_NON_INDIVIDUAL_WCC}\r\n                checked={wholesaleClientCertificate?.category === CATEGORY_NON_INDIVIDUAL_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            /> \r\n            <CustomRadioInput\r\n                name=\"category\"\r\n                id=\"controlling-person-of-investor-entity\"\r\n                content=\"Controlling Person of Investor Entity\"\r\n                val={CATEGORY_CONTROLLING_PERSON_WCC}\r\n                checked={wholesaleClientCertificate?.category === CATEGORY_CONTROLLING_PERSON_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            {invFormStatus?.errors?.category? <div className=\"input__desc\">\r\n              {renderErrorTxt(invFormStatus?.errors?.category)}\r\n            </div>: null}\r\n        </div>\r\n\r\n        {wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC? <HowManyIndividuals onChangeRadioFn={onChangeRadioFn}/> : null}\r\n\r\n        <div className=\"section__container--box\">\r\n\r\n            {/* {wholesaleClientCertificate?.category === CATEGORY_INDIVIDUAL_WCC || wholesaleClientCertificate?.category === CATEGORY_NON_INDIVIDUAL_WCC? \r\n            renderInvestorNameInput(): null}  */}\r\n            {renderInvestorNameInput()}\r\n            {wholesaleClientCertificate?.category === CATEGORY_CONTROLLING_PERSON_WCC? \r\n            <ControllingPersonOfInvestorEntity onChangeInputFn={onChangeInputFn} />: null}\r\n\r\n            <CustomTextField\r\n                placeholder={`Address of ${label}`}\r\n                id=\"investor-address\"\r\n                label={`Address of ${label}`}\r\n                asterisk=\"*\"\r\n                type=\"form-input-full-width\"\r\n                name=\"investor_address\"\r\n                value={wholesaleClientCertificate?.investor_address || \"\"}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            /> \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category","import React from 'react';\r\nimport CustomRadioInput from '../Layout/CustomRadioInput';\r\nimport { useSelector } from 'react-redux';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { INVESTOR_CATEGORY_NET_ASSETS_WCC, INVESTOR_CATEGORY_EARNED_WCC, INVESTOR_CATEGORY_CONTROLS_WCC, QA_INVESTOR_LABELS } from '../../../constants';\r\n\r\nconst InvestorCategorySub = ({ investorId, itemIndex, investorDetails, onChangeInvestorFn }) => {\r\n    const tempInvNumber = itemIndex + 1\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n\r\n    const errMsgs = {\r\n        investor_category : invFormStatus.errors?.investor_category? invFormStatus.errors?.investor_category[itemIndex]: \"\",\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = value && parseInt(value);\r\n        onChangeInvestorFn({name: \"investor_category\", value: convrtToNum, investorId})\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container--box u-margin-bottom-lg\" key={`investorId-${tempInvNumber}`}>\r\n        <h5 className=\"section__container--box--subtitle\">{`${label} ${tempInvNumber}`}</h5>\r\n\r\n        <div>\r\n            <CustomRadioInput\r\n                name={`investor-category-${tempInvNumber}`}\r\n                id={`investor-one-${tempInvNumber}`}\r\n                content={`This ${label} has net assets of at least AU$2.5 million`}\r\n                val={INVESTOR_CATEGORY_NET_ASSETS_WCC}\r\n                checked={investorDetails?.investor_category === INVESTOR_CATEGORY_NET_ASSETS_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name={`investor-category-${tempInvNumber}`}\r\n                id={`investor-two-${tempInvNumber}`}\r\n                type=\"\"\r\n                content={`This ${label} has earned at least AU$250,000 per annum gross income for each of the last two (2) financial years`}\r\n                val={INVESTOR_CATEGORY_EARNED_WCC}\r\n                checked={investorDetails?.investor_category === INVESTOR_CATEGORY_EARNED_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            <CustomRadioInput\r\n                name={`investor-category-${tempInvNumber}`}\r\n                id={`investor-three-${tempInvNumber}`}\r\n                content={`This ${label} has  or controls gross assets of at least AU$10 million`}\r\n                val={INVESTOR_CATEGORY_CONTROLS_WCC}\r\n                checked={investorDetails?.investor_category === INVESTOR_CATEGORY_CONTROLS_WCC}\r\n                onChangeFn={onChangeRadioFn}\r\n            />\r\n            {errMsgs?.investor_category? <div className=\"input__desc\">\r\n              {renderErrorTxt(errMsgs?.investor_category)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvestorCategorySub","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport InvestorCategorySub from '../InvestorCategorySub';\r\nimport { QA_INVESTOR_LABELS } from '../../../../constants';\r\n\r\nconst InvestorCategory = ({ onChangeInvestorFn }) => {\r\n\r\n  const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n\r\n  const label = QA_INVESTOR_LABELS.get(wholesaleClientCertificate?.category);\r\n \r\n  const renderInvestorCategory = () => {\r\n\r\n    return wholesaleClientCertificate?.investor_details?.map((item, index)=> {\r\n        const tempIndex = index + 1;\r\n        const uniqId = tempIndex //item?.id || tempIndex\r\n        // if(index < wholesaleClientCertificate?.no_of_individuals){\r\n          return <InvestorCategorySub \r\n                    key={uniqId}\r\n                    investorId={uniqId}\r\n                    investorDetails={item}\r\n                    onChangeInvestorFn={onChangeInvestorFn}\r\n                    itemIndex={index}\r\n                /> \r\n        // }\r\n        // return null\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">{label} Category</h4>\r\n        {renderInvestorCategory()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvestorCategory","import React, {useState} from 'react';\r\nimport CustomRadioInput from '../CustomRadioInput';\r\nimport { LOADING, SUCCESS, FAILED } from '../../../../constants';\r\nimport ImageUploader from '../ImageUploader';\r\nimport Signature from '../Signature';\r\n\r\nfunction SignatureUploadOrCreate({\r\n    signatureUrl,\r\n    onSaveSignature,\r\n    uploadedDocs,\r\n    setUploadedDocs,\r\n    signCreate,\r\n    setSignCreate,\r\n    investorId = 1\r\n}) {\r\n\r\n    const IS_SIGN_UPLOAD = 1;\r\n    const IS_SIGN_CREATE = 2;\r\n    let base64String = \"\";\r\n\r\n    const [isSignCreateOrUp, setIsSignCreateOrUp] = useState('');\r\n   \r\n    const onChangeSignRadio = ({value}) => {\r\n        const convrtToNum = parseInt(value);\r\n        setIsSignCreateOrUp(convrtToNum);\r\n    }\r\n\r\n    const onAddSignature = ({sign, investorId}) => {\r\n        const cleanBase64 = sign.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n        setSignCreate((prevState)=>({...prevState, file:cleanBase64, loader:LOADING}));\r\n        onSaveSignature({sign:cleanBase64, investorId, fileName:\"\"})\r\n    }\r\n\r\n    function convertBase64Upload(file) { //to convert uploaded signature img into base64\r\n        const fileName = file.name\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\"); //replace is needed - add for signature also\r\n            onSaveSignature({sign: base64String, investorId, fileName}) //actual upload to backend\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        const uploaded = [...uploadedDocs];\r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f)=>f.file.name === file.name) === -1){\r\n                convertBase64Upload(file)\r\n                uploaded.push({file, loader:LOADING});\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        setUploadedDocs(uploaded);\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        const allFiles = [...uploadedDocs];\r\n        const newSetFiles = allFiles.filter((each)=>{\r\n            return each.file.name !== fileName\r\n        });\r\n        setUploadedDocs([...newSetFiles]);\r\n    }\r\n\r\n    const renderSignOrUpload = () => {\r\n        if(isSignCreateOrUp === IS_SIGN_UPLOAD) {\r\n            return <ImageUploader onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} uniqId=\"sectionisignatureupload\" multiple={false} accept=\"image/*\"/>\r\n        } else if(isSignCreateOrUp === IS_SIGN_CREATE) {\r\n            return <Signature investorId={investorId} onAddSignature={onAddSignature} signCreate={signCreate}/> \r\n        }\r\n        return null\r\n    }\r\n\r\n    const renderUploadedSign = () => {\r\n        return <img src={signatureUrl} alt='accountant signature' style={{objectFit:'contain', maxWidth:'100%'}}/>\r\n    }\r\n\r\n    const renderSignature = () => {\r\n        return (\r\n                !signatureUrl? <>\r\n                    <div className=\"u-padding-y radio-inputs-row\">\r\n                        <CustomRadioInput \r\n                            name={`signatory-signature`}\r\n                            id={`signatory-signature-upload`}\r\n                            content=\"Upload signature\"\r\n                            val={IS_SIGN_UPLOAD}\r\n                            checked={isSignCreateOrUp === IS_SIGN_UPLOAD}\r\n                            onChangeFn={onChangeSignRadio}\r\n                        />\r\n                        <CustomRadioInput\r\n                            name={`signatory-signature`}\r\n                            id={`signatory-signature-create`}\r\n                            content=\"Create signature\"\r\n                            val={IS_SIGN_CREATE}\r\n                            checked={isSignCreateOrUp === IS_SIGN_CREATE}\r\n                            onChangeFn={onChangeSignRadio}\r\n                        />\r\n                    </div>\r\n                    {renderSignOrUpload()}\r\n                </> : renderUploadedSign()\r\n        )\r\n    }\r\n\r\n  return (\r\n    renderSignature()\r\n  )\r\n}\r\n\r\nexport default SignatureUploadOrCreate","import React, {useState} from 'react';\r\nimport moment from 'moment/moment';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport { LOADING, SUCCESS, FAILED } from '../../../../constants';\r\nimport {uploadSignatureApiCall} from '../../../../actions/Investor-Application-Form/uploadDocActions' \r\nimport SignatureUploadOrCreate from '../../Layout/SignatureComponent';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction AccountantSignature({onChangeInputFn}) {\r\n    \r\n    const dateNow = moment().format();\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate );\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n    const [uploadedDocs, setUploadedDocs] = useState([]);\r\n    const [signCreate, setSignCreate] = useState({file:'', loader:''})\r\n    \r\n    const updateSignUrl = ({name, value}) => {\r\n        onChangeInputFn({name, value});\r\n    }\r\n\r\n    const onSaveSignature = async({sign, investorId, fileName=\"\"}) => {\r\n        if(sign){\r\n            //call api to upload files\r\n            const formData = new FormData();\r\n            formData.append('file', sign);\r\n            const {success, url} = await uploadSignatureApiCall(formData);\r\n            success && updateSignUrl({name:'accountant_signature_url', value:url});\r\n\r\n            //below is for updating loader state for sign upload\r\n            fileName && setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n                return prevDocs.map((each)=>{\r\n                    if(each.file.name === fileName){\r\n                        return {...each, loader:success? SUCCESS : FAILED}\r\n                    }\r\n                    return each\r\n                })\r\n            });\r\n\r\n            //below is for updating loader state for sign create\r\n            fileName || setSignCreate((prevState)=>({file:prevState?.file, loader:success? SUCCESS : FAILED}));\r\n        }    \r\n    }\r\n \r\n  return (\r\n    <div>\r\n        <div className=\"u-padding-y u-margin-bottom-lg\">\r\n            <h6>Accountant's Signature <span>*</span></h6>\r\n            <SignatureUploadOrCreate \r\n                signatureUrl={wholesaleClientCertificate?.accountant_signature_url}\r\n                onSaveSignature={onSaveSignature}\r\n                uploadedDocs={uploadedDocs}\r\n                setUploadedDocs={setUploadedDocs}\r\n                signCreate={signCreate}\r\n                setSignCreate={setSignCreate}\r\n                investorId={1} //dummy\r\n            />\r\n            {invFormStatus?.errors?.accountant_signature_url? <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus?.errors?.accountant_signature_url)}\r\n            </div>: null}\r\n        </div>\r\n\r\n        <CustomTextField\r\n            placeholder=\"DD/MM/YYYY\"\r\n            inputType=\"date\"\r\n            label=\"Date\"\r\n            asterik=\"*\"\r\n            name='date_of_signature'\r\n            value={wholesaleClientCertificate?.date_of_signature}\r\n            onChangeFn={onChangeInputFn}\r\n            maxDate={dateNow?.split(\"T\")[0]}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountantSignature","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nfunction MembershipDetails({onChangeInputFn}) {\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n\r\n    return (\r\n        <div className=\"sub__form\">\r\n            <CustomTextField\r\n                placeholder=\"Membership No.\"\r\n                id=\"membership-no.\"\r\n                label=\"Membership No.\"\r\n                asterisk=\"*\"\r\n                name=\"membership_number\"\r\n                value={wholesaleClientCertificate?.membership_number}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField\r\n                placeholder=\"e.g. CPA, IPA, CA\"\r\n                id=\"membership-designation\"\r\n                label=\"Membership Designation\"\r\n                asterisk=\"*\"\r\n                name=\"membership_designation\"\r\n                value={wholesaleClientCertificate?.membership_designation}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default MembershipDetails","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useSelector } from 'react-redux';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport { CA_AUS_NZ_WCC, CPA_AUS_WCC, INST_PUBLIC_ACCOUNTANTS_WCC, INST_AMERICAN_PUBLIC_ACCOUNTANTS_WCC, CA_UK_WCC, CA_CANADA_WCC, CA_NZ_WCC, INST_CA_ENG_WALES_WCC, INST_CA_IRELAND_WCC, INST_CA_ENG_SCOTLAND_WCC } from '../../../../constants';\r\n\r\nfunction ProfessionalBody({onChangeProfessionalbodyFn}) {\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n\r\n  return (\r\n    <div className=\"u-margin-bottom-3 select-dropdown-width\">\r\n        <label htmlFor=\"sec-g-1-professional-body\">Professional Body <span>*</span></label>\r\n        <Form.Control\r\n            className={invFormStatus?.errors?.professional_body? \"incorrect-select\" : null}\r\n            as=\"select\"\r\n            id=\"sec-g-1-professional-body\"\r\n            name=\"professional_body\"\r\n            value={wholesaleClientCertificate?.professional_body}\r\n            onChange={onChangeProfessionalbodyFn}\r\n        >\r\n            <option></option>\r\n            <option value={CA_AUS_NZ_WCC}>Chartered Accountants Australia and New Zealand</option>\r\n            <option value={CPA_AUS_WCC}>CPA Australia</option>\r\n            <option value={INST_PUBLIC_ACCOUNTANTS_WCC}>Institute of Public Accountants</option>\r\n            <option value={INST_AMERICAN_PUBLIC_ACCOUNTANTS_WCC}>The American Institute of Certified Public Accountants</option>\r\n            <option value={CA_UK_WCC}>Association of Certified Chartered Accountants (United Kingdom)</option>\r\n            <option value={CA_CANADA_WCC}>Canadian Institute of Chartered Accountants</option>\r\n            <option value={CA_NZ_WCC}>Institute of Chartered Accountants of New Zealand</option>\r\n            <option value={INST_CA_ENG_WALES_WCC}>The Institute of Chartered Accountants in England and Wales</option>\r\n            <option value={INST_CA_IRELAND_WCC}>The Institute of Chartered Accountants in Ireland</option>\r\n            <option value={INST_CA_ENG_SCOTLAND_WCC}>The Institute of Chartered Accountants of Scotland</option>\r\n        </Form.Control>\r\n        {invFormStatus?.errors?.professional_body? <div className=\"input__desc\">\r\n          {renderErrorTxt(invFormStatus?.errors?.professional_body)}\r\n        </div>: null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfessionalBody","import React, { useEffect, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport ProfessionalBody from './ProfessionalBody';\r\nimport MembershipDetails from './MembershipDetails';\r\n\r\nconst CertificateForm = ({ onChangeInputFn, onChangeProfessionalbodyFn }) => {\r\n\r\n    const wholesaleClientCertificate = useSelector((store) => store.wholesaleClientCertificate);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const clearInputData = useCallback(() => {\r\n        const arr = ['accountant_email', 'accountant_full_name', 'address_1', 'phone', 'membership_number', 'membership_designation']\r\n        for(let i = 0; i < arr.length; i++){\r\n            onChangeInputFn({ name: arr[i], value: '' })\r\n        }\r\n        onChangeInputFn({ name: 'professional_body', value: 0 })\r\n    },[]);\r\n    \r\n\r\n    useEffect(() => {\r\n    \r\n      return () => {\r\n        clearInputData();\r\n      }\r\n    }, [clearInputData]);\r\n    \r\n\r\n  return (\r\n    <div className=\"section__container--box\">\r\n        {/* <div className=\"col-layout u-margin-bottom-lg\">\r\n            <CustomTextButtonField\r\n                id=\"accountant-email\"\r\n                placeholder=\"Accountant's Email\"\r\n                type=\"email\"\r\n                content=\"Send Code\"\r\n                label=\"Accountant's Email\"\r\n                asterisk=\"*\"\r\n                fullWidth=\"-full-width\"\r\n                name=\"accountant_email\"\r\n                value={wholesaleClientCertificate?.accountant_email} \r\n                onClickButton={onClickSendCode}\r\n                onChange={onChangeEmailInFn}\r\n            />\r\n        </div>\r\n\r\n        {showCodeInput? <div className=\"col-layout u-margin-bottom-lg\">\r\n            <CustomTextButtonField\r\n                id=\"verification-code\"\r\n                placeholder=\"Enter the verification code\"\r\n                type=\"text\"\r\n                content=\"Submit\"\r\n                asterisk=\"\"\r\n                fullWidth=\"-full-width dark\"\r\n                name=\"emailCode\"\r\n                value={emailCode}\r\n                onClickButton={onClickSubmitCode}\r\n                onChange={onChangeCodeInFn}\r\n            />\r\n        </div>: null} */}\r\n\r\n        <div className=\"u-padding-y\">\r\n\r\n            <CustomTextField \r\n                placeholder=\"Accountant's Email\"\r\n                id=\"accountant-email\"\r\n                label=\"Accountant's Email\"\r\n                asterisk=\"*\"\r\n                name=\"accountant_email\"\r\n                value={wholesaleClientCertificate?.accountant_email}\r\n                type=\"form-input-full-width\"\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField \r\n                placeholder=\"Full Name of Qualified Accountant\"\r\n                id=\"fullname-of-qualified-accountant\"\r\n                label=\"Full Name of Qualified Accountant\"\r\n                asterisk=\"*\"\r\n                name=\"accountant_full_name\"\r\n                value={wholesaleClientCertificate?.accountant_full_name}\r\n                type=\"form-input-full-width\"\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField \r\n                placeholder=\"Address\"\r\n                id=\"address\"\r\n                label=\"Address\"\r\n                asterisk=\"\"\r\n                type=\"form-input-full-width\"\r\n                name=\"address_1\"\r\n                value={wholesaleClientCertificate?.address_1}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n\r\n            <CustomTextField \r\n                placeholder=\"Phone\"\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                inputType=\"tel\"\r\n                asterisk=\"\"\r\n                type=\"form-input-full-width\"\r\n                name=\"phone\"\r\n                value={wholesaleClientCertificate?.phone}\r\n                onChangeFn={onChangeInputFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n        </div>\r\n        \r\n        <ProfessionalBody onChangeProfessionalbodyFn={onChangeProfessionalbodyFn}/>\r\n        <MembershipDetails onChangeInputFn={onChangeInputFn}/>\r\n\r\n        <hr />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CertificateForm;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst UploadCertificate = ({ onAddFiles, uploadedDocs, onClickRemove, onClickDel }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <h6 className=\"u-padding-y\">Please upload the Certificate</h6>\r\n            <DocPlaceholder \r\n                onAddFiles={onAddFiles} \r\n                uploadedDocs={uploadedDocs} \r\n                onClickRemove={onClickRemove} \r\n                onClickDel={onClickDel} \r\n                uniqId=\"wholesaleinvestoraccountantdocs\"\r\n            />\r\n            {invFormStatus?.errors?.document_url?.length? <div className=\"input__desc\">\r\n              {renderErrorTxt(invFormStatus?.errors?.document_url)}\r\n            </div>: null}\r\n        <hr />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default UploadCertificate","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import CustomTextButtonField from '../../Layout/CustomTextButtonField';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport AccountantSignature from './AccountantSignature';\r\nimport MembershipDetails from './MembershipDetails';\r\nimport ProfessionalBody from './ProfessionalBody';\r\nimport {uploadSignatureApiCall, deleteFileShortForms} from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { LOADING, SUCCESS, FAILED, WCC_YES, WCC_NO } from '../../../../constants';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\nimport CustomRadioInput from '../../Layout/CustomRadioInput';\r\nimport CertificateForm from './CertificateForm';\r\nimport UploadCertificate from './UploadCertificate';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst QualifiedAccountantCert = ({onFormChange}) => {\r\n\r\n    const toast = useToast();\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n    const invFormStatus = useSelector( (store) => store.invFormStatus )\r\n    // const [ emailCode, setEmailCode ] = useState('');\r\n    // const [ showCodeInput, setShowCodeInput ] = useState(false);\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([])\r\n    \r\n    // const onChangeCodeInFn = (e) => {\r\n    //     const {name, value} = e.target\r\n    //     setEmailCode(value)\r\n    // }\r\n\r\n    // const onChangeEmailInFn = (e) => {\r\n    //     const {name, value} = e.target\r\n    //     onChangeInputFn({name, value})\r\n    // }\r\n\r\n    // const onClickSendCode = () => {\r\n    //     //validate email, call api and show code input field\r\n    //     setShowCodeInput(prevState => !prevState)\r\n    // }\r\n\r\n    // const onClickSubmitCode = () => {\r\n\r\n    // }\r\n\r\n    const onChangeRadioFn = ({ name, value }) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n    }\r\n\r\n    const onChangeProfessionalbodyFn = (e) =>{ \r\n        const { name, value } = e.target;\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({ name, value: convrtToNum });\r\n    }\r\n\r\n    const onChangeInputFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const updateDocUrl = ({name, value}) => {\r\n        onFormChange({name, value, level:'document-add'})\r\n    }\r\n\r\n    const removeDocFromStore = ({fileName, docData}) => {\r\n        onFormChange({ value: docData?.docUrl, level:'document-remove'})\r\n    }\r\n\r\n    const onUploadFile = async(file) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name                   \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            const {success, url, data} = await uploadSignatureApiCall(formData)\r\n            success && updateDocUrl({name:'document_url', value:url});\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => { \r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state  \r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFileShortForms(docData?.resData);\r\n        success && onClickRemove(fileName); //also add removeDocFromStore\r\n        success && removeDocFromStore({ docData });\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">Qualified Accountant Certification</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h5 className=\"section__container--box--subtitle\">Do you have a separate Certificate available? <span>*</span></h5>\r\n            <div className=\"row-space-between\">\r\n                <CustomRadioInput\r\n                    name=\"certificate_availability\"\r\n                    id=\"certificate_availability_yes\"\r\n                    content=\"Yes\"\r\n                    val={WCC_YES}\r\n                    type=\"\"\r\n                    checked={wholesaleClientCertificate?.certificate_availability === WCC_YES}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"certificate_availability\"\r\n                    id=\"certificate_availability_no\"\r\n                    content=\"No\"\r\n                    val={WCC_NO}\r\n                    type=\"\"\r\n                    checked={wholesaleClientCertificate?.certificate_availability === WCC_NO}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n            </div>\r\n            {invFormStatus?.errors?.certificate_availability? <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus?.errors?.certificate_availability)}\r\n            </div>: null}\r\n        </div>\r\n       \r\n       {wholesaleClientCertificate?.certificate_availability === WCC_NO? \r\n       <CertificateForm onChangeInputFn={onChangeInputFn} onChangeProfessionalbodyFn={onChangeProfessionalbodyFn}/>: null}\r\n\r\n        <div className=\"section__container--box\">\r\n            \r\n            {wholesaleClientCertificate?.certificate_availability === WCC_YES?\r\n            <UploadCertificate onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} />: null}\r\n\r\n            {wholesaleClientCertificate?.certificate_availability === WCC_NO? \r\n            <div className=\"text__box u-margin-bottom\">\r\n                <p className=\"text__box--p u-padding-y\">I, the above named Qualified Accountant, confirm that I comply with this body's continuing professional education requirements. I certify that the above named person/entity is a Qualifying Investor.</p>\r\n            </div> : null}\r\n\r\n           <AccountantSignature onChangeInputFn={onChangeInputFn}/>\r\n\r\n           <div className=\"note__box\">\r\n                <p className=\"note__box--p\"><span>Note:</span> For information on this certificate or a list of accountant qualifications, please refer to <a href=\"https://asic.gov.au/regulatory-resources/financial-services/financial-product-disclosure/certificates-issued-by-a-qualified-accountant/\">https://asic.gov.au/regulatory-resources/financial-services/financial-product-disclosure/certificates-issued-by-a-qualified-accountant/</a></p>\r\n           </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QualifiedAccountantCert;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from '../../includes/thesilcgroup.png';\r\nimport CallToActions from '../Layout/CallToActions';\r\nimport Category from './SubSections/Category';\r\nimport InvestorCategory from './SubSections/InvestorCategory';\r\nimport QualifiedAccountantCert from './SubSections/QualifiedAccountantCert';\r\n\r\nconst QACertificationContent = ({onFormChange, onSubmit}) => {\r\n    const wholesaleClientCertificate = useSelector( (store) => store.wholesaleClientCertificate )\r\n\r\n    const onChangeInvestorFn = ({name, value, investorId}) => {\r\n        const updIndex = investorId - 1;\r\n        const upd = [...wholesaleClientCertificate?.investor_details];\r\n        upd[updIndex][name] = value;\r\n\r\n        onFormChange({\r\n            name: \"investor_details\",\r\n            value: [...upd]\r\n        });\r\n        return\r\n    }\r\n\r\n  return (\r\n    <div className=\"indp__section\">\r\n        <div className=\"indp__header\">\r\n            <div className=\"indp__header--textContent\">\r\n                <h1>Certificate by Qualified Accountant</h1>\r\n                <div className=\"note__box\">\r\n                    <ul className=\"normal-text u-margin-bottom-0\">\r\n                        <li>Chapters 6D or 7 of the Corporations Act 2001.</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"indp__header--logo\">\r\n                <img src={logo} alt=\"The SILC Group\" role=\"presentation\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"section\">\r\n            \r\n            <Category onFormChange={onFormChange} onChangeInvestorFn={onChangeInvestorFn}/>\r\n\r\n            <InvestorCategory onChangeInvestorFn={onChangeInvestorFn}/>\r\n\r\n            <QualifiedAccountantCert onFormChange={onFormChange}/>\r\n\r\n            <CallToActions onSubmit={onSubmit} onFormChange={onFormChange}/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QACertificationContent;","import { LOADING } from \"../../constants\";\r\n\r\nexport const addNewDocToArray = ({files, uploadedDocs, setUploadedDocs, onUploadFile, selectedDocType, selectedEntityNum={}, doNotShowExtraLabel=[]}) => {\r\n    const uploaded = [...uploadedDocs];\r\n        \r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f) => f.file.name === file.name) === -1){\r\n                //call upload file --\r\n                onUploadFile(file, {...selectedDocType}, {...selectedEntityNum});\r\n                uploaded.push({ \r\n                    file,\r\n                    loader: LOADING,\r\n                    docUrl: \"\",\r\n                    type: {...selectedDocType},\r\n                    ...(doNotShowExtraLabel?.length ? !doNotShowExtraLabel.includes(selectedDocType.value) && {extraDetails: {...selectedEntityNum}} : false), //add extra details if array exists and value is not from array\r\n                });\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        \r\n        setUploadedDocs(uploaded);\r\n}\r\n\r\nexport const updateDocArray = ({setUploadedDocs, fileName, extradata={}}) => {\r\n    setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n        return prevDocs.map((each)=>{\r\n            if(each.file.name === fileName){ \r\n                return {\r\n                    ...each,\r\n                    ...extradata\r\n                }\r\n            }\r\n            return each\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeDocFromArray = ({fileName, uploadedDocs, setUploadedDocs}) => { \r\n    const allFiles = [...uploadedDocs];\r\n    const newSetFiles = allFiles.filter((each)=>{\r\n        return each.file.name !== fileName;\r\n    });\r\n    setUploadedDocs([...newSetFiles]);\r\n}"],"names":["_ref","placeholder","id","label","type","asterisk","belowText","inputType","name","value","onChangeFn","_ref$formErrors","formErrors","maxDate","invFormStatus","useSelector","store","_jsxs","className","concat","_formErrors$name$","_formErrors$name","isArray","length","isIncorrect","children","htmlFor","_jsx","required","onChange","e","_e$target","target","disabled","loader","max","renderErrorTxt","_ref$uploadedDocs","uploadedDocs","onAddFiles","onClickRemove","onClickDel","_ref$multiple","multiple","_ref$accept","accept","uniqId","allowedTypes","removeFileFromFileList","fileName","dt","DataTransfer","input","document","getElementById","files","i","file","items","add","renderDel","_ref3","fileData","delLoader","style","marginLeft","LoaderOnConfirm","onClick","_ref2","docData","onHandleDelete","FontAwesomeIcon","icon","faTrashAlt","renderStatus","status","SUCCESS","_Fragment","faCheck","FAILED","onHandleClear","faTimes","LOADING","renderFileLabel","_fileData$type","_fileData$extraDetail","_fileData$type2","_fileData$extraDetail2","extraDetails","React","validFiles","Array","prototype","slice","call","filter","includes","map","each","href","docUrl","rel","investorId","onAddSignature","signCreate","signCanvas","useRef","disableStatus","SignaturePad","ref","canvasProps","clearOnResize","current","clear","sign","toDataURL","faRedoAlt","_invFormStatus$errors","_invFormStatus$errors2","itemIndex","investorDetails","onChangeinvestor","wholesaleClientCertificate","tempInvNumber","category","CATEGORY_INDIVIDUAL_WCC","QA_INVESTOR_LABELS","errMsgs","investor_name","errors","CustomTextField","onChangeRadioFn","useEffect","CustomRadioInput","content","val","checked","no_of_individuals","onChangeInputFn","controlling_person_of_investor_entity","onFormChange","onChangeInvestorFn","addInvestorDetails","numOfInvestors","_wholesaleClientCerti","_wholesaleClientCerti2","upd","prevDirLen","investor_details","index","_toConsumableArray","newLen","newArr","from","_objectSpread","singleWholesaleClientCertificateInvestorDetails","convrtToNum","parseInt","CATEGORY_NON_INDIVIDUAL_WCC","CATEGORY_CONTROLLING_PERSON_WCC","HowManyIndividuals","_wholesaleClientCerti3","item","NameOfInvestorOrEntity","renderInvestorNameInput","ControllingPersonOfInvestorEntity","investor_address","investor_category","INVESTOR_CATEGORY_NET_ASSETS_WCC","INVESTOR_CATEGORY_EARNED_WCC","INVESTOR_CATEGORY_CONTROLS_WCC","InvestorCategorySub","renderInvestorCategory","signatureUrl","onSaveSignature","setUploadedDocs","setSignCreate","_ref$investorId","base64String","_useState","useState","_useState2","_slicedToArray","isSignCreateOrUp","setIsSignCreateOrUp","onChangeSignRadio","cleanBase64","replace","prevState","uploaded","some","findIndex","f","reader","FileReader","onload","result","readAsDataURL","convertBase64Upload","push","newSetFiles","src","alt","objectFit","maxWidth","ImageUploader","Signature","dateNow","moment","format","_useState3","_useState4","updateSignUrl","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref3$fileName","formData","_yield$uploadSignatur","success","url","wrap","_context","prev","next","FormData","append","uploadSignatureApiCall","sent","prevDocs","stop","_x","apply","arguments","SignatureUploadOrCreate","accountant_signature_url","asterik","date_of_signature","split","membership_number","membership_designation","_invFormStatus$errors3","onChangeProfessionalbodyFn","Form","professional_body","as","CA_AUS_NZ_WCC","CPA_AUS_WCC","INST_PUBLIC_ACCOUNTANTS_WCC","INST_AMERICAN_PUBLIC_ACCOUNTANTS_WCC","CA_UK_WCC","CA_CANADA_WCC","CA_NZ_WCC","INST_CA_ENG_WALES_WCC","INST_CA_IRELAND_WCC","INST_CA_ENG_SCOTLAND_WCC","clearInputData","useCallback","arr","accountant_email","accountant_full_name","address_1","phone","ProfessionalBody","MembershipDetails","DocPlaceholder","document_url","toast","useToast","updateDocUrl","level","removeDocFromStore","_ref5","onUploadFile","_ref6","data","extradata","resData","updateDocArray","removeDocFromArray","_ref8","_callee2","_ref7","_yield$deleteFileShor","_context2","deleteFileShortForms","error","_x2","WCC_YES","certificate_availability","WCC_NO","CertificateForm","UploadCertificate","addNewDocToArray","selectedDocType","AccountantSignature","onSubmit","updIndex","logo","role","Category","InvestorCategory","QualifiedAccountantCert","CallToActions","_ref$selectedEntityNu","selectedEntityNum","_ref$doNotShowExtraLa","doNotShowExtraLabel","_ref2$extradata"],"sourceRoot":""}