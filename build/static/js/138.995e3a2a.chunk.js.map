{"version":3,"file":"static/js/138.995e3a2a.chunk.js","mappings":"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","sources":["components/Forms/Layout/CustomDropdown/DropdownList.js","components/Forms/Layout/CustomDropdown/index.js","components/Forms/Layout/CustomTextField.js","components/Forms/Layout/DocPlaceholder.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/PublicListedComp.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/OwnedListedComp.js","components/Forms/Sections/SectionE/SubSections/subRegulatory/RegulatedComp.js","components/Forms/Sections/SectionE/SubSections/RegulatoryDetails.js","components/Forms/Sections/SectionE/RegistrationBodyInp.js","components/Forms/Sections/SectionE/NonAsicIdentNum.js","components/Forms/Sections/SectionE/SubSections/ForeignCompanyDetails.js","components/Forms/Sections/SectionE/SubSections/IdentificationDocs.js","components/Forms/Sections/SectionE/Directors.js","components/Forms/Sections/SectionE/MoreThanFourDirectors.js","components/Forms/Sections/SectionE/SubSections/DirectorsSection.js","components/Forms/Sections/SectionE/SubSections/CompanyType.js","components/Forms/Sections/SectionE/SectionEContent.js","utils/documentUploads/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst DropdownList = ({ onSelectOption, dropdownOptions=[], addClass, renderLabel, onClickVisible }) => {\r\n\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      onClickVisible();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, [dropdownRef]);\r\n \r\n  const renderOption = ({label, value}) => <p key={`${value}`} onClick={()=>onSelectOption({label, value})}>{renderLabel({label, value})}</p>\r\n\r\n  const renderDropdownList = (optionsList) => optionsList.map((each)=> renderOption({label:each[1], value:each[0]}))\r\n \r\n  return (\r\n    <div className={`dropdown__main--options ${addClass}`} ref={dropdownRef}>\r\n      {renderDropdownList(dropdownOptions)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownList;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\nimport DropdownList from './DropdownList';\r\n\r\nconst CustomDropdown = ({ dropdownOptions, selectedOption, updateSelectedOption, addClass=\"\", extraLabel=\"\", doNotShowExtraLabelSpecial=[] }) => {\r\n\r\n  const [ toggle, setToggle ] = useState(false);\r\n\r\n  const onClickVisible = () => setToggle( prevState => !prevState )\r\n\r\n  const onSelectOption = ({label, value}) => {\r\n    updateSelectedOption({label, value})\r\n    onClickVisible();\r\n  }\r\n\r\n  const renderLabel = (option) =>{\r\n    const mainLabel = option?.label || \"\"\r\n\r\n    if(doNotShowExtraLabelSpecial.includes(option?.value)){\r\n      return mainLabel\r\n    } else if(option?.label && extraLabel){\r\n      return `${option.label} ${extraLabel}`\r\n    }\r\n    return mainLabel\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"dropdown__main\">\r\n            <div className=\"dropdown__main--selected\" onClick={onClickVisible}>\r\n                <label>{renderLabel(selectedOption)}</label>\r\n                <FontAwesomeIcon icon={toggle? faCaretUp : faCaretDown} />\r\n            </div>\r\n            {toggle && <DropdownList\r\n            onSelectOption={onSelectOption}\r\n            dropdownOptions={dropdownOptions}\r\n            addClass={addClass}\r\n            renderLabel={renderLabel}\r\n            onClickVisible={onClickVisible}\r\n            />}  \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CustomDropdown;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isArray } from '../../../utils/validations/helperFunc';\r\nimport { renderErrorTxt } from '../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CustomTextField = ({ placeholder, id, label, type, asterisk, belowText, inputType, name, value, onChangeFn, formErrors={}, maxDate }) => {\r\n  const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  const onChangeHandle = (e) =>{\r\n    const {name, value} = e.target;\r\n    onChangeFn({name, value}) \r\n  }\r\n\r\n  const renderErrors = () => {\r\n\r\n    \r\n\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        return renderErrorTxt(formErrors[name])\r\n      } else{\r\n        return renderErrorTxt([formErrors[name]])\r\n      }\r\n    }\r\n    return null\r\n\r\n    // return formErrors[name]? renderErrorTxt(formErrors[name]) : null\r\n  }\r\n\r\n  const isIncorrect = () => {\r\n    if(formErrors[name]){\r\n      if(isArray(formErrors[name])){\r\n        // return renderErrorTxt(formErrors[name])\r\n        return !!formErrors[name][0]?.length\r\n      } else{\r\n        return !!formErrors[name]?.length\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className={`form-input ${type? type : \"\"} ${isIncorrect()? 'incorrect':''}`}>\r\n        <label htmlFor={id}>{label} {asterisk !==\"\"? <span>*</span>: null}</label>\r\n        <input className=\"form-input-common\" type={inputType? inputType : \"text\"} placeholder={placeholder} id={id} required={asterisk !==\"\"? true: false} name={name} value={value || \"\"} onChange={onChangeHandle} disabled={!!invFormStatus.loader} max={maxDate || null}/>\r\n        \r\n        {belowText? <div className=\"input__desc\">\r\n          <p className=\"input__desc--p\">{belowText}</p>\r\n        </div>: null}\r\n\r\n        {renderErrors()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderOnConfirm } from '../../stylesheet/Loader';\r\nimport { LOADING , SUCCESS, FAILED } from '../../../constants';\r\n\r\nconst DocPlaceholder = ({uploadedDocs=[], onAddFiles, onClickRemove, onClickDel, multiple=true, accept=\"application/pdf, image/*\", uniqId}) => {\r\n\r\n  const allowedTypes = [\"image/jpg\", \"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n\r\n  const manipulateUI = (e) => {\r\n    const chosenFiles = Array.prototype.slice.call(e.target.files) || []\r\n    const validFiles = chosenFiles.filter((file)=> allowedTypes.includes(file.type))\r\n\r\n    onAddFiles(validFiles);\r\n  }\r\n\r\n  const removeFileFromFileList = (fileName) => {\r\n    const dt = new DataTransfer();\r\n    const input = document.getElementById(`file-doc-in-${uniqId}`);\r\n    const { files } = input;\r\n    \r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      if (fileName !== file.name){\r\n        dt.items.add(file); // add the file back to input.\r\n      }\r\n    }\r\n    \r\n    input.files = dt.files // Assign the updates list\r\n  }\r\n\r\n  const onHandleClear = (fileName)=>{\r\n    onClickRemove(fileName);\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const onHandleDelete = ({fileName, fileData}) => {\r\n    onClickDel({fileName, docData: fileData})\r\n    removeFileFromFileList(fileName);\r\n  }\r\n\r\n  const renderDel = ({fileName, fileData}) => {\r\n    if(fileData?.delLoader) {\r\n      return <span style={{marginLeft:10}}> <LoaderOnConfirm /> </span>\r\n    }\r\n    return (<span\r\n              style={{marginLeft:10}}\r\n              onClick={()=>onHandleDelete({fileName, fileData})}\r\n            >\r\n              <FontAwesomeIcon className='docPreviewDelIcon' icon={faTrashAlt}/>\r\n            </span>)\r\n  }\r\n\r\n  const renderStatus = (status, fileName, fileData) => {\r\n    if(status === SUCCESS) {  //return success icon\r\n      return(\r\n        <>\r\n          <FontAwesomeIcon icon={faCheck}/>\r\n          {renderDel({fileName, fileData})}\r\n        </>\r\n      ) \r\n    }else if(status === FAILED) {\r\n      return <button className=\"link-button\" onClick={()=> onHandleClear(fileName)}>upload failed <FontAwesomeIcon icon={faTimes}/></button> //status is failed - user shall clear file from list & retry\r\n    }else if(status === LOADING){\r\n      return <LoaderOnConfirm /> //return loader icon\r\n    }\r\n  }\r\n\r\n  const renderFileLabel = (fileData) => {\r\n    \r\n    if(fileData?.type?.label && fileData?.extraDetails?.label){\r\n      return `(${fileData.type.label} - ${fileData?.extraDetails?.label})`\r\n    } else if(fileData?.type?.label){\r\n      return `(${fileData.type.label})`\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const mapUploadedDocs = () => {\r\n    return (\r\n      <div className=\"docPlaceholder__uploaded\">\r\n        {uploadedDocs.map((each)=> {\r\n          return (\r\n            <div className=\"docPlaceholder__uploaded--responses\" key={each.file.name}>\r\n              <a className=\"link-button\" target=\"_blank\" href={each?.docUrl? each?.docUrl: null} rel=\"noreferrer\">{each.file.name}</a><span className='uploaded-file-label'>{renderFileLabel(each)}</span>\r\n              <span style={{marginLeft:5}}>{renderStatus(each.loader, each.file.name, each)}</span>\r\n            </div>\r\n          )\r\n        })} \r\n      </div>\r\n    )\r\n  }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"docPlaceholder\">\r\n        <div className=\"docPlaceholder__container\">\r\n          <input type=\"file\" id={`file-doc-in-${uniqId}`} className={`docPlaceholder__container--input ${false? 'doc-opacity': ''}`} onChange={manipulateUI} multiple={multiple} accept={accept}/>\r\n          <label htmlFor={`file-doc-in-${uniqId}`} id=\"uploadDocLabel\" className=\"docPlaceholder__container--p\">Drag your documents here to start uploading</label>\r\n        </div>\r\n      </div>\r\n      {mapUploadedDocs()}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DocPlaceholder;","import React, { useEffect, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction PublicListedComp({ secE, onChangeFn }) {\r\n\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'public_company_market_name', value:''})\r\n            onChangeFn({name:'public_company_country', value:''})\r\n        }\r\n    },[]);\r\n\r\n    const countryValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.regulatory_detail?.public_company_country){\r\n              return  country.label?.toLowerCase() === secE?.regulatory_detail?.public_company_country.toLowerCase()\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeFn({ name: 'public_company_country', value: value.label })\r\n    }\r\n\r\n  return (\r\n    <div className=\"sub__form u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Name of market / exchange\"\r\n            id=\"sec-e-public-listed-name\"\r\n            label=\"Name of market / exchange\"\r\n            asterisk=\"*\"\r\n            name=\"public_company_market_name\"\r\n            value={secE.regulatory_detail?.public_company_market_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n\r\n        <div className=\"country__dropdown\">\r\n            <label>Country <span>*</span></label>\r\n            <Select\r\n                className={invFormStatus.errors?.public_company_country && 'incorrect'}\r\n                id=\"select-dropdown-country\"\r\n                name=\"public_company_country\"\r\n                autoFocus={false}\r\n                options={options}\r\n                placeholder=\"Select a Country\"\r\n                value={countryValue()}\r\n                onChange={onChangeSelectHandler}\r\n            />\r\n\r\n            {invFormStatus.errors?.public_company_country?\r\n            <div className=\"input__desc\">\r\n                {renderErrorTxt(invFormStatus.errors?.public_company_country)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PublicListedComp","import React, { useEffect, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction OwnedListedComp({ secE, onChangeFn }) {\r\n\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'majority_owned_listed_company_name', value:''})\r\n            onChangeFn({name:'majority_owned_name_of_market', value:''})\r\n            onChangeFn({name:'majority_owned_country', value:''})\r\n        }\r\n    },[]);\r\n\r\n    const countryValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.regulatory_detail?.majority_owned_country){\r\n              return  country.label?.toLowerCase() === secE?.regulatory_detail?.majority_owned_country.toLowerCase()\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeFn({ name: 'majority_owned_country', value: value.label })\r\n    }\r\n\r\n    return (\r\n    <div className=\"u-padding-y\">\r\n            <CustomTextField \r\n                placeholder=\"Listed company name\"\r\n                id=\"sec-e-major-listed-name\"\r\n                label=\"Listed company name\"\r\n                type=\"form-input-full-width\"\r\n                asterisk=\"*\"\r\n                name=\"majority_owned_listed_company_name\"\r\n                value={secE.regulatory_detail?.majority_owned_listed_company_name || \"\"}\r\n                onChangeFn={onChangeFn}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name of market / exchange\"\r\n                    id=\"sec-e-major-owned-name\"\r\n                    label=\"Name of market / exchange\"\r\n                    asterisk=\"*\"\r\n                    name=\"majority_owned_name_of_market\"\r\n                    value={secE.regulatory_detail?.majority_owned_name_of_market || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n\r\n                <div className=\"country__dropdown\">\r\n                    <label>Country <span>*</span></label>\r\n                    <Select\r\n                        className={invFormStatus.errors?.majority_owned_country && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"majority_owned_country\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {invFormStatus.errors?.majority_owned_country?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.majority_owned_country)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default OwnedListedComp","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction RegulatedComp({secE, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            onChangeFn({name:'regulator_name', value:''})\r\n            onChangeFn({name:'regulator_licence_details', value:''})\r\n        }\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"sub__form u-padding-y\">\r\n        <CustomTextField \r\n            placeholder=\"Regulator name\"\r\n            id=\"sec-e-regulator-name\"\r\n            label=\"Regulator name\"\r\n            asterisk=\"*\"\r\n            name=\"regulator_name\"\r\n            value={secE.regulatory_detail?.regulator_name || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n        <CustomTextField \r\n            placeholder=\"Licence details (e.g. AFSL, ACL, RSE)e\"\r\n            id=\"sec-e-regulator-licence\"\r\n            label=\"Licence details (e.g. AFSL, ACL, RSE)\"\r\n            asterisk=\"*\"\r\n            name=\"regulator_licence_details\"\r\n            value={secE.regulatory_detail?.regulator_licence_details || \"\"}\r\n            onChangeFn={onChangeFn}\r\n            formErrors={invFormStatus.errors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegulatedComp","import { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport PublicListedComp from './subRegulatory/PublicListedComp';\r\nimport OwnedListedComp from './subRegulatory/OwnedListedComp';\r\nimport RegulatedComp from './subRegulatory/RegulatedComp';\r\nimport { COMPANY_IS_NOT_REGULATED_OR_LISTED_E, PUBLIC_LISTED_COMPANY_E, MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E, REGULATED_COMPANY_E } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst RegulatoryDetails = ({onFormChange}) => {\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeFn = ({name, value}) => {\r\n        onFormChange({name, value, level:\"regulatory_detail\"})\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"regulatory_detail\"});\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.4 Regulatory / Listing Details (All Companies To Complete)</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h6>Is the company regulated or listed?<span>*</span></h6>\r\n\r\n            <div className=\"\">\r\n                <CustomRadioInput\r\n                    name=\"is_company_regulated\"\r\n                    id=\"sec-e-company-not-regulated\"\r\n                    content=\"Company is not regulated or listed\"\r\n                    val={COMPANY_IS_NOT_REGULATED_OR_LISTED_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                    checked={secE.regulatory_detail?.is_company_regulated === COMPANY_IS_NOT_REGULATED_OR_LISTED_E}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_company_regulated\"\r\n                    id=\"sec-e-public-listed\"\r\n                    content=\"Public listed company\"\r\n                    val={PUBLIC_LISTED_COMPANY_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                    checked={secE.regulatory_detail?.is_company_regulated === PUBLIC_LISTED_COMPANY_E}\r\n                />\r\n\r\n                {/* public listed input fields  */}\r\n                {secE.regulatory_detail?.is_company_regulated === PUBLIC_LISTED_COMPANY_E? <PublicListedComp secE={secE} onChangeFn={onChangeFn}/>: null }\r\n\r\n                <CustomRadioInput\r\n                name=\"is_company_regulated\"\r\n                id=\"sec-e-major-owned-subsidiary\"\r\n                content=\"Majority-owned subsidiary of a listed company\"\r\n                val={MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E}\r\n                onChangeFn={onChangeRadioFn}\r\n                checked={secE.regulatory_detail?.is_company_regulated === MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E}\r\n                />\r\n\r\n                {/* major owned subsidiary inputs */}\r\n                {secE.regulatory_detail?.is_company_regulated === MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E? <OwnedListedComp secE={secE} onChangeFn={onChangeFn}/>: null }\r\n\r\n                <CustomRadioInput\r\n                name=\"is_company_regulated\"\r\n                id=\"sec-e-company-regulated\"\r\n                content=\"Regulated company - A company whose activities are subject to the oversight of a Commonwealth, State or Territory statutory regulator. In this context “Regulated” means subject to supervision beyond that provided by ASIC as a company registration body. For example, Australian Financial Services Licensee (AFSL), Australian Credit Licensee (ACL) or Registrable Superannuation Entity (RSE) Licensee\"\r\n                type=\"row-input\"\r\n                val={REGULATED_COMPANY_E}\r\n                onChangeFn={onChangeRadioFn}\r\n                checked={secE.regulatory_detail?.is_company_regulated === REGULATED_COMPANY_E}\r\n                />\r\n\r\n                {/* regulated company input fields */}\r\n                {secE.regulatory_detail?.is_company_regulated === REGULATED_COMPANY_E? <RegulatedComp secE={secE} onChangeFn={onChangeFn}/> : null }\r\n            </div>\r\n            {invFormStatus.errors?.is_company_regulated? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.is_company_regulated)}\r\n        </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegulatoryDetails;","import React, {useEffect} from 'react';\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction RegistrationBodyInp({onChangeFn, secE, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"relevant_foreign_registration_body\", value:\"\"})    \r\n        }\r\n    },[])\r\n\r\n    const onChangeIn = (e) => {\r\n        const {name, value} = e.target;\r\n        onChangeFn({name, value})\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <input className=\"form-input-common\" type=\"text\" placeholder=\"Name of registration body\" id=\"sec-e-name-reg-body\" name=\"relevant_foreign_registration_body\" value={secE?.relevant_foreign_registration_body || \"\"} onChange={onChangeIn} />\r\n    {formErrors?.relevant_foreign_registration_body? <div className=\"input__desc\">\r\n        {renderErrorTxt(formErrors?.relevant_foreign_registration_body)}\r\n    </div>: null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegistrationBodyInp","import React,{useEffect}  from 'react'\r\nimport { renderErrorTxt } from '../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction NonAsicIdentNum({secE, onChangeFn, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"foreign_registration_body_identification\", value:\"\"})    \r\n        }\r\n    },[])\r\n\r\n    const onChangeIn = (e) => {\r\n        const {name, value} = e.target;\r\n        onChangeFn({name, value})\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"input__desc full-width\">\r\n            <p className=\"input__desc--p\">If Yes, please provide the company identification number (if any) that was issued by the relevant foreign body upon the company's formation, incorporation or regulation</p>\r\n        </div>\r\n        <div className=\"form-input form-input-full-width\">\r\n            <input className=\"form-input-common\" type=\"text\" placeholder=\"Company identification number\" id=\"sec-e-company-id\" name=\"foreign_registration_body_identification\" value={secE?.foreign_registration_body_identification || \"\"} onChange={onChangeIn}/>\r\n        </div>\r\n        {formErrors?.foreign_registration_body_identification? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.foreign_registration_body_identification)}\r\n        </div>: null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NonAsicIdentNum","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport RegistrationBodyInp from '../RegistrationBodyInp';\r\nimport NonAsicIdentNum from '../NonAsicIdentNum';\r\nimport { ADDRESS_TYPE_AUSTRALIAN_E, ADDRESS_TYPE_ASIC_REGISTERED_E, ADDRESS_TYPE_NON_ASIC_REGISTERED_E, YES_E, NO_E } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport countryList from 'react-select-country-list';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nconst ForeignCompanyDetails = ({ onFormChange }) => {\r\n\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const errMsgsAus = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_AUSTRALIAN_E]: [],\r\n    }\r\n    const errMsgsAsic = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_ASIC_REGISTERED_E]: [],\r\n    }\r\n    const errMsgsNonAsic = {\r\n        full_company_address : invFormStatus.errors?.full_company_address? invFormStatus.errors?.full_company_address[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        suburb : invFormStatus.errors?.suburb? invFormStatus.errors?.suburb[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        state : invFormStatus.errors?.state? invFormStatus.errors?.state[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n        countrySub : invFormStatus.errors?.countrySub? invFormStatus.errors?.countrySub[ADDRESS_TYPE_NON_ASIC_REGISTERED_E]: [],\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onFormChange({ name: 'country', value: value.label })\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) =>{\r\n        onFormChange({name, value})\r\n    }\r\n\r\n    const onChangeARBN = ({name, value}) =>{\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeFn({name, value:trimmedVal})\r\n    }\r\n\r\n    const onChangeAddress = ({name, value, addressType}) =>{\r\n        onFormChange({name, value, level:\"address_details\", address_type:addressType})\r\n    }\r\n\r\n    const getValueAddressType = (addressType, keyName) =>{\r\n        const address = secE.address_details.find((each)=> addressType===each?.address_type) || {};\r\n        const val = address[keyName] || \"\"\r\n        return val\r\n    }\r\n\r\n    const countryOfFormationValue = () => {\r\n        const value = options.find((country) => {\r\n            if(secE?.country){\r\n              return  country.label?.toLowerCase() === secE?.country?.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const countryValue = (type) => {\r\n        \r\n        const findCountry = getValueAddressType(type, \"country\");\r\n\r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.1 Foreign Company Details</h4>\r\n\r\n        <div className=\"section__container--box\">\r\n            <div>\r\n                <CustomTextField \r\n                    placeholder=\"Full name of the foreign company\"\r\n                    id=\"sec-e-fullname-fc\"\r\n                    label=\"Full name of the foreign company\"\r\n                    type=\"form-input-full-width\"\r\n                    asterisk=\"*\"\r\n                    name=\"full_name\"\r\n                    value={secE?.full_name}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={invFormStatus.errors}\r\n                />\r\n\r\n                <div className=\"u-margin-bottom-lg col-layout\">\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country of formation / incorporation / registration <span>*</span></label>\r\n                        <Select\r\n                            className={invFormStatus.errors?.country && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryOfFormationValue()}\r\n                            onChange={onChangeSelectHandler}\r\n                        />\r\n\r\n                        {invFormStatus.errors?.country?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(invFormStatus.errors?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* Complete this section if the company is registered with ASIC */}\r\n            <div>\r\n                <h5 className=\"u-padding-10y\">Complete this section if the company is registered with ASIC</h5>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"ARBN\"\r\n                        id=\"sec-e-arbn\"\r\n                        label=\"ARBN\"\r\n                        asterisk=\"\"\r\n                        name=\"arbn\"\r\n                        value={secE?.arbn}\r\n                        onChangeFn={onChangeARBN}\r\n                        formErrors={invFormStatus.errors}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Australian agent name\"\r\n                        id=\"sec-e-name-aus-agent\"\r\n                        label=\"Australian agent name (if applicable)\"\r\n                        asterisk=\"\"\r\n                        name=\"australian_agent_name\"\r\n                        value={secE?.australian_agent_name}\r\n                        onChangeFn={onChangeFn}\r\n                        formErrors={invFormStatus.errors}\r\n                    />\r\n                </div>\r\n                <div className=\"u-padding-10y\">\r\n                    <CustomTextField\r\n                        placeholder=\"Principal place of business in Australia or Australian agent address details\"\r\n                        id=\"sec-e-place-of-business\"\r\n                        label=\"Principal place of business in Australia or Australian agent address details (PO Box not permitted)\"\r\n                        asterisk=\"\"\r\n                        type=\"form-input-full-width\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-e-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-e-street-no\"\r\n                        label=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street name\"\r\n                        id=\"sec-e-street-name\"\r\n                        label=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField \r\n                        id=\"sec-e-suburb\"\r\n                        placeholder=\"Suburb/Town\"\r\n                        label=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-state\"\r\n                        placeholder=\"State\"\r\n                        label=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        label=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_AUSTRALIAN_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_AUSTRALIAN_E})}\r\n                        formErrors={errMsgsAus}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsAus?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_AUSTRALIAN_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_AUSTRALIAN_E })}\r\n                        />\r\n\r\n                        {errMsgsAus?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsAus?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                </div>\r\n                <div  className=\"u-padding-10y\">\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-office-address\"\r\n                        label=\"Registered office address\"\r\n                        placeholder=\"Registered office address\"\r\n                        asterisk=\"\"\r\n                        type=\"form-input-full-width\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-unit-no\"\r\n                        label=\"Unit No./Level\"\r\n                        placeholder=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-street-no\"\r\n                        label=\"Street Number\"\r\n                        placeholder=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-street-name\"\r\n                        label=\"Street name\"\r\n                        placeholder=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-suburb\"\r\n                        label=\"Suburb/Town\"\r\n                        placeholder=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-state\"\r\n                        label=\"State\"\r\n                        placeholder=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"sec-e-reg-postcode\"\r\n                        label=\"Postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_ASIC_REGISTERED_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsAsic}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown u-margin-bottom-3\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsAsic?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_ASIC_REGISTERED_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_ASIC_REGISTERED_E })}\r\n                        />\r\n\r\n                        {errMsgsAsic?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsAsic?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Is the company also registered with a relevant foreign registration body? */}\r\n            <div className=\"u-padding-10y\">\r\n                <h6>Is the company also registered with a relevant foreign registration body?</h6>\r\n                <div>\r\n                    <div className=\"form-input-radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"is_registered_with_relevant_foreign_registration_body\"\r\n                            id=\"sec-e-reg-foreign-body-yes\"\r\n                            value={YES_E}\r\n                            checked={secE?.is_registered_with_relevant_foreign_registration_body === YES_E}\r\n                            onChange={(e)=>onChangeRadioFn({name:e.target.name, value:e.target.value})}\r\n                        />\r\n                        <label htmlFor=\"sec-e-reg-foreign-body-yes\">Yes</label>\r\n                        {secE?.is_registered_with_relevant_foreign_registration_body === YES_E? <RegistrationBodyInp onChangeFn={onChangeFn} secE={secE} formErrors={invFormStatus.errors}/>: null}\r\n                    </div>\r\n                    <CustomRadioInput\r\n                        name=\"is_registered_with_relevant_foreign_registration_body\"\r\n                        id=\"sec-e-reg-foreign-body-no\"\r\n                        content=\"No\"\r\n                        val={NO_E}\r\n                        checked={secE?.is_registered_with_relevant_foreign_registration_body === NO_E}\r\n                        onChangeFn={onChangeRadioFn}\r\n                    />\r\n                    {invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body)}\r\n                    </div>: null} \r\n                </div>\r\n            </div>\r\n\r\n            {/* Complete this section if the company is NOT registered with ASIC */}\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-y\">Complete this section if the company is NOT registered with ASIC</h5>\r\n\r\n                <div className=\"u-margin-bottom\">\r\n                    <h6>Is the company registered with a relevant foreign registration body?</h6>\r\n\r\n                    <div className=\"form-input-radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"is_registered_with_relevant_foreign_registration_body_no_asic\"\r\n                            id=\"sec-e-not-asic-foreign-yes\"\r\n                            value={YES_E}\r\n                            checked={secE?.is_registered_with_relevant_foreign_registration_body_no_asic === YES_E}\r\n                            onChange={(e)=>onChangeRadioFn({name:e.target.name, value:e.target.value})}\r\n                            // onChange={(e)=>onChangeRadioFn({name:\"is_registered_with_relevant_foreign_registration_body\", value:e.target.value})}\r\n                        />\r\n                        <label htmlFor=\"sec-e-not-asic-foreign-yes\">Yes</label>\r\n\r\n                        {secE?.is_registered_with_relevant_foreign_registration_body_no_asic === YES_E? <NonAsicIdentNum secE={secE} onChangeFn={onChangeFn} formErrors={invFormStatus.errors}/>: null}\r\n                    </div>\r\n\r\n                    <CustomRadioInput\r\n                        name=\"is_registered_with_relevant_foreign_registration_body_no_asic\"\r\n                        id=\"sec-e-not-asic-foreign-no\"\r\n                        content=\"No\"\r\n                        val={NO_E}\r\n                        checked={secE?.is_registered_with_relevant_foreign_registration_body_no_asic === NO_E}\r\n                        onChangeFn={onChangeRadioFn}\r\n                        // onChangeFn={({name, value})=>onChangeRadioFn({name:\"is_registered_with_relevant_foreign_registration_body\", value})}\r\n                    />\r\n                    {invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body_no_asic? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_registered_with_relevant_foreign_registration_body_no_asic)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                <div className=\"u-padding-y\">\r\n                    <CustomTextField\r\n                        placeholder=\"Full address of the company as registered by the foreign registration body\"\r\n                        id=\"sec-e-full-address-not-asic\"\r\n                        label=\"Full address of the company in the country of formation, incorporation or registration as registered by the foreign registration body (PO Box not permitted)\"\r\n                        type=\"form-input-full-width\"\r\n                        asterisk=\"\"\r\n                        name=\"full_company_address\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"full_company_address\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                        />\r\n                </div>\r\n                <div className=\"sub__form\">\r\n                    <CustomTextField\r\n                        placeholder=\"Unit No./Level\"\r\n                        id=\"sec-e-unit-not-asic\"\r\n                        label=\"Unit No./Level\"\r\n                        asterisk=\"\"\r\n                        name=\"unit_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"unit_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street Number\"\r\n                        id=\"sec-e-street-no-not-asic\"\r\n                        label=\"Street Number\"\r\n                        asterisk=\"\"\r\n                        name=\"street_no\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"street_no\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Street name\"\r\n                        id=\"sec-e-street-not-asic\"\r\n                        label=\"Street name\"\r\n                        asterisk=\"\"\r\n                        name=\"street_name\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"street_name\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Suburb/Town\"\r\n                        id=\"sec-e-suburb-not-asic\"\r\n                        label=\"Suburb/Town\"\r\n                        asterisk=\"\"\r\n                        name=\"suburb\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"suburb\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"State\"\r\n                        id=\"sec-e-state-not-asic\"\r\n                        label=\"State\"\r\n                        asterisk=\"\"\r\n                        name=\"state\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"state\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n                    <CustomTextField\r\n                        placeholder=\"Postcode\"\r\n                        id=\"sec-e-postcode-not-asic\"\r\n                        label=\"Postcode\"\r\n                        asterisk=\"\"\r\n                        name=\"postcode\"\r\n                        value={getValueAddressType(ADDRESS_TYPE_NON_ASIC_REGISTERED_E, \"postcode\")}\r\n                        onChangeFn={({name, value})=>onChangeAddress({name, value, addressType:ADDRESS_TYPE_NON_ASIC_REGISTERED_E})}\r\n                        formErrors={errMsgsNonAsic}\r\n                    />\r\n\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country</label>\r\n                        <Select\r\n                            className={errMsgsNonAsic?.countrySub?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"countrySub\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(ADDRESS_TYPE_NON_ASIC_REGISTERED_E)}\r\n                            onChange={(value) => onChangeAddress({ name:'country', value: value.label, addressType: ADDRESS_TYPE_NON_ASIC_REGISTERED_E })}\r\n                        />\r\n\r\n                        {errMsgsNonAsic?.countrySub?.length?\r\n                        <div className=\"input__desc\">\r\n                            {renderErrorTxt(errMsgsNonAsic?.countrySub)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForeignCompanyDetails;","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport DocPlaceholder from '../../../Layout/DocPlaceholder';\r\nimport { uploadFiles, deleteFile } from '../../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { LOADING, SUCCESS, FAILED, IDENTIFICATION_DOCUMENTS_SEC_E, ASIC_EXTRACT_DOC, COMPANY_OR_FOREIGN_BODY_EXTRACT, SEC_E_DOC_EXTRA_LABEL_MAIN } from '../../../../../constants';\r\nimport CustomDropdown from '../../../Layout/CustomDropdown';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../../utils/documentUploads';\r\nimport { useToast } from '../../../../CustomToast';\r\n\r\nconst IdentificationDocs = ({investorFormId}) => {\r\n    const dummyFn = () => {}\r\n    const toast = useToast();\r\n    const doNotShowExtraLabel = [ASIC_EXTRACT_DOC[0][0], COMPANY_OR_FOREIGN_BODY_EXTRACT[0][0]]\r\n    \r\n    const secE = useSelector((store) => store.secE);\r\n    const [selectedDocType, setSelectedDocType] = useState({label:\"Select type of document\", value:\"\"})\r\n    const [selectedDirectorNum, setSelectedDirectorNum] = useState({label:`${SEC_E_DOC_EXTRA_LABEL_MAIN} - 1`, value:1})\r\n    const [uploadedDocs, setUploadedDocs] = useState([])\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}, extraDetails={label:'', value:''}) =>{ //call api to upload files\r\n        if(file){                                 \r\n            const fileName = file.name\r\n            const metadata = JSON.stringify([{\"owner\":`${SEC_E_DOC_EXTRA_LABEL_MAIN} ${extraDetails.value}`}])\r\n\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            if(!doNotShowExtraLabel.includes(type.value)){\r\n                formData.append(\"metadata\", metadata)\r\n            }\r\n            formData.append('section', 'e');\r\n            formData.append('investor_form_id', investorFormId);\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            doNotShowExtraLabel,\r\n            selectedDocType:{...selectedDocType},\r\n            selectedEntityNum:{...selectedDirectorNum},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => { \r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const updateSelectedOption = (option) => {\r\n        //update selected document type to the state\r\n        setSelectedDocType({...option})\r\n    }\r\n\r\n    const updateSelectedDirectorNum = (option) => {\r\n        setSelectedDirectorNum({...option})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n    const inestorOptions = () => {\r\n        const tempOptionsArr = [];\r\n        const tempNoOfDirectors = secE?.number_of_directors === -1? 4 : secE?.number_of_directors || 1\r\n        for (let i = 1; i <= tempNoOfDirectors; i++) {\r\n            tempOptionsArr.push([i, `${SEC_E_DOC_EXTRA_LABEL_MAIN} - ${i}`])\r\n        }\r\n        return tempOptionsArr\r\n    }\r\n\r\nreturn (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.5 Identification Documents</h4>\r\n\r\n        {/* Registered with ASIC */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is registered with ASIC</h5>\r\n\r\n            <div>\r\n                <h6>Please provide a copy of ONE of the following documents.</h6>\r\n                <ul>\r\n                    <li>Full ASIC company extract (if company is registered in Australia)</li>\r\n                    <li>Full company extract from relevant registration body</li>\r\n                    <li>If the ASIC or foreign registration body database is not reasonably available, an original certified copy of the certificate of registration issued by ASIC or the relevant registration body</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        {/* NOT Registered with ASIC */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is NOT registered with ASIC</h5>\r\n\r\n            <div>\r\n                <h6>Please provide a copy of ONE of the following documents.</h6>\r\n                <ul>\r\n                    <li>Full company extract from relevant registration body</li>\r\n                    <li>If the foreign registration body database is not reasonably available, an original certified copy of the certificate of registration issued by the relevant registration body</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        {/* majority subsidiary */}\r\n        <div className=\"section__container--box\">\r\n            <h5>If the company is regulated, listed or a majority subsidiary of an Australian listed company</h5>\r\n\r\n            <div className=\"u-margin-bottom\">\r\n                <h6>Please provide a copy of ONE of the following documents</h6>\r\n                <ul>\r\n                    <li>Full ASIC company extract</li>\r\n                    <li>Full company extract from relevant financial market</li>\r\n                    <li>Evidence of the company's full name from the relevant Commonwealth, State or Territory statutory regulator</li>\r\n                    <li>A public document issued by the company</li>\r\n                </ul>\r\n            </div>\r\n            \r\n            <div className=\"note__box u-padding-y\">\r\n                <p className=\"note__box--p\">*Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator.\r\n    If you are unable to provide one of the above documents, please contact SS&amp;C on 02 8115 9924 or ISTradedesk@sscinc.com</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"section__container--box\">\r\n            <h5>For each Beneficial Owner (as defined in Page 19)</h5>\r\n            \r\n            {/* Copy of ONE beneficial owner */}\r\n            <div className=\"u-padding-y\">\r\n                <h6>1. Provide an ORIGINAL CERTIFIED COPY of ONE of the following documents for each Beneficial Owner:</h6>\r\n                <ul>\r\n                    <li>Australian State / Territory driver's licence containing a photograph of the person</li>\r\n                    <li>Australian passport (a passport that has expired within the preceding 2 years is acceptable)</li>\r\n                    <li>Card issued under a State or Territory for the purpose of proving a person's age containing a photograph of the person</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"divider-or u-margin-bottom\"></div>\r\n\r\n            {/* Copy of TWO beneficial owner */}\r\n            <div className=\"u-padding-10y\">\r\n                <h6>2. Provide an ORIGINAL CERTIFIED COPY of TWO of the following documents for each Beneficial Owner:</h6>\r\n                <ul>\r\n                    <li>Foreign passport or similar travel document containing a photograph and the signature of the person*</li>\r\n                    <li>Foreign driver's licence that contains a photograph of the person in whose name the document is issued*</li>\r\n                    <li>National ID card issued by a foreign government containing a photograph and a signature of the person in whose name the card was issued*</li>\r\n                </ul>\r\n                <div className=\"note__box u-padding-10y\">\r\n                    <p className=\"note__box--p\">*Documents that are written in a language other than English must be accompanied with an English translation prepared by an Accredited Translator. If you are unable to provide one of the above documents, please contact SS&amp;C on 02 8115 9924 or ISTradedesk@ sscinc.com</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h6 className=\"u-margin-bottom u-padding-y\">Please attach documents</h6>\r\n                <div className=\"sub__form\" style={{gap:16}}>\r\n                    <div style={{minWidth: 350}}>\r\n                        <CustomDropdown \r\n                            dropdownOptions={inestorOptions()}\r\n                            selectedOption={selectedDirectorNum}\r\n                            updateSelectedOption={updateSelectedDirectorNum}\r\n                        />\r\n                    </div>\r\n                    <div style={{minWidth: 375}}>\r\n                        <CustomDropdown\r\n                            addClass='control-dropdown-height'\r\n                            dropdownOptions={IDENTIFICATION_DOCUMENTS_SEC_E}\r\n                            selectedOption={selectedDocType}\r\n                            updateSelectedOption={updateSelectedOption}\r\n                            extraLabel={`(${SEC_E_DOC_EXTRA_LABEL_MAIN} - ${selectedDirectorNum?.value})`}\r\n                            doNotShowExtraLabelSpecial={doNotShowExtraLabel}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {selectedDocType?.value ?\r\n                    <div className='u-padding-y'>\r\n                        <DocPlaceholder onAddFiles={onAddFiles} uploadedDocs={uploadedDocs} onClickRemove={onClickRemove} onClickDel={onClickDel} uniqId=\"identificationdocs_e\"/>\r\n                    </div>: null\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IdentificationDocs;","import { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../Layout/CustomTextField';\r\n\r\nconst Directors = ({ directorId, details, onChangeDirectorDetails, itemIndex }) => {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const errMsgs = {\r\n        given_name : invFormStatus.errors?.given_name? invFormStatus.errors?.given_name[itemIndex]: [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[itemIndex]: [],\r\n        middle_name : invFormStatus.errors?.middle_name? invFormStatus.errors?.middle_name[itemIndex]: [],\r\n    }\r\n    \r\n    const onChangeFn = ({name, value}) => {\r\n        onChangeDirectorDetails({name, value, directorId})\r\n    }\r\n\r\n    return (\r\n    <div key={directorId}>\r\n        <h6 className=\"u-padding-10y\">{`Director ${itemIndex+1}`}</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-e-director${directorId}-given-name`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"given_name\"\r\n                    value={details?.given_name || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={errMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Surname\"\r\n                    id={`sec-e-director${directorId}-surname`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    value={details?.surname || \"\"}\r\n                    onChangeFn={onChangeFn}\r\n                    formErrors={errMsgs}\r\n                /> \r\n            </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Directors;","import React, { useState } from 'react';\r\nimport DocPlaceholder from '../../Layout/DocPlaceholder';\r\nimport { LOADING, SUCCESS, FAILED, MORE_THAN_FOUR_DIRECTORS_SEC_D_E } from '../../../../constants';\r\nimport { uploadFiles, deleteFile } from '../../../../actions/Investor-Application-Form/uploadDocActions';\r\nimport { addNewDocToArray, removeDocFromArray, updateDocArray } from '../../../../utils/documentUploads';\r\nimport { useToast } from '../../../CustomToast';\r\n\r\nconst MoreThanFourDirectors = ({ investorFormId }) => {\r\n    const toast = useToast();\r\n    const docTypeValue = {label:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][1], value:MORE_THAN_FOUR_DIRECTORS_SEC_D_E[0][0]}\r\n    const [ uploadedDocs, setUploadedDocs ] = useState([]);\r\n\r\n    const onUploadFile = async(file, type={label:'', value:''}) => {\r\n        if(file){ //files && files.length -- to make it work for multiple files\r\n            //call api to upload files\r\n            const fileName = file.name;\r\n            const formData = new FormData();\r\n\r\n            formData.append('file', file);\r\n            formData.append('type', type.value);\r\n            formData.append('section', 'e');\r\n            formData.append('investor_form_id', investorFormId);\r\n\r\n            const { success, url, data } = await uploadFiles(formData);\r\n            const extradata = {\r\n                loader: success? SUCCESS : FAILED,\r\n                docUrl: url,\r\n                resData: data\r\n            }\r\n            updateDocArray({setUploadedDocs, fileName, extradata})\r\n        }\r\n    }\r\n\r\n    const onAddFiles = (files) => {\r\n        //add selected files(by user) to local state - and call api\r\n        addNewDocToArray({\r\n            files,\r\n            uploadedDocs,\r\n            setUploadedDocs,\r\n            onUploadFile,\r\n            selectedDocType:{...docTypeValue},\r\n        })\r\n    }\r\n\r\n    const onClickRemove = (fileName) => {\r\n        //just remove the file from local state\r\n        removeDocFromArray({fileName, uploadedDocs, setUploadedDocs})\r\n    }\r\n\r\n    const onClickDel = async({fileName, docData}) => {\r\n        //delete the file from aws & remove the file from local state\r\n        updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: true}})\r\n        const { success } = await deleteFile(docData?.resData);\r\n        success && onClickRemove(fileName);\r\n        success && toast.success(\"Deleted successfully!\");\r\n        success || updateDocArray({setUploadedDocs, fileName, extradata: {delLoader: false}})\r\n        success || toast.error(\"Please try again!\")\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <DocPlaceholder\r\n            onAddFiles={onAddFiles}\r\n            uploadedDocs={uploadedDocs}\r\n            onClickRemove={onClickRemove}\r\n            uniqId=\"moredirectors\"\r\n            onClickDel={onClickDel}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoreThanFourDirectors;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport Directors from '../Directors';\r\nimport { singleDirectorDetail } from '../../../../../reducers/Investor-Application-Form/secEReducer';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport MoreThanFourDirectors from '../MoreThanFourDirectors';\r\nimport { NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E } from '../../../../../constants';\r\n\r\nconst DirectorsSection = ({ onFormChange, investorFormId }) => {\r\n    const secE = useSelector((store)=> store.secE);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const addDirectorDetails = (noOfDirectors) => {\r\n        let upd = []\r\n        const prevDirLen = secE?.directors_details?.length || 0\r\n        if(prevDirLen > noOfDirectors){\r\n            upd = secE?.directors_details?.filter((each, index)=> (index+1)<=noOfDirectors);\r\n            onFormChange({name:\"directors_details\", value:[...upd]});\r\n            return\r\n        } else if(prevDirLen === noOfDirectors) {\r\n            return\r\n        } else {\r\n            const newLen = noOfDirectors-prevDirLen\r\n            upd = [...secE?.directors_details]\r\n            const newArr = Array.from({length:newLen}, ()=>({...singleDirectorDetail}))\r\n            onFormChange({name:\"directors_details\", value:[...upd, ...newArr]})\r\n            return\r\n        }\r\n    }\r\n\r\n    const onChangeRadioFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({\r\n            name,\r\n            value: convrtToNum\r\n        });\r\n\r\n        if(convrtToNum > 0){\r\n            //update no.of directors\r\n            addDirectorDetails(convrtToNum);\r\n        }\r\n        else if(convrtToNum === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E){\r\n            addDirectorDetails(0);\r\n        }\r\n        \r\n    }\r\n\r\n    const onChangeDirectorDetails = ({directorId, name, value}) => {\r\n        const updIndex = directorId - 1;\r\n        const upd = [...secE?.directors_details];\r\n        upd[updIndex][name] = value\r\n        onFormChange({name:\"directors_details\", value:[...upd]});\r\n        return\r\n    }\r\n\r\n    const renderDirectors = () => {\r\n        return secE?.directors_details?.map((each, index)=> {\r\n            const tempId = index+1\r\n            const uniqId = tempId //each?.id || tempId\r\n            if((index < secE?.number_of_directors) && (secE?.number_of_directors !== NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E)){ //phase1 fix. remove this condition in phase-2\r\n                return <Directors key={uniqId} directorId={uniqId} details={each} onChangeDirectorDetails={onChangeDirectorDetails} itemIndex={index}/>\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">E.3 Directors (Proprietary Companies Only)</h4>\r\n        <div className=\"section__container--box\">\r\n            <h6>How many directors are there?<span>*</span></h6>\r\n            <div className=\"u-margin-bottom row-space-between\">\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-1\"\r\n                    content=\"1\"\r\n                    val=\"1\"\r\n                    checked={secE?.number_of_directors === 1}\r\n                    onChangeFn={onChangeRadioFn}            \r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-2\"\r\n                    content=\"2\"\r\n                    val=\"2\"\r\n                    checked={secE?.number_of_directors === 2}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-3\"\r\n                    content=\"3\"\r\n                    val=\"3\"\r\n                    checked={secE?.number_of_directors === 3}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-4\"\r\n                    content=\"4\"\r\n                    val=\"4\"\r\n                    checked={secE?.number_of_directors === 4}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"number_of_directors\"\r\n                    id=\"sec-e-director-5\"\r\n                    content=\"more than 4\" \r\n                    val={`${NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}`}\r\n                    checked={secE?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E}\r\n                    onChangeFn={onChangeRadioFn}\r\n                />\r\n            </div>\r\n            <React.Fragment>\r\n                {invFormStatus.errors?.number_of_directors? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.number_of_directors)}\r\n                    </div>: null}\r\n\r\n                    {secE?.number_of_directors === NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E?\r\n                        <>\r\n                            <h6 className=\"u-padding-y\">If there are more directors, please provide details on separate sheet and upload</h6>\r\n                            <MoreThanFourDirectors investorFormId={investorFormId}/>\r\n                        </>\r\n                    : null}\r\n            </React.Fragment>\r\n            {renderDirectors()}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DirectorsSection;","import { useSelector } from 'react-redux';\r\nimport { COMPANY_TYPE_PUBLIC_E, COMPANY_TYPE_PROPRIETARY_E } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst CompanyType = ({onFormChange}) => {\r\n  const secE = useSelector((store)=> store.secE);\r\n  const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n  const onChangeRadioFn = ({name, value}) =>{ \r\n    const convrtToNum = parseInt(value);\r\n    onFormChange({name, value:convrtToNum});\r\n  }\r\n\r\n  return (\r\n    <div className=\"section__container\">\r\n      <h4 className=\"section__container--subtitle\">E.2 Company Type</h4>\r\n        <div className=\"section__container--box\">\r\n        <h6>Is the company type public or proprietary?<span>*</span></h6>\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-e-company-type-public\"\r\n            content=\"Public (companies whose name does NOT include the words “Pty Ltd” or “Proprietary Ltd”; generally listed companies) Go to Section E.4\"\r\n            type=\"row-input\"\r\n            val={COMPANY_TYPE_PUBLIC_E}\r\n            checked={secE?.company_type === COMPANY_TYPE_PUBLIC_E}\r\n            onChangeFn={onChangeRadioFn}\r\n          />\r\n          <CustomRadioInput\r\n            name=\"company_type\"\r\n            id=\"sec-e-company-type-proprietary\"\r\n            content=\"Proprietary (companies whose name ends with “Proprietary Ltd” or “Pty Ltd”; also known as private company\"\r\n            type=\"\"\r\n            val={COMPANY_TYPE_PROPRIETARY_E}\r\n            checked={secE?.company_type === COMPANY_TYPE_PROPRIETARY_E}\r\n            onChangeFn={onChangeRadioFn}\r\n          />\r\n          {invFormStatus.errors?.company_type? <div className=\"input__desc\">\r\n            {renderErrorTxt(invFormStatus.errors?.company_type)}\r\n          </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyType;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TaxInformation from './SubSections/TaxInformation';\r\nimport RegulatoryDetails from './SubSections/RegulatoryDetails';\r\nimport ForeignCompanyDetails from './SubSections/ForeignCompanyDetails';\r\nimport IdentificationDocs from './SubSections/IdentificationDocs';\r\nimport DirectorsSection from './SubSections/DirectorsSection';\r\nimport CompanyType from './SubSections/CompanyType';\r\nimport {formatAndPrintDocs} from '../../../../utils/validations/helperFunc';\r\n\r\nconst SectionEContent = ({ onFormChange, investorFormId, removeDocFromArr }) => {\r\n\r\n  const secE = useSelector((store) => store.secE);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n        <h2 className=\"section__heading\">Section E: Foreign Company</h2>\r\n        <ul>\r\n            <li>Section E is to be completed by foreign companies. Please complete Section D for Australian companies. Please use BLOCK letters to complete this Application Form.</li>\r\n        </ul>\r\n\r\n        <ForeignCompanyDetails onFormChange={onFormChange}/>\r\n\r\n        <CompanyType onFormChange={onFormChange}/>\r\n\r\n        <DirectorsSection onFormChange={onFormChange} investorFormId={investorFormId} />\r\n\r\n        <RegulatoryDetails onFormChange={onFormChange}/>\r\n\r\n        {/* <TaxInformation /> */}\r\n\r\n        <IdentificationDocs investorFormId={investorFormId}/>\r\n\r\n        {secE?.documents?.length > 0? formatAndPrintDocs(secE?.documents, removeDocFromArr): null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionEContent;","import { LOADING } from \"../../constants\";\r\n\r\nexport const addNewDocToArray = ({files, uploadedDocs, setUploadedDocs, onUploadFile, selectedDocType, selectedEntityNum={}, doNotShowExtraLabel=[]}) => {\r\n    const uploaded = [...uploadedDocs];\r\n        \r\n        files.some((file) => { \r\n            if(uploaded.findIndex((f) => f.file.name === file.name) === -1){\r\n                //call upload file --\r\n                onUploadFile(file, {...selectedDocType}, {...selectedEntityNum});\r\n                uploaded.push({ \r\n                    file,\r\n                    loader: LOADING,\r\n                    docUrl: \"\",\r\n                    type: {...selectedDocType},\r\n                    ...(doNotShowExtraLabel?.length ? !doNotShowExtraLabel.includes(selectedDocType.value) && {extraDetails: {...selectedEntityNum}} : false), //add extra details if array exists and value is not from array\r\n                });\r\n            }\r\n            //return a true if you want to cancel file adding and call api process -- (for example to put a limit on no.of files)\r\n        });\r\n        \r\n        setUploadedDocs(uploaded);\r\n}\r\n\r\nexport const updateDocArray = ({setUploadedDocs, fileName, extradata={}}) => {\r\n    setUploadedDocs((prevDocs) => { //set the state of loader w.r.t file name\r\n        return prevDocs.map((each)=>{\r\n            if(each.file.name === fileName){ \r\n                return {\r\n                    ...each,\r\n                    ...extradata\r\n                }\r\n            }\r\n            return each\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeDocFromArray = ({fileName, uploadedDocs, setUploadedDocs}) => { \r\n    const allFiles = [...uploadedDocs];\r\n    const newSetFiles = allFiles.filter((each)=>{\r\n        return each.file.name !== fileName;\r\n    });\r\n    setUploadedDocs([...newSetFiles]);\r\n}"],"names":["_ref","onSelectOption","_ref$dropdownOptions","dropdownOptions","addClass","renderLabel","onClickVisible","dropdownRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","optionsList","_jsx","className","concat","ref","children","map","each","_ref2","label","value","onClick","renderOption","selectedOption","updateSelectedOption","_ref$addClass","_ref$extraLabel","extraLabel","_ref$doNotShowExtraLa","doNotShowExtraLabelSpecial","_useState","useState","_useState2","_slicedToArray","toggle","setToggle","prevState","option","mainLabel","includes","_jsxs","FontAwesomeIcon","icon","faCaretUp","faCaretDown","DropdownList","placeholder","id","type","asterisk","belowText","inputType","name","onChangeFn","_ref$formErrors","formErrors","maxDate","invFormStatus","useSelector","store","_formErrors$name$","_formErrors$name","isArray","length","isIncorrect","htmlFor","required","onChange","e","_e$target","disabled","loader","max","renderErrorTxt","_ref$uploadedDocs","uploadedDocs","onAddFiles","onClickRemove","onClickDel","_ref$multiple","multiple","_ref$accept","accept","uniqId","allowedTypes","removeFileFromFileList","fileName","dt","DataTransfer","input","getElementById","files","i","file","items","add","renderDel","_ref3","fileData","delLoader","style","marginLeft","LoaderOnConfirm","docData","onHandleDelete","faTrashAlt","renderStatus","status","SUCCESS","_Fragment","faCheck","FAILED","onHandleClear","faTimes","LOADING","renderFileLabel","_fileData$type","_fileData$extraDetail","_fileData$type2","_fileData$extraDetail2","extraDetails","React","validFiles","Array","prototype","slice","call","filter","href","docUrl","rel","_secE$regulatory_deta3","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","secE","options","useMemo","countryList","getData","CustomTextField","regulatory_detail","public_company_market_name","errors","Select","public_company_country","autoFocus","find","country","_secE$regulatory_deta","_country$label","_secE$regulatory_deta2","toLowerCase","_secE$regulatory_deta4","majority_owned_listed_company_name","majority_owned_name_of_market","majority_owned_country","regulator_name","regulator_licence_details","_secE$regulatory_deta5","_secE$regulatory_deta6","_secE$regulatory_deta7","onFormChange","level","onChangeRadioFn","convrtToNum","parseInt","CustomRadioInput","content","val","COMPANY_IS_NOT_REGULATED_OR_LISTED_E","checked","is_company_regulated","PUBLIC_LISTED_COMPANY_E","PublicListedComp","MAJORITY_OWNED_SUBSIDIARY_OF_A_LISTED_COMPANY_E","OwnedListedComp","REGULATED_COMPANY_E","RegulatedComp","relevant_foreign_registration_body","foreign_registration_body_identification","_invFormStatus$errors4","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_invFormStatus$errors17","_invFormStatus$errors18","_invFormStatus$errors19","_invFormStatus$errors20","_invFormStatus$errors21","_invFormStatus$errors22","_invFormStatus$errors23","_invFormStatus$errors24","_invFormStatus$errors25","_invFormStatus$errors26","_invFormStatus$errors27","_invFormStatus$errors28","_invFormStatus$errors29","_invFormStatus$errors30","_invFormStatus$errors31","_invFormStatus$errors32","_invFormStatus$errors33","_invFormStatus$errors34","_invFormStatus$errors35","_invFormStatus$errors36","_invFormStatus$errors37","_invFormStatus$errors38","_invFormStatus$errors39","_invFormStatus$errors40","_invFormStatus$errors41","_invFormStatus$errors42","_invFormStatus$errors43","_invFormStatus$errors44","_invFormStatus$errors45","_invFormStatus$errors46","_invFormStatus$errors47","_invFormStatus$errors48","_invFormStatus$errors49","_invFormStatus$errors50","_invFormStatus$errors51","_errMsgsAus$countrySu","_errMsgsAus$countrySu2","_errMsgsAsic$countryS","_errMsgsAsic$countryS2","_invFormStatus$errors52","_invFormStatus$errors53","_invFormStatus$errors54","_invFormStatus$errors55","_errMsgsNonAsic$count","_errMsgsNonAsic$count2","errMsgsAus","full_company_address","ADDRESS_TYPE_AUSTRALIAN_E","unit_no","street_no","street_name","suburb","state","postcode","countrySub","errMsgsAsic","ADDRESS_TYPE_ASIC_REGISTERED_E","errMsgsNonAsic","ADDRESS_TYPE_NON_ASIC_REGISTERED_E","onChangeAddress","_ref5","addressType","address_type","getValueAddressType","keyName","address_details","countryValue","findCountry","_country$label2","full_name","_secE$country","arbn","_ref4","trimmedVal","replaceAllWhiteSpaces","australian_agent_name","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","YES_E","is_registered_with_relevant_foreign_registration_body","RegistrationBodyInp","NO_E","is_registered_with_relevant_foreign_registration_body_no_asic","NonAsicIdentNum","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","investorFormId","toast","useToast","doNotShowExtraLabel","ASIC_EXTRACT_DOC","COMPANY_OR_FOREIGN_BODY_EXTRACT","selectedDocType","setSelectedDocType","_useState3","SEC_E_DOC_EXTRA_LABEL_MAIN","_useState4","selectedDirectorNum","setSelectedDirectorNum","_useState5","_useState6","setUploadedDocs","onUploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","metadata","formData","_yield$uploadFiles","success","url","data","extradata","_args","arguments","wrap","_context","prev","next","undefined","JSON","stringify","FormData","append","uploadFiles","sent","resData","updateDocArray","stop","_x","apply","removeDocFromArray","_callee2","_yield$deleteFile","_context2","deleteFile","error","_x2","gap","minWidth","CustomDropdown","tempOptionsArr","tempNoOfDirectors","number_of_directors","push","inestorOptions","_objectSpread","IDENTIFICATION_DOCUMENTS_SEC_E","DocPlaceholder","addNewDocToArray","selectedEntityNum","directorId","details","onChangeDirectorDetails","itemIndex","errMsgs","given_name","surname","middle_name","docTypeValue","MORE_THAN_FOUR_DIRECTORS_SEC_D_E","addDirectorDetails","noOfDirectors","_secE$directors_detai","_secE$directors_detai2","upd","prevDirLen","directors_details","index","_toConsumableArray","newLen","newArr","from","singleDirectorDetail","NO_OF_DIRECTORS_MORE_THAN_4_SEC_D_E","updIndex","MoreThanFourDirectors","_secE$directors_detai3","Directors","renderDirectors","COMPANY_TYPE_PUBLIC_E","company_type","COMPANY_TYPE_PROPRIETARY_E","_secE$documents","removeDocFromArr","ForeignCompanyDetails","CompanyType","DirectorsSection","RegulatoryDetails","IdentificationDocs","documents","formatAndPrintDocs","_ref$selectedEntityNu","uploaded","some","findIndex","f","_ref2$extradata","prevDocs","newSetFiles"],"sourceRoot":""}