{"version":3,"file":"static/js/629.ad174b8e.chunk.js","mappings":"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","sources":["components/Forms/Sections/SectionG/SubSections/subTaxStatus/OtherFactaInp.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/TrusteeGiinComp.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/GiinAndStatus.js","components/Forms/Sections/SectionG/SubSections/subTaxStatus/ActiveNonFinancialEntity.js","components/Forms/Sections/SectionG/SubSections/TaxStatus.js","components/Forms/Sections/SectionG/SubSections/NoTinExplain.js","components/Forms/Sections/SectionG/SubSections/NoTinReason.js","components/Forms/Sections/SectionG/SubSections/TaxResidentCountries.js","components/Forms/Sections/SectionG/SubSections/TfnDetails.js","components/Forms/Sections/SectionG/SubSections/TaxResidency.js","components/Forms/Sections/SectionG/SubSections/IdentifyPepName.js","components/Forms/Sections/SectionG/SubSections/TfnNumCntrlPerson.js","components/Forms/Sections/SectionG/SubSections/CntrlPerTaxResidentCountries.js","components/Forms/Sections/SectionG/SubSections/CntrlPerExtraDetails.js","components/Forms/Sections/SectionG/SubSections/subCntrlnPersonDetails/ResidenceDetailsOther.js","components/Forms/Sections/SectionG/SubSections/ControllingPersonDetails.js","components/Forms/Sections/SectionG/SubSections/ControllingPersons.js","components/Forms/Sections/SectionG/SectionGContent.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction OtherFactaInp({onChangeInp, secG, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeInp({name:'fatca_status_description', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Describe FATCA status\"\r\n            id=\"sec-g-desc-status\"\r\n            label=\"Describe FATCA status\"\r\n            type=\"form-input-full-width u-margin-bottom-0\"\r\n            asterisk=\"*\"\r\n            name=\"fatca_status_description\"\r\n            value={secG?.fatca_status_description}\r\n            onChangeFn={onChangeInp}\r\n            formErrors={formErrors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OtherFactaInp","import React, {useEffect} from 'react';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\n\r\nfunction TrusteeGiinComp({value, onChangeInp, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n\r\n        return ()=>{\r\n             onChangeInp({name:'trustee_giin', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n        <CustomTextField\r\n            placeholder=\"Trustee GIIN\"\r\n            id=\"sec-g-trustee-giin\"\r\n            label=\"If the entity is a trust and a Trustee-documented trust, provide trustee GIIN\"\r\n            type=\"form-input-full-width u-margin-bottom-0\"\r\n            asterisk=\"\"\r\n            name=\"trustee_giin\"\r\n            value={value || \"\"}\r\n            onChangeFn={onChangeInp}\r\n            formErrors={formErrors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrusteeGiinComp","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport CustomRadioInput from '../../../../Layout/CustomRadioInput';\r\nimport OtherFactaInp from './OtherFactaInp';\r\nimport TrusteeGiinComp from './TrusteeGiinComp';\r\nimport {YES_G, NO_G, DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G, EXCEPTED_FINANCIAL_INSTITUTION_G, NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G, NON_PARTICIPATING_FINANCIAL_INSTITUTION_G, OTHER_FACTA_STATUS_G} from '../../../../../../constants'\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction GiinAndStatus({secG, onChangeInp, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeInp({name:'giin', value:''})\r\n            // onChangeInp({name:'trustee_giin', value:''})\r\n            onChangeInp({name:'fatca_status_description', value:''})\r\n            onChangeFn({name:'fatca_status_exclude_giin', value:''})\r\n            onChangeFn({name:'is_located_in_non_participating_crs_jurisdiction', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-10y u-padding-bottom-0\">\r\n            <CustomTextField\r\n                placeholder=\"Global Intermediary Identification Number (GIIN)\"\r\n                id=\"sec-g-giin\"\r\n                label=\"Global Intermediary Identification Number (GIIN) (if applicable)\"\r\n                type=\"form-input-full-width\"\r\n                asterisk=\"\"\r\n                name='giin'\r\n                value={secG?.giin || \"\"}\r\n                onChangeFn={onChangeInp}\r\n                formErrors={invFormStatus.errors}\r\n            />\r\n            <div>\r\n                <h6>If the company is a Financial Institution but does not have a GIIN, what is the company's FATCA status?<span>*</span></h6>\r\n\r\n                <div>\r\n\r\n                    <CustomRadioInput \r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-dc-fin\"\r\n                        content=\"Deemed Compliant Financial Institution\"\r\n                        val={DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-excepted-fin\"\r\n                        content=\"Excepted Financial Institution\"\r\n                        val={EXCEPTED_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === EXCEPTED_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-nr-iga\"\r\n                        content=\"Non Reporting IGA Financial Institution\"\r\n                        val={NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-np-fin\"\r\n                        content=\"Non-participating Financial Institution\"\r\n                        val={NON_PARTICIPATING_FINANCIAL_INSTITUTION_G}\r\n                        checked={secG?.fatca_status_exclude_giin === NON_PARTICIPATING_FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_status_exclude_giin\"\r\n                        id=\"sec-g-other-FATCA\"\r\n                        content=\"Other - FATCA status\"\r\n                        val={OTHER_FACTA_STATUS_G}\r\n                        checked={secG?.fatca_status_exclude_giin === OTHER_FACTA_STATUS_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n                    {invFormStatus.errors?.fatca_status_exclude_giin? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.fatca_status_exclude_giin)}\r\n                    </div>: null}\r\n                </div>\r\n\r\n                {/* SubSections - Non Reporting IGA Financial Institution */}\r\n                {secG?.fatca_status_exclude_giin === NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G? <TrusteeGiinComp value={secG?.trustee_giin} onChangeInp={onChangeInp} formErrors={invFormStatus?.errors}/>: null}\r\n\r\n                {/*SubSections - Other - FATCA status */}\r\n                {secG?.fatca_status_exclude_giin === OTHER_FACTA_STATUS_G? <OtherFactaInp onChangeInp={onChangeInp} secG={secG} formErrors={invFormStatus.errors}/>: null}\r\n\r\n                <h6 className=\"u-padding-y\">Is the Financial Institution an Investment Entity located in a non-participating CRS jurisdiction* ?<span>*</span></h6>\r\n\r\n                <div >\r\n                    <CustomRadioInput\r\n                        name=\"is_located_in_non_participating_crs_jurisdiction\"\r\n                        id=\"sec-g-yes-np-crs\"\r\n                        content=\"Yes - Please complete Section G.2 and Section G.3\"\r\n                        val={YES_G}\r\n                        onChangeFn={onChangeFn}\r\n                        checked={secG?.is_located_in_non_participating_crs_jurisdiction === YES_G}\r\n                    />\r\n                    \r\n                    <CustomRadioInput\r\n                        name=\"is_located_in_non_participating_crs_jurisdiction\"\r\n                        id=\"sec-g-no-np-crs\"\r\n                        content=\"No - Proceed to Section H\"\r\n                        val={NO_G}\r\n                        onChangeFn={onChangeFn}\r\n                        checked={secG?.is_located_in_non_participating_crs_jurisdiction === NO_G}\r\n                    />\r\n                    {invFormStatus.errors?.is_located_in_non_participating_crs_jurisdiction? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.is_located_in_non_participating_crs_jurisdiction)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default GiinAndStatus","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../../Layout/CustomRadioInput';\r\nimport {AUSTRALIAN_PUBLIC_LISTED_COMPANY_G, FOREIGN_PUBLIC_LISTED_COMPANY_G, GOVERNMENTAL_ENTITY_G, PASSIVE_INCOME_MORE_THAN_50_G, OTHER_ENTITY_G} from '../../../../../../constants'\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction ActiveNonFinancialEntity({secG, onChangeFn}) {\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:'active_non_financial_entity_type', value:''})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n                    <h6>Type of Active Non-Financial Entity <span>*</span></h6>\r\n                    <div>\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-aus-pb-listed\"\r\n                            content=\"Australian Public Listed company, majority owned subsidiary of Australian Public Listed company - Proceed to Section H\"\r\n                            val={AUSTRALIAN_PUBLIC_LISTED_COMPANY_G}\r\n                            checked={secG?.active_non_financial_entity_type === AUSTRALIAN_PUBLIC_LISTED_COMPANY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-foreign-pb-listed\"\r\n                            content=\"Foreign Public Listed company or majority owned subsidiary of a foreign Public Listed company - Proceed to Section H\"\r\n                            val={FOREIGN_PUBLIC_LISTED_COMPANY_G}\r\n                            checked={secG?.active_non_financial_entity_type === FOREIGN_PUBLIC_LISTED_COMPANY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-govt-entity\"\r\n                            content=\"Governmental entity, central bank, or international organization  - Proceed to Section H\"\r\n                            val={GOVERNMENTAL_ENTITY_G}\r\n                            checked={secG?.active_non_financial_entity_type === GOVERNMENTAL_ENTITY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput\r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-passive-income\"\r\n                            content=\"More than 50% of the entity's gross income consisted of Active Income; and Less than 50% of the assets held by the entity was used to produce Passive Income - Please complete section G.2\"\r\n                            type=\"row-input\"\r\n                            val={PASSIVE_INCOME_MORE_THAN_50_G}\r\n                            checked={secG?.active_non_financial_entity_type === PASSIVE_INCOME_MORE_THAN_50_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n\r\n                        <CustomRadioInput \r\n                            name=\"active_non_financial_entity_type\"\r\n                            id=\"sec-g-active-trade\"\r\n                            content=\"Other - such as a company operating an active trade or business, that is not described above - Please complete section G.2\"\r\n                            val={OTHER_ENTITY_G}\r\n                            checked={secG?.active_non_financial_entity_type === OTHER_ENTITY_G}\r\n                            onChangeFn={onChangeFn}\r\n                        />\r\n                        {invFormStatus.errors?.active_non_financial_entity_type? <div className=\"input__desc\">\r\n                            {renderErrorTxt(invFormStatus.errors?.active_non_financial_entity_type)}\r\n                        </div>: null}\r\n                    </div>\r\n                </div>\r\n  )\r\n}\r\n\r\nexport default ActiveNonFinancialEntity","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\n// import CustomTextField from '../../../Layout/CustomTextField';\r\nimport GiinAndStatus from './subTaxStatus/GiinAndStatus';\r\nimport ActiveNonFinancialEntity from './subTaxStatus/ActiveNonFinancialEntity';\r\nimport { FINANCIAL_INSTITUTION_G, ACTIVE_NFE_G, PASSIVE_NFE_G } from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst TaxStatus = ({ onFormChange}) => {\r\n  \r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeInp = ({name, value}) => {\r\n        onFormChange({name, value});\r\n    }\r\n\r\n    const onChangeFn = ({name, value}) =>{ \r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n        if(name === \"fatca_and_crs_status\") {\r\n            onFormChange({name:\"is_located_in_non_participating_crs_jurisdiction\", value:\"\"}); //resetting YES/NO for options change\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">G.1 Tax Status</h4>\r\n            <ul>\r\n                <li>Collection of tax status is compulsory pursuant to the United States Foreign Account Tax Compliance Act (FATCA) and Common Reporting Standard (CRS).</li>\r\n            </ul>\r\n\r\n            <div className=\"section__container--box\">\r\n                <h6>G1 - Please tick the applicable FATCA and CRS status<span>*</span></h6>\r\n\r\n                <div className=\"u-padding-10y\">\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_and_crs_status\"\r\n                        id=\"sec-g-fin-institution\"\r\n                        content=\"A Financial Institution - A custodial or depository institution, an investment entity or a specified insurance company for FATCA / CRS purposes.\"\r\n                        val={FINANCIAL_INSTITUTION_G}\r\n                        type=\"row-input\"\r\n                        checked={secG?.fatca_and_crs_status === FINANCIAL_INSTITUTION_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_and_crs_status\"\r\n                        id=\"sec-g-nfe\"\r\n                        content=\"Active Non-financial Entity (NFE): Active NFEs include entities where, during the previous reporting period, less than 50% of their gross income was passive income (e.g. dividends, interests and royalties) and less than 50% of assets held produced passive income. For other types of Active NFEs, refer to Section VIII in the Annexure of the OECD 'Standard for Automatic Exchange of Financial Account Information' at www. oecd.org or the Australia - US intergovernmental agreement on FATCA.\"\r\n                        val={ACTIVE_NFE_G}\r\n                        type=\"row-input\"\r\n                        checked={secG?.fatca_and_crs_status === ACTIVE_NFE_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n\r\n                    <CustomRadioInput\r\n                        name=\"fatca_and_crs_status\"\r\n                        id=\"sec-g-passive-nfe\"\r\n                        content=\"Passive Non-financial Entities - An entity earning 50% or more of its revenue from investment activities (e.g. rent, dividend, interest) or 50% or more of the entity's assets are used to generate investment income.\"\r\n                        val={PASSIVE_NFE_G}\r\n                        type=\"row-input\"\r\n                        checked={secG?.fatca_and_crs_status === PASSIVE_NFE_G}\r\n                        onChangeFn={onChangeFn}\r\n                    />\r\n                    {invFormStatus.errors?.fatca_and_crs_status? <div className=\"input__desc\">\r\n                        {renderErrorTxt(invFormStatus.errors?.fatca_and_crs_status)}\r\n                    </div>: null}\r\n                </div>\r\n                \r\n                {/* Financial institution */}\r\n                {secG?.fatca_and_crs_status === FINANCIAL_INSTITUTION_G ? <GiinAndStatus secG={secG} onChangeInp={onChangeInp} onChangeFn={onChangeFn}/>: null}\r\n\r\n                {/* Active Non-financial Entity */}\r\n                {secG?.fatca_and_crs_status === ACTIVE_NFE_G? <ActiveNonFinancialEntity secG={secG} onChangeFn={onChangeFn} />: null}\r\n            </div>\r\n\r\n            {/* Notes */}\r\n            <div className=\"section__container--box u-margin-bottom-0\">\r\n                <h5>Notes</h5>\r\n                <ul className=\"u-margin-bottom-0\">\r\n                    <li>A list of CRS participating countries can be found on the ATO website at: <a href=\"https://www.ato.gov.au/General/International-tax-agreements/In-detail/International-arrangements/Automatic-exchange-of-information---CRS-and-FATCA/?#4_19_CRS_Participating_Jurisdictions\">https://www.ato.gov.au/General/International-tax-agreements/In-detail/International-arrangements/Automatic-exchange-of-information---CRS-and-FATCA/?#4_19_CRS_Participating_Jurisdictions</a></li>\r\n                    <li>For the purpose of the CRS, passive income includes, but is not limited to, the portion of gross income that consists of dividends; interest; income equivalent to interest; rents and royalties, other than rents and royalties derived in the active conduct of a business conducted; annuities; the excess of gains over losses from the sale or exchange of Financial Assets that gives rise to passive income described above.</li>\r\n                    <li>Please note that we may request further information regarding information provided to us</li>\r\n                </ul>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxStatus;","import React, {useEffect} from 'react';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction NoTinExplain({getValueCountryType, onChangeCountry, cntryIndex, cntrlnPerNum, countryType, formErrors}) {\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      onChangeCountry({name:\"explanation_for_tin_not_issued\", value:\"\", cntryIndex})\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"form-input form-input-full-width u-margin-bottom-0\">\r\n       <label htmlFor={`sec-g-reason2-exp${cntryIndex}-${countryType}-${cntrlnPerNum}`}>Please provide explanation <span>*</span></label>\r\n       <input className=\"form-input-common\" type=\"text\" placeholder=\"Please provide explanation\" id={`sec-g-reason2-exp${cntryIndex}-${countryType}-${cntrlnPerNum}`} required name=\"explanation_for_tin_not_issued\" value={getValueCountryType('explanation_for_tin_not_issued', cntryIndex)} onChange={(e)=>onChangeCountry({name:e.target.name, value:e.target.value, cntryIndex})}/>\r\n       {formErrors?.explanation_for_tin_not_issued?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.explanation_for_tin_not_issued)}\r\n        </div>: null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoTinExplain","import React, {useEffect} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport NoTinExplain from './NoTinExplain';\r\nimport { COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS, INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN, COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED } from '../../../../../constants'\r\n\r\n\r\nfunction NoTinReason({uniqId, getValueCountryType, noTinReasonDropDwn, onChangeCountry, cntryIndex, cntrlnPerNum, countryType, errrMsg}) {\r\n    const A = \"Reason A: Country of residence does not issue TINs to tax residents\"\r\n    const B = \"Reason B: Individual has not been issued with a TIN\"\r\n    const C = \"Reason C: Country of residence does not require the TIN to be disclosed\"\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            noTinReasonDropDwn({name:\"reason_for_no_tin\", value:\"\", cntryIndex})\r\n        }\r\n    },[])\r\n//01 11 00 10 00 10\r\n//index + perNo\r\n//00 10 01 11 02 12\r\n  return (\r\n  <>\r\n  <div className=\"u-margin-bottom select-dropdown-width\">\r\n        <label htmlFor={`reason${cntryIndex}${cntrlnPerNum}`}>If no TIN, list reason <span>*</span></label>\r\n        <Form.Control\r\n            as=\"select\"\r\n            // id=\"reason1${cntryIndex}-${countryType}\" \r\n            id={`reason${cntryIndex}${cntrlnPerNum}`}\r\n            name=\"reason_for_no_tin\"\r\n            value={getValueCountryType('reason_for_no_tin', cntryIndex)}\r\n            onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex})}\r\n            // onChange={reasonCountry1}\r\n        >\r\n            <option></option>\r\n            <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n            <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n            <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n        </Form.Control>\r\n        {errrMsg?.reason_for_no_tin?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(errrMsg?.reason_for_no_tin)}\r\n        </div>: null}\r\n    </div>\r\n    {getValueCountryType('reason_for_no_tin', cntryIndex) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={cntryIndex} cntrlnPerNum={cntrlnPerNum} countryType={countryType} formErrors={errrMsg}/> : null}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NoTinReason","import React, { useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport {INVESTOR_ENTITY_TYPE_G } from '../../../../../constants'\r\nimport {clearGResidenceDetails} from '../../../../../actions/Investor-Application-Form/secGActions';\r\nimport NoTinReason from './NoTinReason';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction TaxResidentCountries({onFormChange}) {\r\n    const dispatch = useDispatch()\r\n   \r\n    const cntrlnPerNum = 0;\r\n\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const zeroIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[0] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[0] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[0] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[0] : [],\r\n    }\r\n\r\n    const firstIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[1] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[1] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[1] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[1] : [],\r\n    }\r\n    \r\n    const onChangeCountry = ({name, value, cntryIndex}) =>{\r\n        onFormChange({name, value, level:\"country_details\", countryType:INVESTOR_ENTITY_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const noTinReasonDropDwn = ({name, value, cntryIndex}) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"country_details\", countryType:INVESTOR_ENTITY_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const getValueCountryType = (keyName, cntryIndex) =>{\r\n        const allAddressDetArr = secG?.tax_residence_country_details?.filter((each)=> each?.type === INVESTOR_ENTITY_TYPE_G) || [];\r\n        const address = allAddressDetArr.find((each, index)=> each?.type === INVESTOR_ENTITY_TYPE_G && index === cntryIndex) || {};\r\n        const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" \r\n        return val\r\n    }\r\n\r\n    const removeCurrentDetails = () => {\r\n        dispatch(clearGResidenceDetails({residenceType:INVESTOR_ENTITY_TYPE_G, cntrlnPerNum}))\r\n    }\r\n\r\n    const countryValue = (type) => {\r\n        const findCountry = getValueCountryType(\"country\", type);\r\n        \r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n              return  country.label?.toLowerCase() === findCountry.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{ \r\n            removeCurrentDetails();\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"section__container--box\">\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-10y\">Country #1</h5>\r\n                <div className=\"sub__form\">\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country <span>*</span></label>\r\n                        <Select\r\n                            className={zeroIndErrMsgs?.country?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(0)}\r\n                            onChange={(value) =>  onChangeCountry({ name:'country', value: value.label, cntryIndex: 0 })}\r\n                        />\r\n\r\n                        {zeroIndErrMsgs?.country?.length?\r\n                        <div className=\"input__desc u-margin-bottom\">\r\n                            {renderErrorTxt(zeroIndErrMsgs?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                    <CustomTextField \r\n                        placeholder=\"Tax Identification Number (TIN)\"\r\n                        id=\"sec-g-tax-id\"\r\n                        label=\"Tax Identification Number (TIN)\"\r\n                        asterisk=\"\"\r\n                        name=\"tin\"\r\n                        value={getValueCountryType('tin', 0)}\r\n                        onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:0})}\r\n                        formErrors={zeroIndErrMsgs}\r\n                    />\r\n                </div>\r\n                {/* <div className=\"u-margin-bottom\">\r\n                    <label htmlFor=\"reason1\">If no TIN, list reason <span>*</span></label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        id=\"reason1\" \r\n                        name=\"reason_for_no_tin\"\r\n                        value={getValueCountryType('reason_for_no_tin', 0)}\r\n                        onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:0})}\r\n                        // onChange={reasonCountry1}\r\n                    >\r\n                        <option></option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                        <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                    </Form.Control>\r\n                    {zeroIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                        {renderErrorTxt(zeroIndErrMsgs?.reason_for_no_tin)}\r\n                    </div>: null}\r\n                </div>\r\n                {getValueCountryType('reason_for_no_tin', 0) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={0} countryType={INVESTOR_ENTITY_TYPE_G} formErrors={zeroIndErrMsgs}/> : null} */}\r\n               {getValueCountryType('tin', 0)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={0} cntrlnPerNum={cntrlnPerNum} countryType={INVESTOR_ENTITY_TYPE_G} errrMsg={zeroIndErrMsgs}/>}\r\n               </div>\r\n\r\n            <div className=\"u-padding-10y\">\r\n                <h5 className=\"u-padding-10y\">Country #2</h5>\r\n                <div className=\"sub__form\">\r\n\r\n                    <div className=\"country__dropdown\">\r\n                        <label>Country <span>*</span></label>\r\n                        <Select\r\n                            className={firstIndErrMsgs?.country?.length && 'incorrect'}\r\n                            id=\"select-dropdown-country\"\r\n                            name=\"country\"\r\n                            autoFocus={false}\r\n                            options={options}\r\n                            placeholder=\"Select a Country\"\r\n                            value={countryValue(1)}\r\n                            onChange={(value) => onChangeCountry({ name:'country', value: value.label, cntryIndex: 1 })}\r\n                        />\r\n\r\n                        {firstIndErrMsgs?.country?.length?\r\n                        <div className=\"input__desc u-margin-bottom\">\r\n                            {renderErrorTxt(firstIndErrMsgs?.country)}\r\n                        </div>: null}\r\n                    </div>\r\n\r\n                    <CustomTextField\r\n                        placeholder=\"Tax Identification Number (TIN)\"\r\n                        id=\"sec-g-tax-id2\"\r\n                        label=\"Tax Identification Number (TIN)\"\r\n                        asterisk=\"\"\r\n                        name=\"tin\"\r\n                        value={getValueCountryType('tin', 1)}\r\n                        onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:1})}\r\n                        formErrors={firstIndErrMsgs}\r\n                    />\r\n                </div> \r\n                {/* <div className=\"u-margin-bottom\">\r\n                    <label htmlFor=\"reason2\">If no TIN, list reason <span>*</span></label>\r\n                    <Form.Control\r\n                    as=\"select\"\r\n                    id=\"reason2\"\r\n                    name=\"reason_for_no_tin\"\r\n                    value={getValueCountryType('reason_for_no_tin', 1)}\r\n                    onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:1})}\r\n                >\r\n                        <option></option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                        <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                        <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                    </Form.Control>\r\n                    {firstIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                        {renderErrorTxt(firstIndErrMsgs?.reason_for_no_tin)}\r\n                    </div>: null}\r\n                </div>\r\n                {getValueCountryType('reason_for_no_tin', 1) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={1} countryType={INVESTOR_ENTITY_TYPE_G} formErrors={firstIndErrMsgs}/> : null} */}\r\n               {getValueCountryType('tin', 1)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={1} cntrlnPerNum={cntrlnPerNum} countryType={INVESTOR_ENTITY_TYPE_G} errrMsg={firstIndErrMsgs}/>}\r\n            \r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default TaxResidentCountries","import { useEffect } from 'react';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs';\r\n\r\nfunction TfnDetails({onChangeInp, secG, formErrors}) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeInp({name:'tfn_aus', value:''})\r\n            onChangeInp({name:'tfn_exemption_aus', value:''})\r\n        }\r\n    },[])\r\n\r\n    const onChangeTFN = ({name, value}) => {\r\n        const trimmedVal = replaceAllWhiteSpaces(value)\r\n        onChangeInp({name, value:trimmedVal}) \r\n    }\r\n\r\n  return (\r\n    <div className=\"sub__form\">\r\n            <CustomTextField\r\n                placeholder=\"Tax File Number (TFN)\"\r\n                id=\"sec-g-tfn\"\r\n                label=\"Tax File Number (TFN)\"\r\n                asterisk=\"\"\r\n                name=\"tfn_aus\"\r\n                value={secG?.tfn_aus || \"\"}\r\n                onChangeFn={onChangeTFN}\r\n                formErrors={formErrors}\r\n            />\r\n            <CustomTextField\r\n                placeholder=\"TFN Exemption (if applicable)\"\r\n                id=\"sec-g-tfn-exp\"\r\n                label=\"TFN Exemption (if applicable)\"\r\n                asterisk=\"\"\r\n                name=\"tfn_exemption_aus\"\r\n                value={secG?.tfn_exemption_aus || \"\"}\r\n                onChangeFn={onChangeInp}\r\n                formErrors={formErrors}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TfnDetails","import React, {useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import Form from 'react-bootstrap/Form';\r\nimport { NO_G, YES_G } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\n// import CustomTextField from '../../../Layout/CustomTextField';\r\nimport TaxResidentCountries from './TaxResidentCountries';\r\nimport TfnDetails from './TfnDetails'\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst TaxResidency = ({ onFormChange }) => {\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const onChangeInp = ({name, value}) => {\r\n        onFormChange({name, value});\r\n    }\r\n\r\n    const onChangeFn = ({ name, value }) =>{\r\n        const convrtToNum = parseInt(value);\r\n        onFormChange({name, value: convrtToNum });\r\n\r\n        if(name === 'is_investor_entity_tax_resident_of_aus' && convrtToNum === NO_G){\r\n            onFormChange({\r\n                name: 'is_investor_entity_tax_resident_outside_aus',\r\n                value: YES_G\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:'is_investor_entity_tax_resident_of_aus', value:''})\r\n            onChangeFn({name:'is_investor_entity_tax_resident_outside_aus', value:''})\r\n        }\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"section__container\">\r\n        <h4 className=\"section__container--subtitle\">G.2 Tax Residency of Investor Entity</h4>\r\n        <div className=\"section__container--box\">\r\n            <div className=\"u-padding-10y\">\r\n                <h6>1.  Is the investor entity a tax resident of Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_of_aus\"\r\n                    id=\"sec-g-tax-res-yes\"\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    checked={secG?.is_investor_entity_tax_resident_of_aus === YES_G}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_of_aus\"\r\n                    id=\"sec-g-tax-res-no\"\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    checked={secG?.is_investor_entity_tax_resident_of_aus === NO_G}\r\n                    onChangeFn={onChangeFn}\r\n                />\r\n                {invFormStatus.errors?.is_investor_entity_tax_resident_of_aus? <div className=\"input__desc\">\r\n                    {renderErrorTxt(invFormStatus.errors?.is_investor_entity_tax_resident_of_aus)}\r\n                </div>: null}\r\n            </div>\r\n\r\n        {/* G2 - if tax resident */}\r\n        {secG?.is_investor_entity_tax_resident_of_aus === YES_G ?\r\n        <TfnDetails onChangeInp={onChangeInp} secG={secG} formErrors={invFormStatus.errors}/>: null}\r\n\r\n\r\n            <div className=\"u-padding-10y\">\r\n                <h6>2. Is the investor entity a tax resident of a country other than Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_outside_aus\"\r\n                    id=\"sec-g-intl-tax-res-yes\"\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    onChangeFn={onChangeFn}\r\n                    checked={secG?.is_investor_entity_tax_resident_outside_aus === YES_G}\r\n                />\r\n                <CustomRadioInput\r\n                    name=\"is_investor_entity_tax_resident_outside_aus\"\r\n                    id=\"sec-g-intl-tax-res-no\"\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    onChangeFn={onChangeFn}\r\n                    checked={secG?.is_investor_entity_tax_resident_outside_aus === NO_G}\r\n                />\r\n                {invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus? <div className=\"input__desc\">\r\n                    {renderErrorTxt(invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus)}\r\n                </div>: null}\r\n                <div className=\"note__box u-padding-10y\">\r\n                    <p className=\"note__box--p\">If the investor entity is a tax resident of another country, please provide tax residency information Tax Identification Number (TIN) or equivalent.</p>\r\n                </div>\r\n            </div>\r\n\r\n            {secG?.is_investor_entity_tax_resident_outside_aus === YES_G? <TaxResidentCountries onFormChange={onFormChange} />: null}\r\n        </div>\r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxResidency;","import React, {useEffect} from 'react';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport {useSelector} from 'react-redux';\r\n\r\nfunction IdentifyPepName({ onFormChange }) {\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    const zeroIndErrMsgs = {\r\n        name :  invFormStatus.errors?.name? invFormStatus.errors?.name[0] : [],\r\n        position :  invFormStatus.errors?.position? invFormStatus.errors?.position[0] : [],\r\n    }\r\n\r\n    const firstIndErrMsgs = {\r\n        name :  invFormStatus.errors?.name? invFormStatus.errors?.name[1] : [],\r\n        position :  invFormStatus.errors?.position? invFormStatus.errors?.position[1] : [],\r\n    }\r\n\r\n    const getPepDet = (pepDetIndex, keyName) =>{\r\n        const address = secG?.controlling_person_pep_details.find((each, index)=> pepDetIndex===index) || {};\r\n        const val = address[keyName] || \"\" \r\n        return val\r\n    }\r\n\r\n    const onChangePepDet = ({name, value, pepDetIndex}) =>{\r\n        onFormChange({name, value, level:\"controlling_person_pep_details\", pepDetIndex:pepDetIndex}) \r\n    }\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            onFormChange({name:\"controlling_person_pep_details\", value:[] })\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h6 className=\"u-padding-10y\">Please identify the PEP</h6>\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name\"\r\n                    id=\"sec-g-pep-name-1\"\r\n                    label=\"Name\"\r\n                    asterisk=\"\"\r\n                    name=\"name\"\r\n                    value={getPepDet(0, 'name')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:0})}\r\n                    formErrors={zeroIndErrMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Position\"\r\n                    id=\"sec-g-pep-position-1\"\r\n                    label=\"Position\"\r\n                    asterisk=\"\"\r\n                    name=\"position\"\r\n                    value={getPepDet(0, 'position')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:0})}\r\n                    formErrors={zeroIndErrMsgs}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"sub__form\">\r\n                <CustomTextField\r\n                    placeholder=\"Name\"\r\n                    id=\"sec-g-pep-name-2\"\r\n                    label=\"Name\"\r\n                    asterisk=\"\"\r\n                    name=\"name\"\r\n                    value={getPepDet(1, 'name')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:1})}\r\n                    formErrors={firstIndErrMsgs}\r\n                />\r\n                <CustomTextField\r\n                    placeholder=\"Position\"\r\n                    id=\"sec-g-pep-position-2\"\r\n                    label=\"Position\"\r\n                    asterisk=\"\"\r\n                    name=\"position\"\r\n                    value={getPepDet(1, 'position')}\r\n                    onChangeFn={({name, value})=>onChangePepDet({name, value, pepDetIndex:1})}\r\n                    formErrors={firstIndErrMsgs}\r\n                />\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default IdentifyPepName","import React, {useEffect} from 'react'\r\nimport CustomTextField from '../../../Layout/CustomTextField'\r\nimport { replaceAllWhiteSpaces } from '../../../../../utils/regexFuncs'\r\n\r\nfunction TfnNumCntrlPerson({ value, onChangeIn, cntrlngPerIndex, formErrors }) {\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n          onChangeIn({name:\"tfn\", value:\"\"})\r\n            // secG?.controlling_person_details[0]?.tfn && onChangeIn({name:\"tfn\", value:\"\"})\r\n        }\r\n    },[])\r\n\r\n    const onChangeTFN = ({name, value}) => {\r\n      const trimmedVal = replaceAllWhiteSpaces(value)\r\n      onChangeIn({name, value:trimmedVal}) \r\n    }\r\n\r\n  return (\r\n    <div className=\"u-padding-10y\">\r\n        <CustomTextField\r\n            placeholder=\"Tax File Number (TFN)\"\r\n            id={`sec-g-cp-1-tfn-${cntrlngPerIndex}`}\r\n            label=\"Tax File Number (TFN)\"\r\n            type=\"u-margin-bottom-0\"\r\n            asterisk=\"\"\r\n            name=\"tfn\"\r\n            value={value || \"\"}\r\n            onChangeFn={onChangeTFN}\r\n            formErrors={formErrors}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TfnNumCntrlPerson","import React, {useEffect} from 'react';\r\nimport CustomCheckbox from '../../../Layout/CustomCheckbox';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport {TAX_RESIDENCE_CHKBX_OTHER_G} from '../../../../../constants'\r\n\r\nfunction CntrlPerTaxResidentCountries({ onChangeChkBoxIn, getIsItemChkd, cntrlngPerIndex, formErrors, onFormChange }) {\r\n    const chkBxNname = \"tax_residence_countries\"\r\n\r\n    const onChangeChkBx = ({name, value})=> {\r\n        onChangeChkBoxIn({name, value, subLevelKey:chkBxNname})\r\n    }\r\n\r\n    const checkedStatus = (val) => {\r\n        return getIsItemChkd(val, chkBxNname)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            onFormChange({name:chkBxNname, value:[], level:\"controlling_person_details\", cntrlngPerIndex});\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"u-padding-y\">\r\n        <h6>Please indicate if you are a tax residence in one of the following countries:</h6>\r\n        <div className=\"flex-container u-margin-bottom\">\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={0}\r\n                id={`sec-g-res-antigua-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Antigua and Barbuda\"\r\n                checked={checkedStatus(0)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={1}\r\n                id={`sec-g-res-bahamas-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Bahamas\"\r\n                checked={checkedStatus(1)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={2}\r\n                id={`sec-g-res-bahrain-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Bahrain\"\r\n                checked={checkedStatus(2)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={3}\r\n                id={`sec-g-res-barbados-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Barbados\"\r\n                checked={checkedStatus(3)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={4}\r\n                id={`sec-g-res-cyprus-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Cyprus\"\r\n                checked={checkedStatus(4)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={5}\r\n                id={`sec-g-res-dominica-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Dominica\"\r\n                checked={checkedStatus(5)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={6}\r\n                id={`sec-g-res-malaysia-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Malaysia\"\r\n                checked={checkedStatus(6)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={7}\r\n                id={`sec-g-res-grenada-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Grenada\"\r\n                checked={checkedStatus(7)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={8}\r\n                id={`sec-g-res-malta-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Malta\"\r\n                checked={checkedStatus(8)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={9}\r\n                id={`sec-g-res-panama-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Panama\"\r\n                checked={checkedStatus(9)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={10}\r\n                id={`sec-g-res-qatar-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Qatar\"\r\n                checked={checkedStatus(10)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={11}\r\n                id={`sec-g-res-saint-kitts-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Saint Kitts and Nevis\"\r\n                checked={checkedStatus(11)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={12}\r\n                id={`sec-g-res-saint-lucia-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Saint Lucia\"\r\n                checked={checkedStatus(12)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n            \r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={13}\r\n                id={`sec-g-res-seychelles-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Seychelles\"\r\n                checked={checkedStatus(13)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={14}\r\n                id={`sec-g-res-turks-caicos-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Turks and Caicos Islands\"\r\n                checked={checkedStatus(14)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={15}\r\n                id={`sec-g-res-uae-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"United Arab Emirates\"\r\n                checked={checkedStatus(15)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n\r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={16}\r\n                id={`sec-g-res-vanuatu-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"Vanuatu\"\r\n                checked={checkedStatus(16)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n            \r\n            <CustomCheckbox\r\n                name={chkBxNname}\r\n                val={TAX_RESIDENCE_CHKBX_OTHER_G}\r\n                id={`sec-g-res-none-${cntrlngPerIndex}`}\r\n                styleType=\"dark\"\r\n                content=\"None of the above\"\r\n                checked={checkedStatus(TAX_RESIDENCE_CHKBX_OTHER_G)}\r\n                onChangeFn={onChangeChkBx}\r\n            />\r\n        </div>\r\n        {/* formErrors[chkBxNname] */}\r\n        {formErrors?.tax_residence_countries?.length? <div className=\"input__desc\">\r\n            {renderErrorTxt(formErrors?.tax_residence_countries)}\r\n        </div>: null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CntrlPerTaxResidentCountries","import React, {useEffect} from 'react';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport {YES_G, NO_G} from '../../../../../constants';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction CntrlPerExtraDetails({getValueCntrlPersonDetails, onChageRadioFn, cntrlngPerIndex, formErrors}) {\r\n\r\n    const onChangeCbiRbi = ({name, value}) => {\r\n        onChageRadioFn({name:\"residence_rights_cbi_rbi\", value})\r\n    }\r\n\r\n    const onChangeRights = ({name, value}) => {\r\n        onChageRadioFn({name:\"residence_rights_other_juris\", value})\r\n    }\r\n\r\n    const onChangeMoreDays = ({name, value}) => {\r\n        onChageRadioFn({name:\"more_days_other_juris\", value}) //income_tax_other_juris\r\n    }\r\n\r\n    const onChangeIncmtxJur = ({name, value}) => {\r\n        onChageRadioFn({name:\"income_tax_other_juris\", value}) //\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            onChangeCbiRbi({name:\"residence_rights_cbi_rbi\", value:\"\"})\r\n            onChangeRights({name:\"residence_rights_other_juris\", value:\"\"})\r\n            onChangeMoreDays({name:\"more_days_other_juris\", value:\"\"})\r\n            onChangeIncmtxJur({name:\"income_tax_other_juris\", value:\"\"})\r\n        }\r\n    },[])\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Did you obtain residence rights under a Citizenship by Investment (CBI) or Residence by Investment (RBI) scheme?<span>*</span></h6>\r\n            <CustomRadioInput \r\n                name={`sec-g-cbi-or-rbi-${cntrlngPerIndex}`}\r\n                id={`sec-g-cbi-or-rbi-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_cbi_rbi\") === YES_G}\r\n                onChangeFn={onChangeCbiRbi}\r\n            />\r\n            <CustomRadioInput \r\n                name={`sec-g-cbi-or-rbi-${cntrlngPerIndex}`}\r\n                id={`sec-g-cbi-or-rbi-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_cbi_rbi\") === NO_G}\r\n                onChangeFn={onChangeCbiRbi}\r\n            />\r\n            {formErrors?.residence_rights_cbi_rbi?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.residence_rights_cbi_rbi)}\r\n            </div>: null}\r\n        </div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Do you hold residence rights in any other jurisdiction(s)?<span>*</span></h6>\r\n            <CustomRadioInput\r\n                name={`sec-g-res-rights-${cntrlngPerIndex}`}\r\n                id={`sec-g-res-rights-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_other_juris\") === YES_G}\r\n                onChangeFn={onChangeRights}\r\n            />\r\n            <CustomRadioInput\r\n                name={`sec-g-res-rights-${cntrlngPerIndex}`}\r\n                id={`sec-g-res-rights-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"residence_rights_other_juris\") === NO_G}\r\n                onChangeFn={onChangeRights}\r\n            />\r\n            {formErrors?.residence_rights_other_juris?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.residence_rights_other_juris)}\r\n            </div>: null}\r\n        </div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Have you spent more than 90 days in any other jurisdiction(s) during the previous year?<span>*</span></h6>\r\n            <CustomRadioInput\r\n                name={`sec-g-90-days-${cntrlngPerIndex}`}\r\n                id={`sec-g-90-days-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"more_days_other_juris\") === YES_G}\r\n                onChangeFn={onChangeMoreDays}\r\n            />\r\n            <CustomRadioInput\r\n                name={`sec-g-90-days-${cntrlngPerIndex}`}\r\n                id={`sec-g-90-days-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"more_days_other_juris\") === NO_G}\r\n                onChangeFn={onChangeMoreDays}\r\n            />\r\n            {formErrors?.more_days_other_juris?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.more_days_other_juris)}\r\n            </div>: null}\r\n        </div>\r\n        <div className=\"u-padding-10y\">\r\n            <h6>Have you filed income tax returns in any other jurisdiction(s) during the previous year?<span>*</span></h6>\r\n            <CustomRadioInput\r\n                name={`sec-g-returns-${cntrlngPerIndex}`}\r\n                id={`sec-g-returns-yes-${cntrlngPerIndex}`}\r\n                content=\"Yes\"\r\n                val={YES_G}\r\n                checked={getValueCntrlPersonDetails(\"income_tax_other_juris\") === YES_G}\r\n                onChangeFn={onChangeIncmtxJur}\r\n            />\r\n            <CustomRadioInput\r\n                name={`sec-g-returns-${cntrlngPerIndex}`}\r\n                id={`sec-g-returns-no-${cntrlngPerIndex}`}\r\n                content=\"No\"\r\n                val={NO_G}\r\n                checked={getValueCntrlPersonDetails(\"income_tax_other_juris\") === NO_G}\r\n                onChangeFn={onChangeIncmtxJur}\r\n            />\r\n            {formErrors?.income_tax_other_juris?.length? <div className=\"input__desc\">\r\n                {renderErrorTxt(formErrors?.income_tax_other_juris)}\r\n            </div>: null}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CntrlPerExtraDetails","import React, {useEffect, useMemo} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomTextField from '../../../../Layout/CustomTextField';\r\nimport { CONTROLLING_PERSON_TYPE_G } from '../../../../../../constants';\r\nimport {clearGResidenceDetails} from '../../../../../../actions/Investor-Application-Form/secGActions';\r\nimport NoTinReason from '../NoTinReason';\r\nimport countryList from 'react-select-country-list';\r\nimport { renderErrorTxt } from '../../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nfunction ResidenceDetailsOther({cntrlngPerIndex, cntrlnPerNum, firstCountryIndex, secondCountryIndex, getValueCountryType, onChangeCountry, noTinReasonDropDwn, scndNFourIndErrMsgs, thirNFivIndErrMsgs}) {\r\n    const dispatch = useDispatch();\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const countryValue = (findCountry) => {\r\n        // const findCountry = getValueCntrlPersonDetails(\"country\");\r\n        const value = options.find((country) => {\r\n            if(findCountry){\r\n            return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n            }\r\n            return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const removeCurrentDetails = () => {\r\n        dispatch(clearGResidenceDetails({residenceType:CONTROLLING_PERSON_TYPE_G, cntrlnPerNum}))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            removeCurrentDetails();\r\n        }\r\n    },[])\r\n  \r\n    return (\r\n    <React.Fragment>\r\n        {/* Country 1 */}\r\n        <div className=\"u-margin-bottom-xl\">\r\n            <h5 className=\"u-padding-10y\">Country 1</h5>\r\n\r\n            <div className=\"sub__form\">\r\n                {/* <CustomTextField\r\n                    placeholder=\"Country of Tax Residence\"\r\n                    id={`sec-g-con-1-tax-res-${cntrlngPerIndex}`}\r\n                    label=\"Country of Tax Residence\"\r\n                    asterisk=\"*\"\r\n                    name=\"country\"\r\n                    value={getValueCountryType('country', firstCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:firstCountryIndex})}\r\n                    formErrors={scndNFourIndErrMsgs}\r\n                /> */}\r\n                <div className=\"country__dropdown\">\r\n                    <label>Country of Tax Residence <span>*</span></label>\r\n                    <Select\r\n                        // className={`select-dropdown-country ${scndNFourIndErrMsgs?.country?.length? 'incorrect':''}`}\r\n                        className={scndNFourIndErrMsgs?.country?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"country\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue(getValueCountryType('country', firstCountryIndex))}\r\n                        onChange={(value)=>onChangeCountry({name:'country', value:value.label, cntryIndex:firstCountryIndex})}\r\n                    />\r\n\r\n                    {scndNFourIndErrMsgs?.country?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(scndNFourIndErrMsgs?.country)}\r\n                    </div>: null}\r\n                </div>\r\n                <CustomTextField\r\n                    placeholder=\"Tax Identification Number (TIN)\"\r\n                    id={`sec-g-con-1-tax-id-${cntrlngPerIndex}`}\r\n                    label=\"Tax Identification Number (TIN)\"\r\n                    asterisk=\"\"\r\n                    name=\"tin\"\r\n                    value={getValueCountryType('tin', firstCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:firstCountryIndex})}\r\n                    formErrors={scndNFourIndErrMsgs}\r\n                />\r\n            </div>\r\n\r\n            {/* <div className=\"u-margin-bottom\">\r\n                <label htmlFor=\"sec-g-con-1-reason\">If no TIN, list reason <span>*</span></label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    id={`sec-g-con-1-reason-${cntrlngPerIndex}`}\r\n                    name=\"reason_for_no_tin\"\r\n                    value={getValueCountryType('reason_for_no_tin', firstCountryIndex)}\r\n                    onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:firstCountryIndex})}\r\n                    // onChange={oneReason}\r\n                >\r\n                    <option></option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                    <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                </Form.Control>\r\n                {scndNFourIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                    {renderErrorTxt(scndNFourIndErrMsgs?.reason_for_no_tin)}\r\n                </div>: null}\r\n            </div>\r\n            {getValueCountryType('reason_for_no_tin', firstCountryIndex) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={firstCountryIndex} countryType={CONTROLLING_PERSON_TYPE_G} formErrors={scndNFourIndErrMsgs}/> : null}  */}\r\n\r\n            {getValueCountryType('tin', firstCountryIndex)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={firstCountryIndex} cntrlnPerNum={cntrlnPerNum} countryType={CONTROLLING_PERSON_TYPE_G} errrMsg={scndNFourIndErrMsgs} cntrlngPerIndex={cntrlngPerIndex}/>}\r\n            \r\n        </div>\r\n\r\n        {/* Country 2 */}\r\n        <div className=\"u-margin-bottom-xl\">\r\n            <h5 className=\"u-padding-10y\">Country 2</h5>\r\n\r\n            <div className=\"sub__form\">\r\n                {/* <CustomTextField\r\n                    placeholder=\"Country of Tax Residence\"\r\n                    id={`sec-g-con-2-tax-res-${cntrlngPerIndex}`}\r\n                    label=\"Country of Tax Residence\"\r\n                    asterisk=\"\"\r\n                    name=\"country\"\r\n                    value={getValueCountryType('country', secondCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:secondCountryIndex})}\r\n                    formErrors={thirNFivIndErrMsgs}\r\n                /> */}\r\n\r\n            <div className=\"country__dropdown\">\r\n                <label>Country of Tax Residence <span>*</span></label>\r\n                <Select\r\n                    // className={`select-dropdown-country ${thirNFivIndErrMsgs?.country?.length? 'incorrect':''}`}\r\n                    className={thirNFivIndErrMsgs?.country?.length && 'incorrect'}\r\n                    id=\"select-dropdown-country\"\r\n                    name=\"country\"\r\n                    autoFocus={false}\r\n                    options={options}\r\n                    placeholder=\"Select a Country\"\r\n                    value={countryValue(getValueCountryType('country', secondCountryIndex))}\r\n                    onChange={(value)=>onChangeCountry({name:'country', value:value.label, cntryIndex:secondCountryIndex})}\r\n                />\r\n\r\n                {thirNFivIndErrMsgs?.country?.length?\r\n                <div className=\"input__desc\">\r\n                    {renderErrorTxt(thirNFivIndErrMsgs?.country)}\r\n                </div>: null}\r\n            </div>\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Tax Identification Number (TIN)\"\r\n                    id={`sec-g-con-2-tax-id-${cntrlngPerIndex}`}\r\n                    label=\"Tax Identification Number (TIN)\"\r\n                    asterisk=\"\"\r\n                    name=\"tin\"\r\n                    value={getValueCountryType('tin', secondCountryIndex)}\r\n                    onChangeFn={({name, value})=>onChangeCountry({name, value, cntryIndex:secondCountryIndex})}\r\n                    formErrors={thirNFivIndErrMsgs}\r\n                />\r\n            </div>\r\n            {/* <div className=\"u-margin-bottom\">\r\n                <label htmlFor=\"sec-g-con-2-reason\">If no TIN, list reason <span>*</span></label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    id={`sec-g-con-2-reason-${cntrlngPerIndex}`}\r\n                    name=\"reason_for_no_tin\"\r\n                    value={getValueCountryType('reason_for_no_tin', secondCountryIndex)}\r\n                    onChange={(e)=>noTinReasonDropDwn({name:e.target.name, value:e.target.value, cntryIndex:secondCountryIndex})}\r\n                    // onChange={oneReason}\r\n                >\r\n                    <option></option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS}>{A}</option>\r\n                    <option value={INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN}>{B}</option>\r\n                    <option value={COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED}>{C}</option>\r\n                </Form.Control>\r\n                {thirNFivIndErrMsgs?.reason_for_no_tin? <div className=\"input__desc\">\r\n                    {renderErrorTxt(thirNFivIndErrMsgs?.reason_for_no_tin)}\r\n                </div>: null}\r\n            </div>\r\n            {getValueCountryType('reason_for_no_tin', secondCountryIndex) === INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN? <NoTinExplain getValueCountryType={getValueCountryType} onChangeCountry={onChangeCountry} cntryIndex={secondCountryIndex} countryType={CONTROLLING_PERSON_TYPE_G} formErrors={thirNFivIndErrMsgs}/> : null} */}\r\n            \r\n            {getValueCountryType('tin', secondCountryIndex)? null : <NoTinReason getValueCountryType={getValueCountryType} noTinReasonDropDwn={noTinReasonDropDwn} onChangeCountry={onChangeCountry} cntryIndex={secondCountryIndex} cntrlnPerNum={cntrlnPerNum} countryType={CONTROLLING_PERSON_TYPE_G} errrMsg={thirNFivIndErrMsgs} cntrlngPerIndex={cntrlngPerIndex}/>}\r\n\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ResidenceDetailsOther","import React, { useEffect, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport CustomCheckbox from '../../../Layout/CustomCheckbox';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport CustomTextField from '../../../Layout/CustomTextField';\r\nimport { NO_G, YES_G, TRUSTEE_G, TRUST_SETTLOR_G, BENEFICIARY_G, BENEFICIAL_OWNER_G, PROTECTOR_G, CONTROLLING_PERSON_TYPE_G, TAX_RESIDENCE_CHKBX_OTHER_G } from '../../../../../constants';\r\nimport TfnNumCntrlPerson from './TfnNumCntrlPerson';\r\nimport NoTinExplain from './NoTinExplain';\r\nimport CntrlPerTaxResidentCountries from './CntrlPerTaxResidentCountries';\r\nimport CntrlPerExtraDetails from './CntrlPerExtraDetails';\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\nimport ResidenceDetailsOther from './subCntrlnPersonDetails/ResidenceDetailsOther';\r\nimport countryList from 'react-select-country-list';\r\nimport moment from 'moment/moment';\r\n\r\nfunction ControllingPersonDetails({onFormChange, cntrlngPerIndex=0}) {\r\n\r\n    const options = useMemo(() => countryList().getData(), []);\r\n\r\n    const cntrlnPerNum = cntrlngPerIndex + 1 //this is 0 in tax-residency-cntry-details for investor(sec-g)\r\n    // const firstCountryIndex = cntrlngPerIndex + cntrlngPerIndex; //for storing 4 types of values in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    // const secondCountryIndex = cntrlngPerIndex + cntrlngPerIndex + 1\r\n    const firstCountryIndex = 0;\r\n    const secondCountryIndex = 1;\r\n    const errScndNFourInd = cntrlngPerIndex + cntrlngPerIndex; //for storing 4 types of errors in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    const errThirNFivInd = cntrlngPerIndex + cntrlngPerIndex + 1\r\n    const dateBefore18Years = moment().subtract(18, 'years').format();\r\n\r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            onFormChange({name:'controlling_person_details', value:[]})\r\n        }\r\n    },[])\r\n\r\n    const cntrlnPerErrMsgs = {\r\n        type : invFormStatus.errors?.type? invFormStatus.errors?.type[cntrlngPerIndex] : [],\r\n        title : invFormStatus.errors?.title? invFormStatus.errors?.title[cntrlngPerIndex] : [],\r\n        surname : invFormStatus.errors?.surname? invFormStatus.errors?.surname[cntrlngPerIndex] : [],\r\n        given_name : invFormStatus.errors?.given_name? invFormStatus.errors?.given_name[cntrlngPerIndex] : [],\r\n        dob : invFormStatus.errors?.dob? invFormStatus.errors?.dob[cntrlngPerIndex] : [],\r\n        unit_no : invFormStatus.errors?.unit_no? invFormStatus.errors?.unit_no[cntrlngPerIndex] : [],\r\n        street_no : invFormStatus.errors?.street_no? invFormStatus.errors?.street_no[cntrlngPerIndex] : [],\r\n        street_name : invFormStatus.errors?.street_name? invFormStatus.errors?.street_name[cntrlngPerIndex] : [],\r\n        postcode : invFormStatus.errors?.postcode? invFormStatus.errors?.postcode[cntrlngPerIndex] : [],\r\n        country_ctrl : invFormStatus.errors?.country_ctrl? invFormStatus.errors?.country_ctrl[cntrlngPerIndex] : [],\r\n        is_tax_resident_of_aus : invFormStatus.errors?.is_tax_resident_of_aus? invFormStatus.errors?.is_tax_resident_of_aus[cntrlngPerIndex] : [],\r\n        is_investor_entity_tax_resident_outside_aus_ctrl : invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus_ctrl? invFormStatus.errors?.is_investor_entity_tax_resident_outside_aus_ctrl[cntrlngPerIndex] : [],\r\n        tfn : invFormStatus.errors?.tfn? invFormStatus.errors?.tfn[cntrlngPerIndex] : [],\r\n        tax_residence_countries: invFormStatus.errors?.tax_residence_countries? invFormStatus.errors?.tax_residence_countries[cntrlngPerIndex] : [],\r\n        residence_rights_cbi_rbi:invFormStatus.errors?.residence_rights_cbi_rbi? invFormStatus.errors?.residence_rights_cbi_rbi[cntrlngPerIndex] : [],\r\n        residence_rights_other_juris:invFormStatus.errors?.residence_rights_other_juris? invFormStatus.errors?.residence_rights_other_juris[cntrlngPerIndex] : [],\r\n        more_days_other_juris:invFormStatus.errors?.more_days_other_juris? invFormStatus.errors?.more_days_other_juris[cntrlngPerIndex] : [],\r\n        income_tax_other_juris:invFormStatus.errors?.income_tax_other_juris? invFormStatus.errors?.income_tax_other_juris[cntrlngPerIndex] : []\r\n    }\r\n\r\n    const scndNFourIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[errScndNFourInd+2] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[errScndNFourInd+2] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[errScndNFourInd+2] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[errScndNFourInd+2] : [],\r\n    }\r\n\r\n    const thirNFivIndErrMsgs = {\r\n        country :  invFormStatus.errors?.country? invFormStatus.errors?.country[errThirNFivInd+2] : [],\r\n        tin :  invFormStatus.errors?.tin? invFormStatus.errors?.tin[errThirNFivInd+2] : [],\r\n        reason_for_no_tin :  invFormStatus.errors?.reason_for_no_tin? invFormStatus.errors?.reason_for_no_tin[errThirNFivInd+2] : [],\r\n        explanation_for_tin_not_issued :  invFormStatus.errors?.explanation_for_tin_not_issued? invFormStatus.errors?.explanation_for_tin_not_issued[errThirNFivInd+2] : [],\r\n    }\r\n\r\n    // const tempCountryDetailsIndex = cntrlngPerIndex+2\r\n    // const firstCountryIndex = tempCountryDetailsIndex + 0; //for storing 4 types of values in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    // const secondCountryIndex = tempCountryDetailsIndex + 1;\r\n\r\n    // const tempCountryDetailsIndex = cntrlngPerIndex+2\r\n    // const firstCountryIndex = cntrlngPerIndex + 2 + cntrlngPerIndex; //for storing 4 types of values in address_details arry (indices 0,1 already using in tax-residency-cntry-details)\r\n    // const secondCountryIndex = cntrlngPerIndex + 2 + cntrlngPerIndex + 1\r\n   \r\n    // const getValueCountryType = (keyName, cntryIndex) =>{\r\n    //     const address = secG?.tax_residence_country_details.find((each)=> each?.type === CONTROLLING_PERSON_TYPE_G && each?.cntryIndex === cntryIndex) || {};\r\n    //     const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" //return val even if it's zero\r\n    //     return val\r\n    // }\r\n\r\n    const getValueCountryType = (keyName, cntryIndex) =>{\r\n        const allAddressDetArr = secG?.tax_residence_country_details?.filter((each)=> each?.type === CONTROLLING_PERSON_TYPE_G && each?.controlling_per_num === cntrlnPerNum) || [];\r\n        const address = allAddressDetArr.find((each, index)=> each?.type === CONTROLLING_PERSON_TYPE_G && index === cntryIndex) || {};\r\n        const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" \r\n        return val\r\n    }\r\n\r\n    const getValueCntrlPersonDetails = (keyName) => {\r\n        const address = secG?.controlling_person_details.find((each, index)=> index === cntrlngPerIndex) || {};\r\n        const val = address[keyName] || address[keyName]===0 ? address[keyName] : \"\" \r\n        return val\r\n    }\r\n\r\n    const getIsItemChkd = (value, subLevelKey) => {\r\n        const currTxCntrs = getValueCntrlPersonDetails(subLevelKey, cntrlngPerIndex)\r\n        const activeItems = currTxCntrs? [...currTxCntrs] : []\r\n        return activeItems.includes(value)\r\n    }\r\n\r\n    const onChangeIn = ({name, value}) => {\r\n        onFormChange({name, value, level:\"controlling_person_details\", cntrlngPerIndex}) \r\n    }\r\n    const onChageRadioFn = ({name, value}) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value: convrtToNum, level:\"controlling_person_details\", cntrlngPerIndex});        \r\n    }\r\n\r\n    const eachOnChange = ({ name, value }) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onChageRadioFn({ name, value: convrtToNum });\r\n        if(name === 'is_tax_resident_of_aus' && convrtToNum === NO_G){\r\n            onChageRadioFn({\r\n                name: 'is_investor_entity_tax_resident_outside_aus',\r\n                value: YES_G\r\n            });\r\n        }\r\n    }\r\n\r\n    const onChangeCountry = ({name, value, cntryIndex}) =>{\r\n        onFormChange({name, value, level:\"country_details\", countryType:CONTROLLING_PERSON_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const noTinReasonDropDwn = ({name, value, cntryIndex}) => {\r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value:convrtToNum, level:\"country_details\", countryType:CONTROLLING_PERSON_TYPE_G, cntryIndex, cntrlnPerNum})\r\n    }\r\n\r\n    const onChangeChkBoxIn = ({name, value, subLevelKey}) => {\r\n        // const currTxCntrs = getValueCntrlPersonDetails('tax_resident_countries', cntrlngPerIndex)\r\n        const convrtToNum = value && parseInt(value);\r\n        const currTxCntrs = getValueCntrlPersonDetails(subLevelKey, cntrlngPerIndex)\r\n        const activeItems = currTxCntrs? [...currTxCntrs] : []\r\n        const isNoneOfAbove = activeItems.indexOf(TAX_RESIDENCE_CHKBX_OTHER_G); //check if has None of the above option\r\n        const indexOfItem = activeItems.indexOf(convrtToNum); //get index if item is there inside list\r\n        \r\n        if(subLevelKey === \"tax_residence_countries\"){ //code specific only for check boxes having \"None of the above\" type\r\n            if(convrtToNum === TAX_RESIDENCE_CHKBX_OTHER_G){\r\n                activeItems.splice(0,activeItems.length); //remve everythin from the array\r\n                isNoneOfAbove === -1 && activeItems.push(TAX_RESIDENCE_CHKBX_OTHER_G);//removed everything and add only none-of-above val \r\n            } else {\r\n                isNoneOfAbove > -1 && activeItems.splice(isNoneOfAbove, 1); //remove the element from array if already present\r\n                indexOfItem > -1 && activeItems.splice(indexOfItem, 1); //remove the element from array if already present\r\n                indexOfItem === -1 && activeItems.push(convrtToNum); //add element to the array\r\n            }\r\n        } else {\r\n            indexOfItem > -1 && activeItems.splice(indexOfItem, 1); //remove the element from array if already present\r\n            indexOfItem === -1 && activeItems.push(convrtToNum); //add element to the array\r\n        }\r\n\r\n        onFormChange({name, value:[...activeItems], level:\"controlling_person_details\", cntrlngPerIndex});        \r\n        return\r\n    }\r\n\r\n    const onChangeCntrlPerType = ({name, value})=> {\r\n        onChangeChkBoxIn({name, value, subLevelKey:'type'})\r\n    }\r\n\r\n    const countryValue = () => {\r\n\r\n        const findCountry = getValueCntrlPersonDetails(\"country\");\r\n\r\n        const value = options.find((country) => {\r\n        if(findCountry){\r\n          return  country.label?.toLowerCase() === findCountry?.toLowerCase();\r\n        }\r\n        return false\r\n        });\r\n        return value || null;\r\n    }\r\n\r\n    const onChangeSelectHandler = (value) => {\r\n        onChangeIn({ name: 'country', value: value.label })\r\n    }\r\n\r\n  return (\r\n    <div className=\"u-margin-bottom-lg\">\r\n        <h5 className=\"u-padding-y\">Controlling Person {cntrlngPerIndex+1}</h5>\r\n        <div>\r\n            <h6>Type of Controlling Person<span>*</span></h6>\r\n            <div className=\"u-padding-y\">\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={TRUSTEE_G}\r\n                    id={`sec-g-type-trustee-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Trustee\"\r\n                    checked={getIsItemChkd(TRUSTEE_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={TRUST_SETTLOR_G}\r\n                    id={`sec-g-type-trust-settlor-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Trust Settlor\"\r\n                    checked={getIsItemChkd(TRUST_SETTLOR_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={BENEFICIARY_G}\r\n                    id={`sec-g-type-beneficiary-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Beneficiary\"\r\n                    checked={getIsItemChkd(BENEFICIARY_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={BENEFICIAL_OWNER_G}\r\n                    id={`sec-g-type-beneficial-owner-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Beneficial Owner (as defined in Note below)\"\r\n                    checked={getIsItemChkd(BENEFICIAL_OWNER_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n\r\n                <CustomCheckbox \r\n                    name=\"type\"\r\n                    val={PROTECTOR_G}\r\n                    id={`sec-g-type-protector-${cntrlngPerIndex}`}\r\n                    styleType=\"dark\"\r\n                    content=\"Protector\"\r\n                    checked={getIsItemChkd(PROTECTOR_G, 'type')}\r\n                    onChangeFn={onChangeCntrlPerType}\r\n                />\r\n                {cntrlnPerErrMsgs?.type?.length? <div className=\"input__desc\">\r\n                    {renderErrorTxt(cntrlnPerErrMsgs?.type)}\r\n                </div>: null}\r\n            </div>\r\n\r\n            <div className=\"sub__form\">\r\n                <CustomTextField \r\n                    placeholder=\"Mr / Mrs / Dr / Ms\"\r\n                    id={`sec-g-cp-1-title-${cntrlngPerIndex}`}\r\n                    label=\"Title\"\r\n                    asterisk=\"\"\r\n                    name=\"title\"\r\n                    value={getValueCntrlPersonDetails(\"title\")}\r\n                    // value={secG?.controlling_person_details[0]?.title || \"\"}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField \r\n                    id={`sec-g-cp-1-dob-${cntrlngPerIndex}`}\r\n                    label=\"Date of birth\"\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    inputType=\"date\"\r\n                    asterisk=\"*\" \r\n                    name=\"dob\"\r\n                    // value={secG?.controlling_person_details[0]?.dob || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"dob\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                    maxDate={dateBefore18Years?.split(\"T\")[0]}\r\n                />\r\n\r\n                <CustomTextField \r\n                    placeholder=\"Surname\"\r\n                    id={`sec-g-cp-1-surname-${cntrlngPerIndex}`}\r\n                    label=\"Surname\"\r\n                    asterisk=\"*\"\r\n                    name=\"surname\"\r\n                    // value={secG?.controlling_person_details[0]?.surname || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"surname\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n                <CustomTextField \r\n                    placeholder=\"Given Name\"\r\n                    id={`sec-g-cp-1-given-${cntrlngPerIndex}`}\r\n                    label=\"Given Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"given_name\"\r\n                    // value={secG?.controlling_person_details[0]?.given_name || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"given_name\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Unit No./Level\"\r\n                    id={`sec-g-cp-1-unit-${cntrlngPerIndex}`}\r\n                    label=\"Unit No./Level\"\r\n                    asterisk=\"\"\r\n                    name=\"unit_no\"\r\n                    value={getValueCntrlPersonDetails(\"unit_no\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Number\"\r\n                    id={`sec-g-cp-1-street-no-${cntrlngPerIndex}`}\r\n                    label=\"Street Number\"\r\n                    asterisk=\"\"\r\n                    name=\"street_no\"\r\n                    value={getValueCntrlPersonDetails(\"street_no\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n\r\n                <CustomTextField\r\n                    placeholder=\"Street Name\"\r\n                    id={`sec-g-cp-1-street-${cntrlngPerIndex}`}\r\n                    label=\"Street Name\"\r\n                    asterisk=\"*\"\r\n                    name=\"street_name\"\r\n                    value={getValueCntrlPersonDetails(\"street_name\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n                <CustomTextField \r\n                    placeholder=\"Postcode\"\r\n                    id={`sec-g-cp-1-postcode-${cntrlngPerIndex}`}\r\n                    label=\"Postcode\"\r\n                    asterisk=\"*\"\r\n                    name=\"postcode\"\r\n                    // value={secG?.controlling_person_details[0]?.postcode || \"\"}\r\n                    value={getValueCntrlPersonDetails(\"postcode\")}\r\n                    onChangeFn={onChangeIn}\r\n                    formErrors={cntrlnPerErrMsgs}\r\n                />\r\n                <div className=\"country__dropdown u-margin-bottom-3\">\r\n                    <label>Country <span>*</span></label>\r\n                    <Select\r\n                        className={cntrlnPerErrMsgs?.country_ctrl?.length && 'incorrect'}\r\n                        id=\"select-dropdown-country\"\r\n                        name=\"country_ctrl\"\r\n                        autoFocus={false}\r\n                        options={options}\r\n                        placeholder=\"Select a Country\"\r\n                        value={countryValue()}\r\n                        onChange={onChangeSelectHandler}\r\n                    />\r\n\r\n                    {cntrlnPerErrMsgs?.country_ctrl?.length?\r\n                    <div className=\"input__desc\">\r\n                        {renderErrorTxt(cntrlnPerErrMsgs?.country_ctrl)}\r\n                    </div>: null}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"u-padding-10y\">\r\n                <h6>1. Is the Controlling Person a tax resident of Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name={`is_tax_resident_of_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-tax-res-yes-${cntrlngPerIndex}`}\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_tax_resident_of_aus === YES_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === YES_G}\r\n                    onChangeFn={({ name, value }) => eachOnChange({name:\"is_tax_resident_of_aus\", value })}\r\n                    />\r\n                <CustomRadioInput\r\n                    name={`is_tax_resident_of_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-tax-res-no-${cntrlngPerIndex}`}\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_tax_resident_of_aus === NO_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === NO_G}\r\n                    onChangeFn={({name, value})=>eachOnChange({name:\"is_tax_resident_of_aus\", value })}\r\n                />\r\n                {cntrlnPerErrMsgs?.is_tax_resident_of_aus?.length? <div className=\"input__desc\">\r\n                    {renderErrorTxt(cntrlnPerErrMsgs?.is_tax_resident_of_aus)}\r\n                </div>: null}\r\n                {getValueCntrlPersonDetails(\"is_tax_resident_of_aus\", 0) === YES_G?\r\n                <TfnNumCntrlPerson \r\n                    cntrlngPerIndex={cntrlngPerIndex}\r\n                    onChangeIn={onChangeIn}\r\n                    value={getValueCntrlPersonDetails('tfn')}\r\n                    formErrors={cntrlnPerErrMsgs}/> : null}\r\n            </div> \r\n\r\n            <div  className=\"u-padding-10y\">\r\n                <h6>2. Is the Controlling Person a US citizen or tax resident of a country other than Australia?<span>*</span></h6>\r\n                <CustomRadioInput\r\n                    name={`is_investor_entity_tax_resident_outside_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-intl-res-yes-${cntrlngPerIndex}`}\r\n                    content=\"Yes\"\r\n                    val={YES_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_investor_entity_tax_resident_outside_aus === YES_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G}\r\n                    onChangeFn={({name, value})=>eachOnChange({name:\"is_investor_entity_tax_resident_outside_aus\", value })}\r\n                />\r\n                <CustomRadioInput\r\n                    name={`is_investor_entity_tax_resident_outside_aus-${cntrlngPerIndex}`}\r\n                    id={`sec-g-cp-1-intl-res-no-${cntrlngPerIndex}`}\r\n                    content=\"No\"\r\n                    val={NO_G}\r\n                    // checked={secG?.controlling_person_details[0]?.is_investor_entity_tax_resident_outside_aus === NO_G}\r\n                    checked={getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === NO_G}\r\n                    onChangeFn={({name, value})=>eachOnChange({name:\"is_investor_entity_tax_resident_outside_aus\", value })}\r\n                />\r\n                {cntrlnPerErrMsgs?.is_investor_entity_tax_resident_outside_aus_ctrl?.length? <div className=\"input__desc\">\r\n                    {renderErrorTxt(cntrlnPerErrMsgs?.is_investor_entity_tax_resident_outside_aus_ctrl)}\r\n                </div>: null}\r\n            </div>\r\n\r\n            {getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G?\r\n            <ResidenceDetailsOther \r\n            cntrlngPerIndex={cntrlngPerIndex} \r\n            firstCountryIndex={firstCountryIndex} \r\n            secondCountryIndex={secondCountryIndex} \r\n            getValueCountryType={getValueCountryType} \r\n            onChangeCountry={onChangeCountry} \r\n            noTinReasonDropDwn={noTinReasonDropDwn} \r\n            scndNFourIndErrMsgs={scndNFourIndErrMsgs} \r\n            thirNFivIndErrMsgs={thirNFivIndErrMsgs} \r\n            cntrlnPerNum={cntrlnPerNum}/>: null}\r\n\r\n        </div>\r\n            {getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G? \r\n            <CntrlPerTaxResidentCountries \r\n            onChangeChkBoxIn={onChangeChkBoxIn} \r\n            getIsItemChkd={getIsItemChkd} \r\n            cntrlngPerIndex={cntrlngPerIndex} \r\n            formErrors={cntrlnPerErrMsgs}\r\n            onFormChange={onFormChange}/> : null}\r\n\r\n            {getValueCntrlPersonDetails(\"is_investor_entity_tax_resident_outside_aus\", 0) === YES_G && !getIsItemChkd(TAX_RESIDENCE_CHKBX_OTHER_G, \"tax_residence_countries\")? \r\n            <CntrlPerExtraDetails \r\n            getValueCntrlPersonDetails={getValueCntrlPersonDetails} \r\n            onChageRadioFn={onChageRadioFn} \r\n            cntrlngPerIndex={cntrlngPerIndex} \r\n            formErrors={cntrlnPerErrMsgs}/>: null}\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default ControllingPersonDetails ","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NO_G, YES_G } from '../../../../../constants';\r\nimport CustomRadioInput from '../../../Layout/CustomRadioInput';\r\nimport IdentifyPepName from \"./IdentifyPepName\"\r\nimport ControllingPersonDetails from './ControllingPersonDetails'\r\nimport { renderErrorTxt } from '../../../../../utils/validations/Investor-Application-Form/formErrorUtils';\r\n\r\nconst ControllingPersons = ({onFormChange}) => {\r\n  \r\n    const secG = useSelector((store)=>store.secG);\r\n    const invFormStatus = useSelector((store) => store.invFormStatus)\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            onChangeFn({name:\"are_controlling_person_pep\", value:\"\"});\r\n            onChangeFn({name:\"are_controlling_person_relation_outside_aus\", value:\"\"});\r\n        }\r\n    },[])\r\n\r\n    const onChangeFn = ({name, value}) =>{ \r\n        const convrtToNum = value && parseInt(value);\r\n        onFormChange({name, value:convrtToNum});\r\n    }\r\n  \r\n    return (\r\n    <div className=\"section__container\">\r\n            <h4 className=\"section__container--subtitle\">G.3 Controlling Persons</h4>\r\n\r\n            <div className=\"section__container--box\">\r\n                <div className=\"normal-text u-margin-bottom\">\r\n                    <p>A Controlling Person is any individual who directly or indirectly exercises control over an entity. For a Trust, this includes all Trustees, Settlors, Protectors and Beneficiaries. For a company, this includes any beneficial owners controlling more than 25% of company shares or senior managing officials.</p>\r\n                </div>\r\n\r\n               <div className=\"u-margin-bottom-lg\">\r\n                    <div className=\"u-padding-10y\">\r\n                        <h6>1. Are any of the Controlling Persons, in relation to the Investor, a Politically Exposed Person (see Note below) <span>*</span></h6>\r\n                        <div>\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_pep\"\r\n                                id=\"sec-g-cp-inv-pep-yes\"\r\n                                content=\"Yes\"\r\n                                val={YES_G}\r\n                                checked={secG?.are_controlling_person_pep === YES_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_pep\"\r\n                                id=\"sec-g-cp-inv-pep-no\"\r\n                                content=\"No\"\r\n                                val={NO_G}\r\n                                checked={secG?.are_controlling_person_pep === NO_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            {invFormStatus.errors?.are_controlling_person_pep? <div className=\"input__desc\">\r\n                                {renderErrorTxt(invFormStatus.errors?.are_controlling_person_pep)}\r\n                            </div>: null}\r\n                            {secG?.are_controlling_person_pep === YES_G? <IdentifyPepName onFormChange={onFormChange}/>: null}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"u-padding-10y\">\r\n                        <h6>2. Are any of the Controlling Persons, in relation to the Investor, tax residents of a jurisdiction outside Australia?<span>*</span></h6>\r\n                        <div>\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_relation_outside_aus\"\r\n                                id=\"sec-g-cp-outside-aus-yes\"\r\n                                content=\"Yes - please complete below for each Controlling Person who is a tax resident of a jurisdiction outside Australia\"\r\n                                val={YES_G}\r\n                                type=\"\"\r\n                                checked={secG?.are_controlling_person_relation_outside_aus === YES_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            <CustomRadioInput\r\n                                name=\"are_controlling_person_relation_outside_aus\"\r\n                                id=\"sec-g-cp-outside-aus-no\"\r\n                                content=\"No - please proceed to Section H\"\r\n                                val={NO_G}\r\n                                type=\"\"\r\n                                checked={secG?.are_controlling_person_relation_outside_aus === NO_G}\r\n                                onChangeFn={onChangeFn}\r\n                            />\r\n                            {invFormStatus.errors?.are_controlling_person_relation_outside_aus? <div className=\"input__desc\">\r\n                                {renderErrorTxt(invFormStatus.errors?.are_controlling_person_relation_outside_aus)}\r\n                            </div>: null}\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n\r\n                {secG?.are_controlling_person_relation_outside_aus === YES_G?\r\n                <>\r\n                    <ControllingPersonDetails onFormChange={onFormChange} cntrlngPerIndex={0}/>\r\n                    <ControllingPersonDetails onFormChange={onFormChange} cntrlngPerIndex={1}/>\r\n                </> : null}\r\n            </div>\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default ControllingPersons;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TaxStatus from './SubSections/TaxStatus';\r\nimport TaxResidency from './SubSections/TaxResidency';\r\nimport ControllingPersons from './SubSections/ControllingPersons';\r\nimport { PASSIVE_NFE_G, YES_G, PASSIVE_INCOME_MORE_THAN_50_G, OTHER_ENTITY_G } from '../../../../constants';\r\n\r\nconst SectionGContent = ({onFormChange}) => {\r\n    const secG = useSelector((store)=>store.secG); \r\n    const invFormStatus = useSelector((store) => store.invFormStatus);\r\n\r\n  return (\r\n    <div className=\"section\"> \r\n        <h2 className=\"section__heading\">Section G: Tax Information</h2>\r\n        <ul>\r\n            <li>Section G must be completed for investors that are Australian company, a Foreign company, a Trust or a Superannuation Fund.</li>\r\n        </ul>\r\n\r\n        <TaxStatus onFormChange={onFormChange} />\r\n\r\n        {/* Section G2 */}\r\n        {secG?.fatca_and_crs_status === PASSIVE_NFE_G || secG?.is_located_in_non_participating_crs_jurisdiction === YES_G || secG?.active_non_financial_entity_type === PASSIVE_INCOME_MORE_THAN_50_G || secG?.active_non_financial_entity_type === OTHER_ENTITY_G ? \r\n            <TaxResidency onFormChange={onFormChange} />: null\r\n        }\r\n        \r\n        {secG?.fatca_and_crs_status === PASSIVE_NFE_G || secG?.is_located_in_non_participating_crs_jurisdiction === YES_G ?\r\n            <ControllingPersons onFormChange={onFormChange} />: null\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionGContent;"],"names":["_ref","onChangeInp","secG","formErrors","useEffect","name","value","_jsx","className","children","CustomTextField","placeholder","id","label","type","asterisk","fatca_status_description","onChangeFn","_invFormStatus$errors","_invFormStatus$errors2","_invFormStatus$errors3","_invFormStatus$errors4","invFormStatus","useSelector","store","_jsxs","giin","errors","CustomRadioInput","content","val","DEEMED_COMPLIANT_FINANCIAL_INSTITUTION_G","checked","fatca_status_exclude_giin","EXCEPTED_FINANCIAL_INSTITUTION_G","NON_REPORTING_IGA_FINANCIAL_INSTITUTION_G","NON_PARTICIPATING_FINANCIAL_INSTITUTION_G","OTHER_FACTA_STATUS_G","renderErrorTxt","TrusteeGiinComp","trustee_giin","OtherFactaInp","YES_G","is_located_in_non_participating_crs_jurisdiction","NO_G","AUSTRALIAN_PUBLIC_LISTED_COMPANY_G","active_non_financial_entity_type","FOREIGN_PUBLIC_LISTED_COMPANY_G","GOVERNMENTAL_ENTITY_G","PASSIVE_INCOME_MORE_THAN_50_G","OTHER_ENTITY_G","onFormChange","_ref3","convrtToNum","parseInt","FINANCIAL_INSTITUTION_G","fatca_and_crs_status","ACTIVE_NFE_G","PASSIVE_NFE_G","GiinAndStatus","_ref2","ActiveNonFinancialEntity","href","_formErrors$explanati","getValueCountryType","onChangeCountry","cntryIndex","cntrlnPerNum","countryType","htmlFor","concat","required","onChange","e","target","explanation_for_tin_not_issued","length","uniqId","_errrMsg$reason_for_n","noTinReasonDropDwn","errrMsg","_Fragment","Form","as","COUNTRY_OF_RESIDENCE_DOES_NOT_ISSUE_TINS_TO_TAX_RESIDENTS","INDIVIDUAL_HAS_NOT_BEEN_ISSUED_WITH_A_TIN","COUNTRY_OF_RESIDENCE_DOES_NOT_REQUIRE_THE_TIN_TO_BE_DISCLOSED","reason_for_no_tin","NoTinExplain","_invFormStatus$errors5","_invFormStatus$errors6","_invFormStatus$errors7","_invFormStatus$errors8","_invFormStatus$errors9","_invFormStatus$errors10","_invFormStatus$errors11","_invFormStatus$errors12","_invFormStatus$errors13","_invFormStatus$errors14","_invFormStatus$errors15","_invFormStatus$errors16","_zeroIndErrMsgs$count","_zeroIndErrMsgs$count2","_firstIndErrMsgs$coun","_firstIndErrMsgs$coun2","dispatch","useDispatch","options","useMemo","countryList","getData","zeroIndErrMsgs","country","tin","firstIndErrMsgs","level","INVESTOR_ENTITY_TYPE_G","keyName","_secG$tax_residence_c","address","tax_residence_country_details","filter","each","find","index","countryValue","findCountry","_country$label","toLowerCase","clearGResidenceDetails","residenceType","Select","autoFocus","_ref4","NoTinReason","_ref5","tfn_aus","trimmedVal","replaceAllWhiteSpaces","tfn_exemption_aus","is_investor_entity_tax_resident_of_aus","TfnDetails","is_investor_entity_tax_resident_outside_aus","TaxResidentCountries","position","getPepDet","pepDetIndex","controlling_person_pep_details","onChangePepDet","_ref6","onChangeIn","cntrlngPerIndex","_formErrors$tax_resid","onChangeChkBoxIn","getIsItemChkd","chkBxNname","onChangeChkBx","subLevelKey","checkedStatus","CustomCheckbox","styleType","TAX_RESIDENCE_CHKBX_OTHER_G","tax_residence_countries","_formErrors$residence","_formErrors$residence2","_formErrors$more_days","_formErrors$income_ta","getValueCntrlPersonDetails","onChageRadioFn","onChangeCbiRbi","onChangeRights","onChangeMoreDays","onChangeIncmtxJur","residence_rights_cbi_rbi","residence_rights_other_juris","more_days_other_juris","income_tax_other_juris","_scndNFourIndErrMsgs$","_scndNFourIndErrMsgs$2","_thirNFivIndErrMsgs$c","_thirNFivIndErrMsgs$c2","firstCountryIndex","secondCountryIndex","scndNFourIndErrMsgs","thirNFivIndErrMsgs","CONTROLLING_PERSON_TYPE_G","React","_invFormStatus$errors17","_invFormStatus$errors18","_invFormStatus$errors19","_invFormStatus$errors20","_invFormStatus$errors21","_invFormStatus$errors22","_invFormStatus$errors23","_invFormStatus$errors24","_invFormStatus$errors25","_invFormStatus$errors26","_invFormStatus$errors27","_invFormStatus$errors28","_invFormStatus$errors29","_invFormStatus$errors30","_invFormStatus$errors31","_invFormStatus$errors32","_invFormStatus$errors33","_invFormStatus$errors34","_invFormStatus$errors35","_invFormStatus$errors36","_invFormStatus$errors37","_invFormStatus$errors38","_invFormStatus$errors39","_invFormStatus$errors40","_invFormStatus$errors41","_invFormStatus$errors42","_invFormStatus$errors43","_invFormStatus$errors44","_invFormStatus$errors45","_invFormStatus$errors46","_invFormStatus$errors47","_invFormStatus$errors48","_invFormStatus$errors49","_invFormStatus$errors50","_invFormStatus$errors51","_invFormStatus$errors52","_cntrlnPerErrMsgs$typ","_cntrlnPerErrMsgs$cou","_cntrlnPerErrMsgs$cou2","_cntrlnPerErrMsgs$is_","_cntrlnPerErrMsgs$is_2","_ref$cntrlngPerIndex","errScndNFourInd","errThirNFivInd","dateBefore18Years","moment","subtract","format","cntrlnPerErrMsgs","title","surname","given_name","dob","unit_no","street_no","street_name","postcode","country_ctrl","is_tax_resident_of_aus","is_investor_entity_tax_resident_outside_aus_ctrl","tfn","controlling_person_details","currTxCntrs","_toConsumableArray","includes","eachOnChange","_ref7","activeItems","isNoneOfAbove","indexOf","indexOfItem","splice","push","onChangeCntrlPerType","_ref8","TRUSTEE_G","TRUST_SETTLOR_G","BENEFICIARY_G","BENEFICIAL_OWNER_G","PROTECTOR_G","inputType","maxDate","split","_ref9","_ref10","TfnNumCntrlPerson","_ref11","_ref12","ResidenceDetailsOther","controlling_per_num","CntrlPerTaxResidentCountries","CntrlPerExtraDetails","are_controlling_person_pep","IdentifyPepName","are_controlling_person_relation_outside_aus","ControllingPersonDetails","TaxStatus","TaxResidency","ControllingPersons"],"sourceRoot":""}